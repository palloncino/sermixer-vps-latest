{"version":3,"file":"static/js/48.dee6009b.chunk.js","mappings":"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","sources":["components/DocumentsList/StatusCell.tsx","components/EuroTextField/index.tsx","components/MarkdownEditor/index.tsx","components/ProductPriceSummary/index.tsx","components/EditableDescription/index.tsx","components/SummaryQuote/SummaryComponentList.tsx","utils/determine-actor.ts","pages/documents/components/PDFPreviewGrid.tsx","pages/documents/components/Revisions.tsx","pages/documents/components/ChangeLogList.tsx","pages/documents/components/ActionsTab.tsx","pages/documents/components/TabPanel.tsx","pages/documents/components/DocumentManagementPanel.tsx","pages/documents/components/LockView.tsx","components/FormattedPrice/index.tsx","components/PriceSummary/index.tsx","utils/calculate-price-summary.ts","components/ClientPreventiveHeadComponent/index.tsx","pages/documents/components/DocumentFooter.tsx","hooks/useBusinessSignature.ts","pages/documents/components/PreventiveForm.tsx","pages/documents/shared-document.tsx","utils/format-price.ts"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport Tooltip from '@mui/material/Tooltip'; // Import Tooltip\n\ninterface StatusCellProps {\n  statuses: {\n    [key: string]: boolean;\n  };\n  compact?: boolean; // New prop to determine view type\n}\n\n// Styled components for status labels\nconst StatusLabel = styled.span<{ bgColor: string; textColor: string }>`\n  padding: 0.25rem 0.5rem;\n  font-size: ${(props) => (props.compact ? '0.625rem' : '0.75rem')}; // Smaller font for compact view\n  font-weight: 600;\n  border-radius: 9999px; /* Fully rounded */\n  display: inline-flex;\n  align-items: center;\n  margin-bottom: 0.25rem; /* Space between labels */\n  background-color: ${(props) => props?.bgColor};\n  color: ${(props) => props.textColor};\n`;\n\nconst StatusCell: React.FC<StatusCellProps> = ({ statuses, compact }) => {\n  const { t } = useTranslation();\n\n  // Mapping of status strings to their corresponding styles\n  const statusStyles: { [key: string]: { bgColor: string; textColor: string } } = {\n    CLIENT_VIEWED_DOC: { bgColor: \"#d1fae5\", textColor: \"#065f46\" }, // Light green\n    YOUR_TURN: { bgColor: \"#d1fae5\", textColor: \"#065f46\" }, // Light green\n    FINALIZED: { bgColor: \"#d1fae5\", textColor: \"#065f46\" }, // Light green\n    REJECTED: { bgColor: \"#fee2e2\", textColor: \"#b91c1c\" }, // Light red\n    // Add more statuses as needed\n  };\n\n  // Check if there are any statuses\n  const hasStatus = Object.values(statuses).some(value => value);\n\n  return (\n    <td className=\"px-6 py-4 whitespace-nowrap\">\n      <div className=\"flex flex-col\">\n        {Object.entries(statuses).map(([status, value]) => {\n          const style = statusStyles[status];\n          const label = value ? t(status) : t(status); // Use translation key for active status\n\n          return compact ? (\n            <Tooltip title={label} key={status}>\n              <StatusLabel\n                bgColor={value ? style?.bgColor : \"#f3f4f6\"} // Grey background for false statuses\n                textColor={value ? style?.textColor : \"#a1a1a1\"} // Grey text for false statuses\n                compact={compact} // Pass compact prop for styling\n              >\n                {/* Display a compact icon or status indicator */}\n                <span>{value ? '•' : '○'}</span> {/* Example of a dot for status */}\n              </StatusLabel>\n            </Tooltip>\n          ) : (\n            <StatusLabel\n              style={{marginRight: '.4rem'}}\n              key={status}\n              bgColor={value ? style?.bgColor : \"#f3f4f6\"} // Grey background for false statuses\n              textColor={value ? style?.textColor : \"#a1a1a1\"} // Grey text for false statuses\n              compact={compact} // Pass compact prop for styling\n            >\n              {label}\n            </StatusLabel>\n          );\n        })}\n      </div>\n    </td>\n  );\n};\n\nexport default StatusCell;\n","import React from \"react\";\nimport { TextField, InputAdornment } from \"@mui/material\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\nimport styled from \"styled-components\";\n\nconst StyledTextField = styled(TextField)`\n  & .MuiInputBase-input {\n    background: #fff;\n    text-align: right;\n  }\n`;\n\ninterface EuroTextFieldProps {\n  label: string;\n  value: string;\n  onChange: (value: string) => void;\n  fullWidth?: boolean;\n  sx?: object;\n  readOnly?: boolean;\n}\n\nconst EuroTextField: React.FC<EuroTextFieldProps> = ({\n  label,\n  value,\n  onChange,\n  fullWidth = false,\n  sx,\n  readOnly,\n}) => {\n  const handleValueChange: NumericFormatProps['onValueChange'] = (values) => {\n    const { formattedValue, value } = values;\n    onChange(value); // Pass the numeric value to the parent\n  };\n\n  return (\n    <NumericFormat\n      customInput={StyledTextField}\n      label={label}\n      value={value}\n      onValueChange={handleValueChange}\n      thousandSeparator=\".\"\n      decimalSeparator=\",\"\n      decimalScale={2}\n      fixedDecimalScale\n      fullWidth={fullWidth}\n      sx={sx}\n      InputProps={{\n        startAdornment: <InputAdornment position=\"start\">€</InputAdornment>,\n        readOnly: readOnly ? true : undefined,\n      }}\n    />\n  );\n};\n\nexport default EuroTextField;\n","import React from 'react';\nimport MDEditor from '@uiw/react-md-editor';\nimport { Box } from '@mui/material';\n\ninterface MarkdownEditorProps {\n    value: string;\n    onChange: (value: string) => void;\n    readOnly?: boolean;\n}\n\nconst MarkdownEditor: React.FC<MarkdownEditorProps> = ({ value, onChange, readOnly }) => {\n    return (\n        <Box data-color-mode=\"light\">\n            <MDEditor\n                value={value}\n                onChange={(val) => onChange(val || '')}\n                preview={readOnly ? 'preview' : 'edit'}\n                hideToolbar={readOnly}\n                height={400}\n                visibleDragbar={false}\n            />\n        </Box>\n    );\n};\n\nexport default MarkdownEditor;\n","import React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { ProductType, ComponentType } from '../../types';\nimport { formatPrice } from '../../utils/format-price';\n\ninterface ProductPriceSummaryProps {\n    product: ProductType;\n    components: ComponentType[];\n}\n\nconst ProductPriceSummary: React.FC<ProductPriceSummaryProps> = ({ product, components }) => {\n    const { t } = useTranslation();\n\n    const calculateDiscountedPrice = (price: number, discount: number | null | undefined) => {\n        const safeDiscount = discount ?? 0;\n        const result = price * (1 - safeDiscount / 100);\n        return result;\n    };\n\n    const componentTotal = components.reduce((total, component) => {\n        if (component.included) {\n            const discountedPrice = calculateDiscountedPrice(component.price, component.discount);\n            // Defensive: default quantity to 1 if missing or invalid\n            const quantity = (typeof component.quantity === 'number' && !isNaN(component.quantity)) ? component.quantity : 1;\n            return total + discountedPrice * quantity;\n        }\n        return total;\n    }, 0);\n\n    const productDiscountedPrice = calculateDiscountedPrice(product.price, product.discount);\n    const totalPrice = productDiscountedPrice + componentTotal;\n\n    return (\n        <Box sx={{ mt: 3, p: 2, border: '1px solid', borderColor: 'divider', borderRadius: 1 }}>\n            <Typography variant=\"h6\" gutterBottom>{t(\"ProductPriceSummary\")}</Typography>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                <Typography>{t(\"ProductPrice\")}</Typography>\n                <Typography>{formatPrice(productDiscountedPrice)} {t('EUR')}</Typography>\n            </Box>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                <Typography>{t(\"ComponentsTotal\")}</Typography>\n                <Typography>{formatPrice(componentTotal)} {t('EUR')}</Typography>\n            </Box>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', fontWeight: 'bold' }}>\n                <Typography>{t(\"TotalPrice\")} <span style={{fontSize: '.8rem', color: 'grey'}}>({t('WithoutTaxes')})</span></Typography>\n                <Typography>{formatPrice(totalPrice)} {t('EUR')}</Typography>\n            </Box>\n        </Box>\n    );\n};\n\nexport default ProductPriceSummary;","import React, { useState } from 'react';\nimport { Box, IconButton, Typography, Tooltip } from '@mui/material';\nimport MDEditor from '@uiw/react-md-editor';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save';\n\ninterface MarkdownEditorProps {\n  value: string;\n  onChange: (value: string) => void;\n  readOnly?: boolean;\n}\n\nconst MarkdownEditor: React.FC<MarkdownEditorProps> = ({ value, onChange, readOnly }) => {\n  return (\n    <Box data-color-mode=\"light\">\n      <MDEditor\n        value={value}\n        onChange={(val) => onChange(val || '')}\n        preview={readOnly ? 'preview' : 'edit'}\n        hideToolbar={readOnly}\n        height={400}\n        visibleDragbar={false}\n      />\n    </Box>\n  );\n};\n\ninterface EditableDescriptionProps {\n  initialDescription: string;\n  onSave: (newDescription: string) => void;\n}\n\nconst EditableDescription: React.FC<EditableDescriptionProps> = ({ initialDescription, onSave }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [description, setDescription] = useState(initialDescription);\n\n  const handleSave = () => {\n    onSave(description); // Call the parent onSave function\n    setIsEditing(false); // Switch back to view mode\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Typography variant=\"h6\">Component Description</Typography>\n        <Tooltip title={isEditing ? 'Save' : 'Edit'}>\n          <IconButton onClick={() => (isEditing ? handleSave() : setIsEditing(true))}>\n            {isEditing ? <SaveIcon /> : <EditIcon />}\n          </IconButton>\n        </Tooltip>\n      </Box>\n\n      <MarkdownEditor\n        value={description}\n        onChange={setDescription}\n        readOnly={!isEditing} // Enable editing based on the state\n      />\n    </Box>\n  );\n};\n\nexport default EditableDescription;\n","import AddIcon from \"@mui/icons-material/Add\";\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DiscountIcon from \"@mui/icons-material/LocalOffer\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport SortIcon from \"@mui/icons-material/Sort\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport { Box, Checkbox, FormControlLabel, IconButton, Popover, Slider, styled, TextField, Tooltip, Typography } from \"@mui/material\";\nimport EditableDescription from \"components/EditableDescription\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppState } from \"state/stateContext\";\nimport { ComponentType } from \"../../types\";\nimport { formatPrice } from \"../../utils/format-price\";\n\ninterface SummaryComponentListProps {\n  components: ComponentType[];\n  onComponentChange: (updatedComponents: ComponentType[]) => void;\n}\n\nconst SummaryComponentList: React.FC<SummaryComponentListProps> = React.memo(({\n  components,\n  onComponentChange\n}) => {\n  const { t } = useTranslation();\n  const [filter, setFilter] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState<'original' | 'asc' | 'desc'>('original');\n  const [localComponents, setLocalComponents] = useState<ComponentType[]>([]);\n  const { user } = useAppState();\n\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const [selectedComponent, setSelectedComponent] = useState<ComponentType | null>(null);\n  const [discountAnchorEl, setDiscountAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const [discountComponent, setDiscountComponent] = useState<ComponentType | null>(null);\n\n  const [globalDiscount, setGlobalDiscount] = useState<number>(0);\n  const [useGlobalDiscount, setUseGlobalDiscount] = useState<boolean>(false);\n\n  const [isEditingPrice, setIsEditingPrice] = useState(false);\n  const [newPrice, setNewPrice] = useState<number | null>(null);\n\n\n  useEffect(() => {\n    setLocalComponents(components.map((component, index) => ({\n      ...component,\n      originalIndex: index,\n      discount: component.discount || 0,\n      quantity: component.quantity || 1 // Ensure quantity is set\n    })));\n  }, [components]); // Add components as a dependency\n\n  const handleComponentToggle = (id: string, checked: boolean) => {\n    const updatedComponents = localComponents.map(component =>\n      component.id === id\n        ? {\n          ...component,\n          included: checked,\n          discount: checked && useGlobalDiscount ? globalDiscount : component.discount,\n          quantity: component.quantity // Ensure quantity is preserved\n        }\n        : component\n    );\n    setLocalComponents(updatedComponents);\n    onComponentChange(updatedComponents);\n  };\n\n  const handleCheckAll = (checked: boolean) => {\n    const updatedComponents = localComponents.map(component => ({\n      ...component,\n      included: checked,\n      discount: checked && useGlobalDiscount ? globalDiscount : component.discount,\n      quantity: component.quantity // Ensure quantity is preserved\n    }));\n    setLocalComponents(updatedComponents);\n    onComponentChange(updatedComponents);\n  };\n\n  const handleMoveComponent = (id: string, direction: 'up' | 'down') => {\n    const index = localComponents.findIndex(component => component.id === id);\n    const newIndex = direction === 'up' ? index - 1 : index + 1;\n    if (newIndex < 0 || newIndex >= localComponents.length) return;\n\n    const newComponents = [...localComponents];\n    const [removed] = newComponents.splice(index, 1);\n    newComponents.splice(newIndex, 0, removed);\n\n    const updatedComponents = newComponents.map((component, idx) => ({\n      ...component,\n      originalIndex: idx\n    }));\n\n    setLocalComponents(updatedComponents);\n    onComponentChange(updatedComponents);\n  };\n\n  const toggleSort = () => {\n    setSortOrder(current => {\n      if (current === 'original') return 'asc';\n      if (current === 'asc') return 'desc';\n      return 'original';\n    });\n  };\n\n  const handlePopoverOpen = (event: React.MouseEvent<HTMLButtonElement>, component: ComponentType) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedComponent(component);\n    setNewPrice(component.price); // Initialize price editing state\n    setIsEditingPrice(false); // Reset edit mode\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n    setSelectedComponent(null);\n  };\n\n  const handleDiscountPopoverOpen = (event: React.MouseEvent<HTMLButtonElement>, component: ComponentType) => {\n    setDiscountAnchorEl(event.currentTarget);\n    setDiscountComponent(component);\n  };\n\n  const handleDiscountPopoverClose = () => {\n    setDiscountAnchorEl(null);\n    setDiscountComponent(null);\n  };\n\n  const handleDiscountChange = (event: Event, newValue: number | number[]) => {\n    if (discountComponent) {\n      const updatedComponents = localComponents.map(component =>\n        component.id === discountComponent.id ? { ...component, discount: newValue as number } : component\n      );\n      setLocalComponents(updatedComponents);\n      onComponentChange(updatedComponents);\n      setDiscountComponent({ ...discountComponent, discount: newValue as number });\n    }\n  };\n\n  // Debounce function\n  const debounce = (func: Function, delay: number) => {\n    let timeoutId: NodeJS.Timeout;\n    return (...args: any) => {\n      if (timeoutId) clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n\n  const handleGlobalDiscountChange = debounce((value: number) => {\n    setGlobalDiscount(value);\n    if (useGlobalDiscount) {\n      const updatedComponents = localComponents.map(component => ({\n        ...component,\n        discount: component.included ? value : component.discount\n      }));\n      setLocalComponents(updatedComponents);\n      onComponentChange(updatedComponents);\n    }\n  }, 300); // Adjust the delay as needed\n\n  const handleUseGlobalDiscountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const useGlobal = event.target.checked;\n    setUseGlobalDiscount(useGlobal);\n    if (useGlobal) {\n      const updatedComponents = localComponents.map(component => ({\n        ...component,\n        discount: component.included ? globalDiscount : component.discount\n      }));\n      setLocalComponents(updatedComponents);\n      onComponentChange(updatedComponents);\n    }\n  };\n\n  const open = Boolean(anchorEl);\n  const discountOpen = Boolean(discountAnchorEl);\n\n  const filteredAndSortedComponents = useMemo(() => {\n    return [...localComponents]\n      .filter(component => component.name.toLowerCase().includes(filter.toLowerCase()))\n      .sort((a, b) => {\n        if (sortOrder === 'original') {\n          return a.originalIndex - b.originalIndex;\n        } else if (sortOrder === 'asc') {\n          return a.name.localeCompare(b.name);\n        } else\n          return b.name.localeCompare(a.name);\n      });\n  }, [localComponents, filter, sortOrder]);\n\n  const calculateDiscountedPrice = (price: number, discount: number | null | undefined) => {\n    const safeDiscount = discount ?? 0;\n    return formatPrice(price * (1 - safeDiscount / 100));\n  };\n\n  const handleQuantityChange = (id: string, increment: boolean) => {\n    setLocalComponents(prevComponents => {\n      const updatedComponents = prevComponents.map(component => {\n        if (component.id === id) {\n          const newQuantity = increment ? component.quantity + 1 : Math.max(1, component.quantity - 1);\n          return { ...component, quantity: newQuantity };\n        }\n        return component;\n      });\n      onComponentChange(updatedComponents);\n      return updatedComponents;\n    });\n  };\n\n  const handleSaveDescription = (id: string, newDescription: string) => {\n    const updatedComponents = localComponents.map(component =>\n      component.id === id ? { ...component, description: newDescription } : component\n    );\n    setLocalComponents(updatedComponents);\n    onComponentChange(updatedComponents);\n  };\n\n  const handlePriceEdit = () => {\n    setIsEditingPrice(true);\n  };\n\n  const handlePriceSave = (id: string) => {\n    if (newPrice !== null && selectedComponent) {\n      const updatedComponents = localComponents.map(component =>\n        component.id === id ? { ...component, price: newPrice } : component\n      );\n      setLocalComponents(updatedComponents);\n      onComponentChange(updatedComponents);\n      setIsEditingPrice(false); // Exit edit mode\n    }\n  };\n\n\n  return (\n    <ComponentListContainer>\n      <ControlsBox>\n        <Tooltip title={t(\"SortAlphabetically\")}>\n          <IconButton onClick={toggleSort}>\n            <SortIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={t(\"CheckAll\")}>\n          <IconButton onClick={() => handleCheckAll(true)}>\n            <CheckBoxIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={t(\"UncheckAll\")}>\n          <IconButton onClick={() => handleCheckAll(false)}>\n            <CheckBoxOutlineBlankIcon />\n          </IconButton>\n        </Tooltip>\n        <TextField\n          size=\"small\"\n          placeholder={t(\"FilterByName\")}\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)}\n          sx={{ flexGrow: 1 }}\n        />\n\n        {user?.id ? (\n          <GlobalDiscountControl>\n            <Tooltip title={t(\"ActivateDiscountForAllComponents\")}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={useGlobalDiscount}\n                    onChange={handleUseGlobalDiscountChange}\n                    name=\"useGlobalDiscount\"\n                  />\n                }\n                label=\"\"\n                sx={{ marginRight: 0 }}\n              />\n            </Tooltip>\n            <TextField\n              type=\"number\"\n              value={globalDiscount}\n              onChange={(e) => handleGlobalDiscountChange(Math.min(100, Math.max(0, parseInt(e.target.value) || 0)))}\n              disabled={!useGlobalDiscount || !user?.id}\n              InputProps={{\n                inputProps: { min: 0, max: 100 }\n              }}\n              sx={{ width: '80px' }}\n            />\n            <Typography variant=\"body1\">%</Typography>\n          </GlobalDiscountControl>\n        ) : (\n          <>\n          </>\n        )}\n      </ControlsBox>\n      {filteredAndSortedComponents.map((component) => (\n        <ComponentItem key={component.id} selected={component.included === true}>\n          <MoveButtonsContainer>\n            <IconButton\n              size=\"small\"\n              onClick={() => handleMoveComponent(component.id, 'up')}\n              disabled={component.originalIndex === 0}\n            >\n              <ArrowUpwardIcon fontSize=\"small\" />\n            </IconButton>\n            <IconButton\n              size=\"small\"\n              onClick={() => handleMoveComponent(component.id, 'down')}\n              disabled={component.originalIndex === localComponents.length - 1}\n            >\n              <ArrowDownwardIcon fontSize=\"small\" />\n            </IconButton>\n          </MoveButtonsContainer>\n          <ComponentCheckbox\n            control={\n              <Checkbox\n                checked={component.included === true}\n                onChange={(e) => handleComponentToggle(component.id, e.target.checked)}\n              />\n            }\n            label={\n              <ComponentNamePriceContainer>\n                <Tooltip title={component.name}>\n                  <ComponentName variant=\"body1\" selected={component.included === true}>\n                    {component.name}\n                  </ComponentName>\n                </Tooltip>\n                <ComponentPrice variant=\"caption\" selected={component.included === true}>\n                  {calculateDiscountedPrice(component.price, component.discount ?? 0)} {t('EUR')}\n                  {component.discount > 0 && (\n                    <>\n                      <DiscountedPrice variant=\"caption\">\n                        ({formatPrice(component.price)} {t('EUR')})\n                      </DiscountedPrice>\n                      <DiscountPercentage variant=\"caption\">\n                        -{component.discount}%\n                      </DiscountPercentage>\n                    </>\n                  )}\n                </ComponentPrice>\n              </ComponentNamePriceContainer>\n            }\n          />\n          <Box display=\"flex\" alignItems=\"center\">\n            <Tooltip title=\"Decrease quantity\" arrow>\n              <IconButton onClick={() => handleQuantityChange(component.id, false)}>\n                <RemoveIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Quantity\" arrow>\n              <Typography variant=\"body1\">\n                {`${component.quantity}`}\n              </Typography>\n            </Tooltip>\n            <Tooltip title=\"Increase quantity\" arrow>\n              <IconButton onClick={() => handleQuantityChange(component.id, true)}>\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"View details\" arrow>\n              <IconButton onClick={(e) => handlePopoverOpen(e, component)}>\n                <VisibilityIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n            {user?.id ? (\n              <Tooltip title=\"Set discount\" arrow>\n                <IconButton onClick={(e) => handleDiscountPopoverOpen(e, component)}>\n                  <DiscountIcon fontSize=\"small\" color={component.discount > 0 ? \"secondary\" : \"action\"} />\n                </IconButton>\n              </Tooltip>\n            ) : (\n              <>\n              </>\n            )}\n          </Box>\n        </ComponentItem>\n      ))}\n      <Popover\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={handlePopoverClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {selectedComponent && (\n          <Box padding={2}>\n            <Typography variant=\"h6\">{selectedComponent.name}</Typography>\n\n            {/* Editable Description */}\n            <EditableDescription\n              initialDescription={selectedComponent.description || t(\"NoDescriptionAvailable\")}\n              onSave={(newDescription) => {\n                const updatedComponents = localComponents.map(component =>\n                  component.id === selectedComponent.id ? { ...component, description: newDescription } : component\n                );\n                setLocalComponents(updatedComponents);\n                onComponentChange(updatedComponents);\n              }}\n            />\n\n            {/* Editable Price */}\n            <Box display=\"flex\" alignItems=\"center\" marginTop={2}>\n              {isEditingPrice ? (\n                <>\n                  <TextField\n                    type=\"number\"\n                    value={newPrice}\n                    onChange={(e) => setNewPrice(Number(e.target.value))}\n                    label={t(\"Price\")}\n                    fullWidth\n                  />\n                  <IconButton onClick={() => handlePriceSave(selectedComponent.id)}>\n                    <SaveIcon />\n                  </IconButton>\n                </>\n              ) : (\n                <>\n                  <Typography variant=\"subtitle1\">\n                    {formatPrice(newPrice !== null ? newPrice : selectedComponent.price)} {t(\"EUR\")}\n                  </Typography>\n                  <IconButton onClick={handlePriceEdit}>\n                    <EditIcon />\n                  </IconButton>\n                </>\n              )}\n            </Box>\n          </Box>\n        )}\n      </Popover>\n\n      <Popover\n        open={discountOpen}\n        anchorEl={discountAnchorEl}\n        onClose={handleDiscountPopoverClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {discountComponent && (\n          <DiscountSliderContainer>\n            <Typography variant=\"subtitle1\">{t(\"Discount\")}</Typography>\n            <Slider\n              value={discountComponent.discount || 0}\n              onChange={(event, newValue) => {\n                handleDiscountChange(event, newValue);\n                setDiscountComponent(prev => prev ? { ...prev, discount: newValue as number } : null);\n              }}\n              aria-labelledby=\"discount-slider\"\n              valueLabelDisplay=\"auto\"\n              step={1}\n              marks\n              min={0}\n              max={100}\n            />\n            <Typography variant=\"body2\">\n              {t(\"DiscountedPrice\")}: {calculateDiscountedPrice(discountComponent.price, discountComponent.discount)} {t('EUR')}\n            </Typography>\n          </DiscountSliderContainer>\n        )}\n      </Popover>\n    </ComponentListContainer>\n  );\n});\n\nexport default SummaryComponentList;\n\nconst ComponentDetails = styled(Box)({\n  padding: '16px',\n  maxWidth: '300px',\n});\n\nconst ComponentListContainer = styled(Box)({\n  borderRadius: '4px',\n  padding: '16px',\n  width: '100%',\n});\n\nconst ControlsBox = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginBottom: '16px',\n  gap: '8px',\n  flexWrap: 'wrap',\n});\n\nconst ComponentItem = styled(Box)<{ selected: boolean }>(({ selected }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: '8px',\n  width: '100%',\n  '&:last-child': {\n    marginBottom: 0,\n  },\n  opacity: selected ? 1 : 0.7,\n}));\n\nconst MoveButtonsContainer = styled(Box)({\n  display: 'flex',\n  flexShrink: 0,\n  marginRight: '8px',\n});\n\nconst ComponentCheckbox = styled(FormControlLabel)({\n  flex: 1,\n  marginRight: '8px',\n  minWidth: 0,\n  overflow: 'hidden',\n});\n\nconst ComponentNamePriceContainer = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  minWidth: 0,\n});\n\nconst ComponentName = styled(Typography)<{ selected: boolean }>(({ selected }) => ({\n  whiteSpace: 'nowrap',\n  fontWeight: selected ? 'bold' : 'normal',\n  color: selected ? '#000' : '#666',\n}));\n\nconst ComponentPrice = styled(Typography)<{ selected: boolean }>(({ selected }) => ({\n  color: selected ? '#000' : '#666',\n  fontWeight: selected ? 'bold' : 'normal',\n}));\n\nconst DiscountedPrice = styled(Typography)({\n  textDecoration: 'line-through',\n  marginLeft: '4px',\n  color: '#999',\n});\n\nconst DiscountPercentage = styled(Typography)({\n  marginLeft: '4px',\n  color: '#4caf50',\n});\n\nconst DiscountSliderContainer = styled(Box)({\n  padding: '16px',\n  width: '250px',\n});\n\nconst GlobalDiscountControl = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: '8px',\n  flexShrink: 0,\n});","import { Actor, ClientType, UserType } from \"../types\";\n\nexport function determineActor(user: UserType | null | undefined, client: ClientType | null | undefined): Actor | undefined {\n  if (user && user.id) {\n    return {\n      type: \"employee\",\n      id: user.id,\n    };\n  } else if (client && client.id) {\n    return {\n      type: \"client\",\n      id: client.id,\n    };\n  }\n}\n","import { Box, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, Paper, Tooltip } from '@mui/material';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport styled from 'styled-components';\nimport { useDocumentContext } from 'state/documentContext';\n\nconst StyledTableRow = styled(TableRow)`\n    cursor: pointer;\n    &:hover {\n        background-color: #f0f0f0; /* Light gray hover effect */\n    }\n`;\n\nconst NameCell = styled(TableCell)`\n    max-width: 250px; /* Adjust the width to control overflow */\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis; /* Ellipsis for long names */\n`;\n\nconst PDFPreviewGrid: React.FC = () => {\n    const { t } = useTranslation();\n    const { updatedDocumentData } = useDocumentContext();\n\n    // Sort PDFs by latest first\n    const sortedPdfUrls = updatedDocumentData?.pdfUrls?.sort(\n        (a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\n    ) || [];\n\n    // Separate PDFs into \"confirmation\" and \"preventivo\" based on partial match, case insensitive\n    const confirmationPdfs = sortedPdfUrls?.filter(pdf => pdf.name.toLowerCase().includes(\"confirmation\"));\n    const preventivoPdfs = sortedPdfUrls?.filter(pdf => pdf.name.toLowerCase().includes(\"preventivo\"));\n\n    const renderPdfTable = (pdfList, title) => (\n        <>\n            <Box my={2}>\n                <Typography textAlign=\"center\" variant=\"h6\" sx={{ fontWeight: 'bold' }}>\n                    {t(title)}\n                </Typography>\n            </Box>\n            <TableContainer component={Paper} sx={{ borderRadius: '12px', boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)' }}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>{t('Name')}</TableCell>\n                            <TableCell>{t('Timestamp')}</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {pdfList.length > 0 ? (\n                            pdfList.map((pdf, index) => (\n                                <StyledTableRow key={index} onClick={() => window.open(pdf.url, '_blank')}>\n                                    <NameCell component=\"th\" scope=\"row\">\n                                        <Box display=\"flex\" alignItems=\"center\">\n                                            <DescriptionIcon sx={{ fontSize: 30, mr: 1 }} />\n                                            <Tooltip title={pdf.name}>\n                                                <Typography variant=\"subtitle1\" noWrap>\n                                                    {pdf.name}\n                                                </Typography>\n                                            </Tooltip>\n                                        </Box>\n                                    </NameCell>\n                                    <TableCell>{new Date(pdf.timestamp).toLocaleString()}</TableCell>\n                                </StyledTableRow>\n                            ))\n                        ) : (\n                            <TableRow>\n                                <TableCell colSpan={2}>\n                                    <Typography variant=\"body1\" gutterBottom>\n                                        {t('NoResult')}\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    );\n\n    return (\n        <Box sx={{ width: '100%', height: '100%' }}>\n            {renderPdfTable(confirmationPdfs, 'Confirmation PDFs')}\n            {renderPdfTable(preventivoPdfs, 'Preventivo PDFs')}\n        </Box>\n    );\n};\n\nexport default PDFPreviewGrid;\n","import FlagIcon from '@mui/icons-material/Flag';\nimport { Box, Button, Tooltip, Typography } from '@mui/material';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { Revision } from 'types';\nimport { dateText } from '../../../utils/date-text';\n\nconst BadgeContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 1rem;\n`;\n\nconst RevisionButton = styled(Button)`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    width: 100%;\n    padding: 1rem;\n    background-color: ${({ active }) => (active ? '#f5f5f5' : 'unset')}; /* Optional slight background change */\n    border: 1px solid ${({ active }) => (active ? 'transparent' : '#ccc')};\n`;\n\nconst RevisionText = styled(Typography)`\n    flex-grow: 1;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: normal;\n    font-size: 0.9rem;\n    text-transform: none;\n    text-align: left;\n`;\n\ninterface RevisionsProps {\n    revisions: Revision[];\n    selectedRevisionId?: number | null;\n    handleChosenRevision: (revision: Revision) => void;\n    resetToOriginal: () => void;\n}\n\nconst Revisions: React.FC<RevisionsProps> = ({ revisions, selectedRevisionId, handleChosenRevision, resetToOriginal }) => {\n    const { t } = useTranslation();\n\n    return (\n        <Box>\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                {t('Revisions')}\n            </Typography>\n            {revisions.map((revision) => (\n                <BadgeContainer key={revision.id}>\n                    <Tooltip title={dateText(revision.createdAt)} arrow>\n                        <RevisionButton\n                            onClick={() => handleChosenRevision(revision)}\n                            active={selectedRevisionId === revision.id} // Add active flag for conditional styling\n                        >\n                            <FlagIcon\n                                sx={{\n                                    marginRight: 1,\n                                    color: selectedRevisionId === revision.id ? 'red' : '#ccc', // Only the flag turns red when active\n                                }}\n                            />\n                            <RevisionText variant=\"body1\">\n                                {revision.label}\n                            </RevisionText>\n                        </RevisionButton>\n                    </Tooltip>\n                </BadgeContainer>\n            ))}\n            <Button\n                variant=\"outlined\"\n                onClick={resetToOriginal}\n                sx={{ mt: 2, width: '100%' }}\n            >\n                {t('ResetToOriginal')}\n            </Button>\n        </Box>\n    );\n};\n\nexport default Revisions;\n","import { List, ListItem, ListItemText } from '@mui/material';\nimport React from 'react';\nimport { ChangeLogItem } from '../../../types';\nimport { useDocumentContext } from 'state/documentContext';\n\ninterface ChangeLogListProps {\n  changeLogs: ChangeLogItem[];\n}\n\nconst ChangeLogList: React.FC<ChangeLogListProps> = ({ changeLogs }) => {\n  const { updatedDocumentData } = useDocumentContext();\n\n  const parseDetailsString = (details: string) => {\n    const fromMatch = details.match(/__from__(.*?)__to__/);\n    const toMatch = details.match(/__to__(.*)$/);\n\n    const fromValue = fromMatch ? JSON.parse(fromMatch[1]) : 'Unknown';\n    const toValue = toMatch ? JSON.parse(toMatch[1]) : 'Unknown';\n\n    return { fromValue, toValue };\n  };\n\n  const formatChangeDetails = (change: ChangeLogItem) => {\n    const { property, details, timestamp } = change;\n    const { fromValue, toValue } = parseDetailsString(details);\n\n    // Skip logging if both fromValue and toValue are null, or they are the same\n    if ((fromValue === null && toValue === null) || fromValue === toValue) return null;\n\n    let formattedChange = '';\n\n    // Handle changes related to added products\n    if (property.includes('data.addedProducts')) {\n      const productMatch = property.match(/data\\.addedProducts\\[(\\d+)\\]/);\n      const componentMatch = property.match(/components\\[(\\d+)\\]/);\n      const productIndex = productMatch ? parseInt(productMatch[1]) : null;\n      const componentIndex = componentMatch ? parseInt(componentMatch[1]) : null;\n\n      if (productIndex !== null && updatedDocumentData?.data?.addedProducts?.[productIndex]) {\n        const productName = updatedDocumentData.data.addedProducts[productIndex].name || `Product ${productIndex + 1}`;\n\n        // If a component is changed\n        if (componentIndex !== null && updatedDocumentData.data.addedProducts[productIndex].components?.[componentIndex]) {\n          const componentName = updatedDocumentData.data.addedProducts[productIndex].components[componentIndex].name || `Component ${componentIndex + 1}`;\n\n          if (property.includes('included')) {\n            formattedChange = `${productName} > ${componentName} is now ${toValue ? 'Included' : 'Excluded'}`;\n          } else if (property.includes('quantity')) {\n            formattedChange = `${productName} > ${componentName} quantity changed from ${fromValue} to ${toValue}`;\n          } else if (property.includes('discount')) {\n            formattedChange = `${productName} > ${componentName} discount changed from ${fromValue}% to ${toValue}%`;\n          } else {\n            formattedChange = `${productName} > ${componentName} changed from ${fromValue} to ${toValue}`;\n          }\n        } else {\n          // If a product is changed\n          if (property.includes('price')) {\n            formattedChange = `${productName} price changed from ${fromValue} to ${toValue}`;\n          } else if (property.includes('discount')) {\n            formattedChange = `${productName} discount changed from ${fromValue}% to ${toValue}%`;\n          } else if (property.includes('description')) {\n            formattedChange = `${productName} description changed.`;\n          }\n        }\n      }\n    }\n    // Handle changes in quote head details\n    else if (property.includes('quoteHeadDetails')) {\n      if (property.includes('object')) {\n        formattedChange = `Quote object changed.`;\n      } else if (property.includes('description')) {\n        formattedChange = `Quote description changed.`;\n      }\n    }\n    // General case for other properties\n    else {\n      formattedChange = `Changed from ${fromValue} to ${toValue}`;\n    }\n\n    return {\n      primary: formattedChange,\n      secondary: timestamp,\n    };\n  };\n\n  return (\n    <List dense>\n      {changeLogs.map((change, index) => {\n        const formattedChange = formatChangeDetails(change);\n        if (!formattedChange) return null; // Skip if no valid change\n        const { primary, secondary } = formattedChange;\n\n        return (\n          <ListItem key={index}>\n            <ListItemText\n              primary={primary}\n              secondary={secondary}\n            />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default ChangeLogList;\n","import CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport InfoIcon from '@mui/icons-material/Info'; // Import InfoIcon\nimport SaveIcon from '@mui/icons-material/Save';\nimport ShareIcon from '@mui/icons-material/Share';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    FormControlLabel,\n    TextField,\n    Tooltip,\n    Typography\n} from '@mui/material';\nimport StatusCell from 'components/DocumentsList/StatusCell';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { Actor, DocumentDataType } from 'types';\nimport { determineActor } from 'utils/determine-actor';\nimport { useDocumentContext } from '../../../state/documentContext';\nimport { useAppState } from '../../../state/stateContext';\nimport ChangeLogList from './ChangeLogList';\n\nconst ActionsTab: React.FC = () => {\n    const { t } = useTranslation();\n    const { user } = useAppState();\n    const { confirmDocument, generatePDF, saveDocument, rejectDocument, changeLogs, updatedDocumentData } = useDocumentContext();\n    const actor = determineActor(user, (updatedDocumentData as DocumentDataType)?.data?.selectedClient);\n\n    const [openDialog, setOpenDialog] = useState(false);\n    const [dialogAction, setDialogAction] = useState<() => void>(() => { });\n\n    const [isRevision, setIsRevision] = useState(false);\n    const [revisionLabel, setRevisionLabel] = useState('');\n\n    const hasChanges = changeLogs.length > 0;\n\n    const handleOpenDialog = (action: () => void) => {\n        setDialogAction(() => action);\n        setOpenDialog(true);\n    };\n\n    const handleCloseDialog = () => setOpenDialog(false);\n\n    const handleDiscardChanges = () => window.location.reload();\n\n    const mailtoLink = `mailto:${updatedDocumentData?.data.selectedClient?.email}?subject=Il%20tuo%20documento%20%C3%A8%20stato%20creato&body=Gentile%20${encodeURIComponent(updatedDocumentData?.data?.selectedClient?.firstName)}%20${encodeURIComponent(updatedDocumentData?.data?.selectedClient?.lastName)},%0D%0A%0D%0AIl%20tuo%20documento%20%C3%A8%20stato%20creato.%20Trova%20i%20dettagli%20di%20seguito:%0D%0A%0D%0AIndirizzo:%20http://sermixer.micro-cloud.it:12923/client-preventive/${updatedDocumentData?.hash}%0D%0A%0D%0AOTP:%20${updatedDocumentData?.otp}%0D%0A%0D%0ACordiali%20saluti,%0D%0AIl%20tuo%20team`;\n\n    const handleSaveDocument = () => {\n        const revision = isRevision ? { label: revisionLabel } : null;\n        handleOpenDialog(() => saveDocument(actor as Actor, revision));\n    };\n\n    return (\n        <ActionsContainer>\n            {actor?.type === 'employee' && (\n                <ChangesContainer>\n                    <Typography variant=\"h6\" gutterBottom>{t('Status')}</Typography>\n                    <StatusCell statuses={updatedDocumentData?.status || {}} />\n                </ChangesContainer>\n            )}\n\n            {updatedDocumentData?.status.REJECTED ? (\n                <Typography variant=\"body1\" color=\"error\" align=\"center\" gutterBottom>\n                    {t('DocumentReadOnly')}\n                </Typography>\n            ) : (\n                <>\n                    <Typography variant=\"h6\" gutterBottom>{t('Actions')}</Typography>\n                    {actor?.type === 'employee' && (\n                        <>\n                            <Box display=\"flex\" alignItems=\"center\">\n                                <Tooltip title={t('RevisionCreationExplanation')} arrow>\n                                    <InfoIcon sx={{ mr: 1, cursor: 'pointer' }} /> {/* Info icon with tooltip */}\n                                </Tooltip>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={isRevision}\n                                            onChange={(e) => setIsRevision(e.target.checked)}\n                                            disabled={changeLogs?.length === 0}\n                                        />\n                                    }\n                                    label={t('Revision')}\n                                />\n                                {isRevision && (\n                                    <TextField\n                                        variant=\"outlined\"\n                                        placeholder={t('Enter revision label')}\n                                        value={revisionLabel}\n                                        onChange={(e) => setRevisionLabel(e.target.value)}\n                                        size=\"small\"\n                                        sx={{ ml: 1, width: '200px' }}\n                                    />\n                                )}\n                            </Box>\n                        </>\n                    )}\n                    <ButtonsGrid>\n\n                        <Tooltip title={hasChanges ? isRevision ? t('SaveOneRevision') : t('SaveChangesDesc') : t('NoChanges')}>\n                            <ActionButton\n                                variant={hasChanges ? 'contained' : 'outlined'}\n                                onClick={handleSaveDocument}\n                                startIcon={<SaveIcon />}\n                            >\n                                {isRevision ? t('SaveRevision') : t('SaveChanges')}\n                            </ActionButton>\n                        </Tooltip>\n\n                        {hasChanges && (\n                            <Tooltip title={t('DiscardChangesDesc')}>\n                                <ActionButton\n                                    variant=\"outlined\"\n                                    onClick={handleDiscardChanges}\n                                    startIcon={<DeleteIcon />}\n                                    color=\"error\"\n                                >\n                                    {t('DiscardChanges')}\n                                </ActionButton>\n                            </Tooltip>\n                        )}\n\n                        {!updatedDocumentData?.status.FINALIZED && (\n                            <Tooltip title={t('ConfirmDocumentDescription')}>\n                                <ActionButton\n                                    variant=\"contained\"\n                                    startIcon={<CheckIcon />}\n                                    onClick={() => handleOpenDialog(confirmDocument)}\n                                    color=\"success\"\n                                >\n                                    {t('ConfirmDocument')}\n                                </ActionButton>\n                            </Tooltip>\n                        )}\n\n                        {actor?.type === 'employee' && (\n                            <>\n                                <Tooltip title={t('HandleGeneratePDFDescription')}>\n                                    <ActionButton\n                                        variant=\"contained\"\n                                        startIcon={<DescriptionIcon />}\n                                        onClick={() => handleOpenDialog(generatePDF)}\n                                    >\n                                        {t('GeneratePDF')}\n                                    </ActionButton>\n                                </Tooltip>\n\n                                <Tooltip title={t('ShareDocumentDescription', { otp: updatedDocumentData?.otp })}>\n                                    <ActionButton\n                                        variant=\"contained\"\n                                        startIcon={<ShareIcon />}\n                                        onClick={() => window.open(mailtoLink, '_blank')}\n                                    >\n                                        {t('ShareDocument')}\n                                    </ActionButton>\n                                </Tooltip>\n\n                                <Tooltip title={t('RejectDocumentDescription')}>\n                                    <ActionButton\n                                        variant=\"outlined\"\n                                        color=\"error\"\n                                        startIcon={<CloseIcon />}\n                                        onClick={() => handleOpenDialog(rejectDocument)}\n                                    >\n                                        {t('RejectDocument')}\n                                    </ActionButton>\n                                </Tooltip>\n                            </>\n                        )}\n                    </ButtonsGrid>\n                </>\n            )}\n\n            <Box mt={4}>\n                <Typography variant=\"h6\" gutterBottom>{t('CurrentChanges')}</Typography>\n\n                {changeLogs?.length > 0 ? (\n                    <ChangesContainer>\n                        <ChangeLogList changeLogs={changeLogs} />\n                    </ChangesContainer>\n                ) : (\n                    <Typography variant=\"body2\" gutterBottom>{t('NoChanges')}</Typography>\n                )}\n            </Box>\n\n\n            <Dialog open={openDialog} onClose={handleCloseDialog} fullWidth>\n                <DialogTitle>{t('ConfirmAction')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{t('AreYouSure')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialog}>{t('Cancel')}</Button>\n                    <Button\n                        variant='contained'\n                        onClick={() => {\n                            dialogAction();\n                            handleCloseDialog();\n                        }}\n                        color=\"primary\"\n                        autoFocus\n                    >\n                        {t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </ActionsContainer>\n    );\n};\n\nexport default ActionsTab;\n\nconst ActionsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    max-width: 400px;\n    margin: auto;\n`;\n\nconst ButtonsGrid = styled(Box)`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr); // Two columns\n    gap: 16px; // Space between buttons\n`;\n\nconst ActionButton = styled(Button)`\n    padding: 8px; // Smaller padding for smaller text\n    font-size: 0.875rem; // Smaller font size\n    font-weight: bold;\n    border-radius: 8px; // Rounded corners\n    transition: background-color 0.3s, transform 0.2s;\n    text-overflow: ellipsis; // Enable ellipsis\n    overflow: hidden; // Hide overflow\n    white-space: nowrap; // Prevent wrapping\n\n    &:hover {\n        transform: scale(1.05); // Slightly enlarge on hover\n    }\n`;\n\nconst ChangesContainer = styled.div`\n    margin-top: 24px;\n`;","import { TabPanelProps } from \"../../../types\";\n\nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`tabpanel-${index}`}\n            aria-labelledby={`tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <>\n                    {children}\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default TabPanel;","import { Box, Tab, Tabs, Typography, Badge } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDocumentContext } from 'state/documentContext';\nimport { Actor, ClientType, Revision } from 'types';\nimport { PALETTE } from '../../../constants/index';\nimport { useAppState } from '../../../state/stateContext';\nimport { determineActor } from '../../../utils/determine-actor';\nimport PDFPreviewGrid from '../components/PDFPreviewGrid';\nimport Revisions from '../components/Revisions';\nimport ActionsTab from './ActionsTab';\nimport TabPanel from './TabPanel';\nimport MarkdownEditor from 'components/MarkdownEditor';\n\nconst DocumentManagementPanel: React.FC<{ handleChosenRevision: (revision: Revision) => void; selectedRevisionId: string }> = ({ handleChosenRevision, selectedRevisionId }) => {\n    const { t } = useTranslation();\n    const { user, verifyToken } = useAppState();\n    const { updatedDocumentData, updateDocumentDataFromRevision, setUpdatedDocumentData, changeLogs } = useDocumentContext(); // Add setUpdatedDocumentData\n    const [theActor, setTheActor] = useState<Actor | undefined>();\n    const [value, setValue] = useState(0);\n\n    useEffect(() => {\n        verifyToken();\n    }, []);\n\n    useEffect(() => {\n        const result = determineActor(user, updatedDocumentData?.data?.selectedClient as ClientType);\n        setTheActor(result);\n    }, [user, updatedDocumentData]);\n\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n        setValue(newValue);\n    };\n\n    const handleRevisionSelect = (revision: Revision) => {\n        const selectedRevision = updatedDocumentData?.revisions?.find(r => r.id === revision.id);\n        if (selectedRevision) {\n            handleChosenRevision(selectedRevision);\n            updateDocumentDataFromRevision(selectedRevision);\n        }\n    };\n\n    const resetToOriginal = () => {\n        window.location.reload();\n    };\n\n    // Handle note update\n    const handleNoteChange = (newNote: string) => {\n        setUpdatedDocumentData((prevData) => ({\n            ...prevData,\n            note: newNote\n        }));\n    };\n\n    return (\n        <Box sx={{ width: '100%', height: '100%', padding: 2 }}>\n            <Tabs\n                value={value}\n                onChange={handleChange}\n                aria-label=\"document management tabs\"\n                variant=\"fullWidth\"\n                sx={{\n                    '& .MuiTabs-indicator': { backgroundColor: PALETTE.Blue },\n                    '& .MuiTab-root': { backgroundColor: 'transparent', color: PALETTE.Black3 },\n                    '& .Mui-selected': { backgroundColor: 'transparent', color: PALETTE.Black3, fontWeight: 'bold' }\n                }}\n            >\n                {/* Adding Badge to Actions Tab */}\n                <Tab\n                    label={\n                        <Badge\n                            color=\"error\"\n                            variant={changeLogs.length > 0 ? 'dot' : 'standard'}\n                            overlap=\"rectangular\"\n                        >\n                            {t('Actions')}\n                        </Badge>\n                    }\n                />\n                {theActor?.type === \"employee\" && <Tab label={t('Revisions')} />}\n                {theActor?.type === \"employee\" && <Tab label={t('PDFs')} />}\n                {theActor?.type === \"employee\" && <Tab label={t('Notes')} />}\n            </Tabs>\n\n            <Box sx={{ marginTop: 2 }}>\n                <TabPanel value={value} index={0}>\n                    <ActionsTab />\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    <Revisions\n                        revisions={updatedDocumentData?.revisions || []}\n                        selectedRevisionId={selectedRevisionId}\n                        handleChosenRevision={handleRevisionSelect}\n                        resetToOriginal={resetToOriginal}\n                    />\n                </TabPanel>\n                <TabPanel value={value} index={2}>\n                    {updatedDocumentData && <PDFPreviewGrid pdfUrls={updatedDocumentData.pdfUrls || []} />}\n                </TabPanel>\n                {theActor?.type === \"employee\" && (\n                    <TabPanel value={value} index={3}>\n                        <Box my={1}>\n                            <Typography textAlign={'center'} variant='h5'>{t('Notes')}</Typography>\n                            <MarkdownEditor\n                                value={updatedDocumentData?.note || ''}\n                                onChange={handleNoteChange}\n                                readOnly={false}\n                                minRows={5}\n                            />\n                        </Box>\n                    </TabPanel>\n                )}\n            </Box>\n        </Box>\n    );\n};\n\nexport default DocumentManagementPanel;\n","import { Backdrop, Box, Button, CircularProgress, Divider, Paper, TextField, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDocumentContext } from 'state/documentContext';\nimport { useFlashMessage } from 'state/FlashMessageContext';\nimport styled from 'styled-components';\nimport { isAdmin } from '../../../utils/isWho';\n\nconst StyledBackdrop = styled(Backdrop)`\n  z-index: 1300; // Adjust the z-index to be higher if needed\n`;\n\nconst FormContainer = styled(Paper)`\n  padding: 2rem;\n  border-radius: 8px;\n  text-align: center;\n  max-width: 400px;\n  margin: auto;\n`;\n\nconst LockView: React.FC<{ setIsLocked: (val: boolean) => void }> = ({ setIsLocked }) => {\n    const { t } = useTranslation();\n    const { originalDocumentData, getDocument, clientViewedDocument } = useDocumentContext();\n    const [inputOTP, setInputOTP] = useState<string>();\n    const [loading, setLoading] = useState(true);\n    const { hash } = useParams<{ hash: string }>();\n    const [error, setError] = useState('');\n    const { showMessage } = useFlashMessage()\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (hash) {\n            getDocument(hash);\n        }\n    }, [hash, getDocument]);\n\n    useEffect(() => {\n        if (originalDocumentData) {\n            if (isAdmin(originalDocumentData.employeeID) || originalDocumentData.employeeID === originalDocumentData.employeeID) {\n                setLoading(false);\n            }\n        } else {\n            setLoading(false);\n        }\n    }, [originalDocumentData]);\n\n    useEffect(() => {\n        const savedOTP = localStorage.getItem(`otp-${originalDocumentData?.hash}`);\n        if (savedOTP) {\n            setInputOTP(savedOTP);\n            setTimeout(() => {\n                handleUnlock(savedOTP);\n                showMessage(t('FoundOTP'), 'success')\n            }, 200)\n        }\n    }, [originalDocumentData?.hash]);\n\n    const handleUnlock = async (otp?: string) => {\n        if (otp && otp === originalDocumentData?.otp) {\n            setIsLocked(false);\n        }\n        if (inputOTP === originalDocumentData?.otp) {\n            clientViewedDocument(hash as string);\n            localStorage.setItem(`otp-${originalDocumentData?.hash}`, inputOTP);\n            setIsLocked(false);\n        } else {\n            setError('This is not the right OTP');\n        }\n    };\n\n    return (\n        <StyledBackdrop open>\n            {loading ? (\n                <FormContainer elevation={3}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {t('LoadingDocumentInformation')}\n                    </Typography>\n                    <CircularProgress />\n                </FormContainer>\n            ) : (\n                <FormContainer elevation={3}>\n                    <Box mb={2}>\n                        <Typography mb={2} variant=\"h5\">{t('UnlockDocument')}</Typography>\n                        <Typography>{t('UnlockDocumentDescription')}</Typography>\n                    </Box>\n\n                    {error && (\n                        <Box mb={2}>\n                            <Typography color=\"error\">{error}</Typography>\n                        </Box>\n                    )}\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        label={t('Enter OTP')}\n                        value={inputOTP}\n                        onChange={(e) => setInputOTP(e.target.value)}\n                        fullWidth\n                    />\n                    <Box mt={2}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleUnlock}\n                            disabled={!inputOTP}\n                            sx={{\n                                width: '100%',\n                                mb: 2,\n                                '&.Mui-disabled': {\n                                    color: 'grey.500',\n                                    borderColor: 'grey.500',\n                                    backgroundColor: 'grey.300',\n                                },\n                            }}\n                        >\n                            {t('Unlock')}\n                        </Button>\n                    </Box>\n                    <Divider sx={{ my: 2 }} />\n                    <Typography variant=\"body2\" gutterBottom>\n                        {t('LookingForLogin?')}\n                    </Typography>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={() => navigate('/login')}\n                        fullWidth\n                    >\n                        {t('Login')}\n                    </Button>\n                </FormContainer>\n            )}\n        </StyledBackdrop>\n    );\n};\n\n\nexport default LockView;\n","// src/components/FormattedPrice/index.tsx\n\nimport React from \"react\";\nimport { NumericFormat } from \"react-number-format\";\n\ninterface FormattedPriceProps {\n    value: number;\n    prefix?: string;\n}\n\nconst FormattedPrice: React.FC<FormattedPriceProps> = ({ value, prefix = \"€\" }) => {\n    return (\n        <NumericFormat\n            value={value}\n            displayType=\"text\"\n            thousandSeparator=\".\"\n            decimalSeparator=\",\"\n            decimalScale={2}\n            fixedDecimalScale\n            prefix={prefix}\n        />\n    );\n};\n\nexport default FormattedPrice;\n","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Divider, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { DocumentDataType } from 'types';\nimport { useDocumentContext } from \"../../state/documentContext\";\nimport { useAppState } from \"../../state/stateContext\";\nimport { calculatePriceSummary } from \"../../utils/calculate-price-summary\";\nimport { determineActor } from \"../../utils/determine-actor\";\nimport EuroTextField from \"../EuroTextField/index\";\nimport FormattedPrice from \"../FormattedPrice/index\";\n\nconst PriceSummary: React.FC = () => {\n  const { t } = useTranslation();\n  const [expandedDetails, setExpandedDetails] = useState(false);\n  const { originalDocumentData, updatedDocumentData, updateNestedDocumentField } = useDocumentContext();\n  const { user } = useAppState();\n  const [currentDiscount, setCurrentDiscount] = useState((updatedDocumentData as DocumentDataType).discount || 0);\n\n  const {\n    subtotal,\n    discountAmount,\n    subtotalAfterDiscount,\n    taxAmount,\n    totalAfterDiscount,\n    productDetails\n  } = calculatePriceSummary(updatedDocumentData as DocumentDataType, 0.22, currentDiscount);\n\n  const handleDiscountChange = (value: string) => {\n    const discountValue = parseFloat(value) || 0;\n    setCurrentDiscount(discountValue);\n    updateNestedDocumentField(['discount'], discountValue); // Update to root level\n  };\n\n  const handleExpandDetails = () => {\n    setExpandedDetails((prev) => !prev);\n  };\n\n  return (\n    <Box sx={{ width: '100%', mt: 2 }}>\n      <Accordion\n        expanded={expandedDetails}\n        onChange={handleExpandDetails}\n        elevation={0}\n        sx={{\n          border: '1px solid #e0e0e0',\n          '&:before': {\n            display: 'none',\n          },\n        }}\n      >\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h6\">{t(\"TotalPriceSummary\")}</Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ p: 0 }}>\n          <TableContainer component={Paper} elevation={0}>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>{t(\"Product\")}</TableCell>\n                  <TableCell align=\"right\">{t(\"BasePrice\")}</TableCell>\n                  <TableCell align=\"right\">{t(\"Discount\")}</TableCell>\n                  <TableCell align=\"right\">{t(\"Components\")}</TableCell>\n                  <TableCell align=\"right\">{t(\"Total\")}</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {productDetails.map((product, index) => (\n                  <React.Fragment key={index}>\n                    <TableRow sx={{ backgroundColor: 'white' }}>\n                      <TableCell component=\"th\" scope=\"row\" sx={{ fontWeight: 'bold' }}>{product.name}</TableCell>\n                      <TableCell align=\"right\"><FormattedPrice value={product.basePrice} /></TableCell>\n                      <TableCell align=\"right\">\n                        {product.discount > 0 ? (\n                          <FormattedPrice value={-product.discountAmount} />\n                        ) : '-'}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <FormattedPrice value={product.components.reduce((sum, comp) => sum + (comp.price * comp.quantity), 0)} />\n                      </TableCell>\n                      <TableCell align=\"right\"><FormattedPrice value={product.total} /></TableCell>\n                    </TableRow>\n                    {product.components.map((component, cIndex) => (\n                      <TableRow key={`${index}-${cIndex}`} sx={{ backgroundColor: '#f5f5f5' }}>\n                        <TableCell sx={{ pl: 4 }}>{component.name} (x{component.quantity})</TableCell>\n                        <TableCell align=\"right\"><FormattedPrice value={component.price} /></TableCell>\n                        <TableCell colSpan={3} />\n                      </TableRow>\n                    ))}\n                  </React.Fragment>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </AccordionDetails>\n      </Accordion>\n\n      <Box sx={{ width: '50%', mt: 2, ml: 'auto', p: 2, border: '1px solid #e0e0e0' }}>\n        <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n          <Typography variant=\"body1\">{t(\"Subtotal\")}:</Typography>\n          <Typography variant=\"body1\">\n            {discountAmount > 0 ? (\n              <>\n                <span style={{ textDecoration: 'line-through', marginRight: '8px' }}>\n                  <FormattedPrice value={subtotal} />\n                </span>\n                <FormattedPrice value={subtotalAfterDiscount} />\n              </>\n            ) : (\n              <FormattedPrice value={subtotal} />\n            )}\n          </Typography>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n          <Typography variant=\"body1\">{t(\"Tax\")}: <span style={{fontSize: '.8rem', color: 'grey'}}>(22%)</span></Typography>\n          <Typography variant=\"body1\"><FormattedPrice value={taxAmount} /></Typography>\n        </Box>\n        {user?.id ? (\n          <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n            <Typography variant=\"body1\">{t(\"Discount\")}:</Typography>\n            <EuroTextField\n              value={currentDiscount.toString()}\n              onChange={handleDiscountChange}\n              fullWidth={false}\n              readOnly={false}\n              sx={{ minWidth: '200px' }}\n            />\n          </Box>\n        ) : (\n          <>\n          </>\n        )}\n        <Divider sx={{ my: 1 }} />\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\n            {t(\"Total\")}:\n          </Typography>\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\n            <FormattedPrice value={totalAfterDiscount} />\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default PriceSummary;\n","export function calculatePriceSummary(\n  documentData: DocumentDataType,\n  taxRate: number = 0.22,\n  netDiscountOnTotal: number = 0\n) {\n  const calculateProductDetails = (products: ProductType[]): ProductDetail[] => {\n    return products.map((product) => {\n      const basePrice = parseFloat(product.price?.toString() ?? \"0\") || 0;\n      const productDiscount = product.discount ?? 0;\n      const productDiscountAmount = (basePrice * productDiscount) / 100;\n      const discountedProductPrice = basePrice - productDiscountAmount;\n\n      // Filter out components that are not included\n      const includedComponents = product.components\n        ?.filter((component) => component.included) // Only include components where included === true\n        .map((component) => {\n          const componentBasePrice = parseFloat(component.price?.toString() ?? \"0\") || 0;\n          const componentDiscount = component.discount ?? 0;\n          const componentDiscountAmount = (componentBasePrice * componentDiscount) / 100;\n          const discountedComponentPrice = componentBasePrice - componentDiscountAmount;\n\n          return {\n            name: component.name,\n            price: discountedComponentPrice, // Apply the discount to the component price\n            quantity: component.quantity,\n          };\n        }) ?? [];\n\n      // Calculate components total considering quantity and discount\n      const componentsTotal = includedComponents.reduce(\n        (total, component) => total + component.price * component.quantity,\n        0\n      );\n\n      const total = discountedProductPrice + componentsTotal;\n\n      return {\n        name: product.name,\n        basePrice,\n        discount: productDiscount,\n        discountAmount: productDiscountAmount,\n        components: includedComponents, // Return only included components with discounted prices\n        total,\n      };\n    });\n  };\n\n  const productDetails = calculateProductDetails(\n    documentData?.data?.addedProducts ?? []\n  );\n  const subtotal = productDetails.reduce(\n    (total, product) => total + product.total,\n    0\n  );\n  const discountAmount = netDiscountOnTotal;\n  const subtotalAfterDiscount = Math.max(subtotal - discountAmount, 0);\n  const taxAmount = subtotalAfterDiscount * taxRate;\n  const totalAfterDiscount = subtotalAfterDiscount + taxAmount;\n\n  return {\n    subtotal,\n    discountAmount,\n    subtotalAfterDiscount,\n    taxAmount,\n    totalAfterDiscount,\n    productDetails,\n  };\n}\n","import BusinessIcon from \"@mui/icons-material/Business\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport EmailIcon from \"@mui/icons-material/Email\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport SubjectIcon from \"@mui/icons-material/Subject\";\nimport { Box, Divider, Grid, IconButton, TextField, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAppState } from \"state/stateContext\";\nimport Logo from \"../../media/logo.png\";\nimport { useDocumentContext } from '../../state/documentContext';\nimport { UserType } from '../../types';\n\nconst ClientPreventiveHeadComponent = () => {\n  const { t } = useTranslation();\n  const { updatedDocumentData, originalDocumentData, updateNestedDocumentField } = useDocumentContext();\n  const { user, getUsers, users } = useAppState();\n  const [theEmployee, setTheEmployee] = useState<UserType>();\n  const [objectEditMode, setObjectEditMode] = useState(false);\n  const [descriptionEditMode, setDescriptionEditMode] = useState(false);\n  const [objectValue, setObjectValue] = useState(updatedDocumentData?.data?.quoteHeadDetails?.object || \"\");\n  const [descriptionValue, setDescriptionValue] = useState(updatedDocumentData?.data?.quoteHeadDetails?.description || \"\");\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  useEffect(() => {\n    const result = users.find(({ id }) => `${id}` === `${originalDocumentData?.employeeID}`);\n    if (result) {\n      setTheEmployee(result);\n    }\n  }, [users, originalDocumentData?.employeeID]);\n\n  useEffect(() => {\n    if (updatedDocumentData) {\n      setObjectValue(updatedDocumentData.data.quoteHeadDetails?.object || \"\");\n      setDescriptionValue(updatedDocumentData.data.quoteHeadDetails?.description || \"\");\n    }\n  }, [updatedDocumentData]);\n\n  const handleObjectChange = () => {\n    updateNestedDocumentField(['data', 'quoteHeadDetails', 'object'], objectValue);\n    setObjectEditMode(false);\n  };\n\n  const handleDescriptionChange = () => {\n    updateNestedDocumentField(['data', 'quoteHeadDetails', 'description'], descriptionValue);\n    setDescriptionEditMode(false);\n  };\n\n  // Check if the user is defined; if not, make the component readonly\n  const isReadOnly = !user?.id;\n\n  return (\n    <Box p={3}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%', justifyContent: 'flex-start', alignItems: 'flex-start', ml: 4 }}>\n            <img src={Logo} alt=\"Logo\" style={{ height: 80, marginBottom: 20 }} />\n            <Typography variant=\"h4\">\n              {originalDocumentData?.data?.quoteHeadDetails?.company || \"NA\"}\n            </Typography>\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%', justifyContent: 'flex-end', alignItems: 'flex-start', mb: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>{t(\"Employee\")}</Typography>\n            <Box>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <PersonIcon />\n                <Typography variant=\"body2\" ml={1}>{t(\"Name\")}: {theEmployee?.username || \"NA\"}</Typography>\n              </Box>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <EmailIcon />\n                <Typography variant=\"body2\" ml={1}>{t(\"Email\")}: {theEmployee?.email || \"NA\"}</Typography>\n              </Box>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <BusinessIcon />\n                <Typography variant=\"body2\" ml={1}>{t(\"Company\")}: {theEmployee?.companyName || \"NA\"}</Typography>\n              </Box>\n            </Box>\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%', justifyContent: 'flex-end', alignItems: 'flex-start', mb: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>{t(\"Client\")}</Typography>\n            <Box>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <PersonIcon />\n                <Typography variant=\"body2\" ml={1}>{t(\"Name\")}: {`${originalDocumentData?.data?.selectedClient?.firstName || \"\"} ${originalDocumentData?.data?.selectedClient?.lastName || \"\"}`.trim() || \"NA\"}</Typography>\n              </Box>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <EmailIcon />\n                <Typography variant=\"body2\" ml={1}>{t(\"Email\")}: {originalDocumentData?.data?.selectedClient?.email || \"NA\"}</Typography>\n              </Box>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <BusinessIcon />\n                <Typography variant=\"body2\" ml={1}>{t(\"Company\")}: {originalDocumentData?.data?.selectedClient?.companyName || \"NA\"}</Typography>\n              </Box>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n\n      <Divider sx={{ my: 3 }} />\n\n      <Box>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n          <SubjectIcon />\n          {objectEditMode ? (\n            <>\n              <TextField\n                variant=\"standard\"\n                value={objectValue}\n                onChange={(e) => setObjectValue(e.target.value)}\n                fullWidth\n                disabled={isReadOnly} // Disable if readonly\n              />\n              {!isReadOnly && (\n                <IconButton onClick={handleObjectChange}>\n                  <SaveIcon />\n                </IconButton>\n              )}\n            </>\n          ) : (\n            <>\n              <Typography variant=\"body2\">{objectValue || \"NA\"}</Typography>\n              {!isReadOnly && (\n                <IconButton onClick={() => setObjectEditMode(true)}>\n                  <EditIcon />\n                </IconButton>\n              )}\n            </>\n          )}\n        </Box>\n\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n          <DescriptionIcon />\n          {descriptionEditMode ? (\n            <>\n              <TextField\n                variant=\"standard\"\n                value={descriptionValue}\n                onChange={(e) => setDescriptionValue(e.target.value)}\n                fullWidth\n                disabled={isReadOnly} // Disable if readonly\n              />\n              {!isReadOnly && (\n                <IconButton onClick={handleDescriptionChange}>\n                  <SaveIcon />\n                </IconButton>\n              )}\n            </>\n          ) : (\n            <>\n              <Typography variant=\"body2\">{descriptionValue || \"NA\"}</Typography>\n              {!isReadOnly && (\n                <IconButton onClick={() => setDescriptionEditMode(true)}>\n                  <EditIcon />\n                </IconButton>\n              )}\n            </>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ClientPreventiveHeadComponent;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Typography, Button, TextField } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport { useBusinessSignature } from \"../../../hooks/useBusinessSignature\";\nimport { useDocumentContext } from \"../../../state/documentContext\";\nimport fallbackImage from \"../../../media/fallbackProduct.png\";\nimport { DocumentDataType } from \"types\";\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst SignaturePreview = styled('img')({\n    width: '100%',\n    height: '100%',\n    objectFit: 'contain',\n});\n\nconst DocumentFooter: React.FC = () => {\n    const { signatureUrl, uploadSignature } = useBusinessSignature();\n    const { updatedDocumentData, updateDocumentField } = useDocumentContext();\n    const [signaturePreview, setSignaturePreview] = useState<string | null>(null);\n    const [selectedDate, setSelectedDate] = useState(updatedDocumentData?.dateOfSignature || \"\");\n\n    useEffect(() => {\n        if (signatureUrl) {\n            setSignaturePreview(signatureUrl);\n        }\n    }, [signatureUrl]);\n\n    const handleSignatureChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files && event.target.files[0]) {\n            const file = event.target.files[0];\n            setSignaturePreview(URL.createObjectURL(file));\n\n            const formData = new FormData();\n            formData.append(\"file\", file);\n\n            try {\n                await uploadSignature(formData);\n            } catch (error) {\n                console.error(\"Error uploading signature:\", error);\n            }\n        }\n    };\n\n    const handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newDate = event.target.value;\n        setSelectedDate(newDate);\n        updateDocumentField('dateOfSignature', newDate);\n    };\n\n    return (\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', p: 2, bgcolor: '#f9f9f9', borderRadius: 1 }}>\n            <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Signature</Typography>\n                <Box sx={{ height: 150, width: 250, border: '1px dashed #ccc', display: 'flex', justifyContent: 'center', alignItems: 'center', mb: 2 }}>\n                    <SignaturePreview src={signaturePreview || fallbackImage} alt=\"Signature Preview\" />\n                </Box>\n                <label htmlFor=\"signature-upload\">\n                    <Input accept=\"image/*\" id=\"signature-upload\" type=\"file\" onChange={handleSignatureChange} />\n                    <Button variant=\"outlined\" component=\"span\">\n                        Upload Signature\n                    </Button>\n                </label>\n            </Box>\n            <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                <Typography variant=\"subtitle1\" gutterBottom>Date</Typography>\n                <TextField\n                    type=\"date\"\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                    sx={{ width: 200 }}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n            </Box>\n        </Box>\n    );\n};\n\nexport default DocumentFooter;\n","import { useState, useEffect } from \"react\";\nimport { request } from \"../utils/request\";\n\nexport const useBusinessSignature = () => {\n    const [signatureUrl, setSignatureUrl] = useState<string | null>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [error, setError] = useState<string | null>(null);\n\n    const fetchSignature = async () => {\n        setLoading(true);\n        try {\n            const response = await request({\n                url: `${process.env.REACT_APP_API_URL}/media/get-business-signature`,\n                method: \"GET\",\n            });\n            setSignatureUrl(response.signatureUrl);\n        } catch (error) {\n            setError(\"Error fetching signature\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const uploadSignature = async (formData: FormData) => {\n        setLoading(true);\n        try {\n            await request({\n                url: `${process.env.REACT_APP_API_URL}/media/business-signature`,\n                method: \"POST\",\n                body: formData,\n            });\n            fetchSignature(); // Refresh the signature URL after upload\n        } catch (error) {\n            setError(\"Error uploading signature\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchSignature();\n    }, []);\n\n    return { signatureUrl, uploadSignature, loading, error };\n};\n","import AddIcon from '@mui/icons-material/Add';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FlagIcon from '@mui/icons-material/Flag';\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, IconButton, Slider, TextField, Tooltip, Typography } from \"@mui/material\";\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\nimport { styled } from '@mui/material/styles';\nimport Loading from 'components/Loading';\nimport PriceSummary from 'components/PriceSummary';\nimport { FC, forwardRef, memo, useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useParams } from 'react-router-dom';\nimport { useDocumentContext } from \"state/documentContext\";\nimport { useFlashMessage } from \"state/FlashMessageContext\";\nimport ClientPreventiveHeadComponent from \"../../../components/ClientPreventiveHeadComponent/index\";\nimport EuroTextField from '../../../components/EuroTextField/index';\nimport MarkdownEditor from '../../../components/MarkdownEditor/index';\nimport ProductPriceSummary from '../../../components/ProductPriceSummary';\nimport SummaryComponentList from \"../../../components/SummaryQuote/SummaryComponentList\";\nimport { useAppState } from \"../../../state/stateContext\";\nimport { ComponentType, DocumentDataDataType, ProductType, UserType } from \"../../../types/index\";\nimport { formatPrice } from \"../../../utils/format-price\";\nimport DocumentFooter from './DocumentFooter';\n\nconst Alert = forwardRef<HTMLDivElement, AlertProps>(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst PreventiveForm: FC<{ activeRevisionLabel: string | null, revisionData: DocumentDataDataType, user?: UserType }> = ({ activeRevisionLabel, revisionData }) => {\n    const { t } = useTranslation();\n    const { showMessage } = useFlashMessage();\n    const { hash } = useParams<{ hash: string }>();\n    const {\n        originalDocumentData,\n        updatedDocumentData,\n        setUpdatedDocumentData,\n        updateNestedDocumentField,\n        getDocument,\n        error,\n        loading\n    } = useDocumentContext();\n    const { user, getProducts, products: allProducts } = useAppState();\n\n    const [products, setProducts] = useState<ProductType[]>(updatedDocumentData?.data?.addedProducts || []);\n    const [isSearchModalOpen, setIsSearchModalOpen] = useState(false);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [filteredProducts, setFilteredProducts] = useState<ProductType[]>([]);\n    const [paymentTerms, setPaymentTerms] = useState<string>(\n        updatedDocumentData?.data?.paymentTerms || \n        \"MODALITA' DI PAGAMENTO: Acconto 10% e saldo alla consegna o alla richiesta dei documenti di collaudo (in mancanza del versamento dell'acconto non sarà possibile procedere con l'evasione dell'offerta)\"\n    );\n\n    useEffect(() => {\n        if (hash) {\n            getDocument(hash);\n        }\n    }, [hash, getDocument]);\n\n    useEffect(() => {\n        if (updatedDocumentData?.data?.addedProducts) {\n            setProducts(updatedDocumentData.data.addedProducts);\n        }\n    }, [updatedDocumentData]);\n\n    useEffect(() => {\n        if (revisionData) {\n            setUpdatedDocumentData((prevData) => ({\n                ...prevData,\n                data: revisionData,\n            }));\n        }\n    }, [revisionData, setUpdatedDocumentData]);\n\n    useEffect(() => {\n        getProducts();\n    }, []);\n\n    useEffect(() => {\n        if (updatedDocumentData?.data?.paymentTerms) {\n            setPaymentTerms(updatedDocumentData.data.paymentTerms);\n        }\n    }, [updatedDocumentData]);\n\n    useEffect(() => {\n        setFilteredProducts(\n            allProducts.filter(product =>\n                product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                product.description.toLowerCase().includes(searchTerm.toLowerCase())\n            )\n        );\n    }, [searchTerm, allProducts]);\n\n    const handleInputChange = (index: number, field: string, value: string | number) => {\n        const updatedProducts = [...products];\n        const numericValue = typeof value === 'string' ? parseFloat(value) : value;\n        updatedProducts[index] = {\n            ...updatedProducts[index],\n            [field]: isNaN(numericValue) ? value : numericValue\n        };\n        setProducts(updatedProducts);\n        updateNestedDocumentField(['data', 'addedProducts'], updatedProducts);\n    };\n\n    const handleComponentsChange = (productIndex: number, updatedComponents: ComponentType[]) => {\n        const updatedProducts = products.map((product, i) =>\n            i === productIndex ? { ...product, components: updatedComponents } : product\n        );\n        setProducts(updatedProducts);\n        updateNestedDocumentField(['data', 'addedProducts'], updatedProducts);\n    };\n\n    const calculateDiscountedPrice = (price: number, discount: number | null | undefined) => {\n        const safeDiscount = discount ?? 0;\n        return price * (1 - safeDiscount / 100);\n    };\n\n    const handleAddProduct = () => {\n        setIsSearchModalOpen(true);\n    };\n\n    const handleCloseSearchModal = () => {\n        setIsSearchModalOpen(false);\n        setSearchTerm(\"\");\n    };\n\n    const handleSelectProduct = (selectedProduct: ProductType) => {\n        const updatedProducts = [...products, selectedProduct];\n        setProducts(updatedProducts);\n        updateNestedDocumentField(['data', 'addedProducts'], updatedProducts);\n        showMessage('AddedItemToPreventive', 'success');\n        handleCloseSearchModal();\n    };\n\n    const handleRemoveProduct = (productIndex: number) => {\n        const updatedProducts = products.filter((_, index) => index !== productIndex);\n        setProducts(updatedProducts);\n        updateNestedDocumentField(['data', 'addedProducts'], updatedProducts);\n        showMessage('RemovedItemFromPreventive', 'success');\n    };\n\n    const handleMoveUp = useCallback((index: number) => {\n        if (index === 0) return;\n        const updatedProducts = [...products];\n        [updatedProducts[index - 1], updatedProducts[index]] = [updatedProducts[index], updatedProducts[index - 1]];\n        setProducts(updatedProducts);\n        updateNestedDocumentField(['data', 'addedProducts'], updatedProducts);\n    }, [products, updateNestedDocumentField]);\n    \n    const handleMoveDown = useCallback((index: number) => {\n        if (index === products.length - 1) return;\n        const updatedProducts = [...products];\n        [updatedProducts[index + 1], updatedProducts[index]] = [updatedProducts[index], updatedProducts[index + 1]];\n        setProducts(updatedProducts);\n        updateNestedDocumentField(['data', 'addedProducts'], updatedProducts);\n    }, [products, updateNestedDocumentField]);\n\n    const handleCloseSnackbar = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        } else {\n            window.location.reload();\n        }\n    };\n\n    const handlePaymentTermsChange = (value: string) => {\n        setPaymentTerms(value);\n        updateNestedDocumentField(['data', 'paymentTerms'], value);\n    };\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <Box>{t(error)}</Box>;\n    }\n\n    if (!originalDocumentData) {\n        return <Box>{t('No document data available')}</Box>;\n    }\n\n    return (\n        <Box sx={{ maxWidth: '1200px', margin: '0 auto', background: '#fff', p: 3, paddingBottom: '300px' }}>\n            {activeRevisionLabel && (\n                <Box>\n                    <Alert\n                        onClose={handleCloseSnackbar}\n                        severity=\"info\"\n                        sx={{ position: 'fixed', zIndex: 9999, backgroundColor: '#ffef4c', color: 'black' }}\n                        iconMapping={{\n                            warning: <FlagIcon fontSize=\"inherit\" />\n                        }}\n                    >\n                        {t('YouAreViewing', { activeRevisionLabel })}\n                    </Alert>\n                </Box>\n            )}\n\n            <ClientPreventiveHeadComponent />\n\n            {/* LIST OF PRODUCTS */}\n            <Box sx={{ mt: 4, mb: 6 }}>\n                {products.length === 0 ? (\n                    <Box sx={{\n                        py: 4,\n                        textAlign: 'center',\n                        color: 'text.secondary',\n                        border: '1px dashed',\n                        borderColor: 'divider',\n                        borderRadius: 1\n                    }}>\n                        {t('NoItemsYet')}\n                    </Box>\n                ) : (\n                    products.map((product, productIndex) => (\n                        <ProductBox key={product.id}>\n                            <Tooltip title={t(\"RemoveProduct\")} arrow>\n                                <DeleteButton\n                                    onClick={() => handleRemoveProduct(productIndex)}\n                                    aria-label={t(\"RemoveProduct\")}\n                                >\n                                    <DeleteIcon />\n                                </DeleteButton>\n                            </Tooltip>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12} md={4}>\n                                    <Box>\n                                        {/* Product Header with Name and Reorder Arrows */}\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                                <Link\n                                                    to={`/product/${product.id}`}\n                                                    style={{ textDecoration: 'none', color: 'inherit' }}\n                                                    sx={{\n                                                        '&:hover': {\n                                                            textDecoration: 'underline',\n                                                        }\n                                                    }}\n                                                >\n                                                    <Typography variant=\"h6\">{product.name}</Typography>\n                                                </Link>\n                                                {/* Reorder Arrow Buttons */}\n                                                {user?.id && (\n                                                    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 1 }}>\n                                                        <IconButton\n                                                            size=\"small\"\n                                                            onClick={() => handleMoveUp(productIndex)}\n                                                            disabled={productIndex === 0}\n                                                            aria-label=\"Move Up\"\n                                                        >\n                                                            <ArrowUpwardIcon fontSize=\"small\" />\n                                                        </IconButton>\n                                                        <IconButton\n                                                            size=\"small\"\n                                                            onClick={() => handleMoveDown(productIndex)}\n                                                            disabled={productIndex === products.length - 1}\n                                                            aria-label=\"Move Down\"\n                                                        >\n                                                            <ArrowDownwardIcon fontSize=\"small\" />\n                                                        </IconButton>\n                                                    </Box>\n                                                )}\n                                            </Box>\n                                        </Box>\n\n                                        {/* Product Image */}\n                                        <Box\n                                            component=\"img\"\n                                            src={product.imgUrl}\n                                            alt={product.name}\n                                            sx={{\n                                                width: '100%',\n                                                maxHeight: 300,\n                                                objectFit: 'contain',\n                                                mb: 2,\n                                                borderRadius: 1\n                                            }}\n                                        />\n\n                                        {/* Product Price */}\n                                        <EuroTextField\n                                            label={t(\"ProductPrice\")}\n                                            value={product.price}\n                                            onChange={(value) => handleInputChange(productIndex, 'price', value)}\n                                            margin=\"dense\"\n                                            fullWidth\n                                            readOnly={!user?.id}\n                                        />\n\n                                        {/* Discount and Discounted Price (Visible to Authorized Users) */}\n                                        {user?.id && (\n                                            <>\n                                                {/* Discount Slider */}\n                                                <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\n                                                    <Typography variant=\"subtitle1\" sx={{ mr: 2 }}>{t(\"Discount\")}</Typography>\n                                                    <Slider\n                                                        value={product.discount || 0}\n                                                        onChange={(_, newValue) => handleInputChange(productIndex, 'discount', newValue as number)}\n                                                        aria-labelledby=\"product-discount-slider\"\n                                                        valueLabelDisplay=\"auto\"\n                                                        step={1}\n                                                        marks\n                                                        min={0}\n                                                        max={100}\n                                                        sx={{ flexGrow: 1 }}\n                                                    />\n                                                    <Typography variant=\"body2\" sx={{ ml: 2 }}>\n                                                        {product.discount || 0}%\n                                                    </Typography>\n                                                </Box>\n\n                                                {/* Display Discounted Price */}\n                                                <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\n                                                    <Typography variant=\"subtitle1\">{t(\"Price\")}:</Typography>\n                                                    <Typography variant=\"body1\" sx={{ ml: 1 }}>\n                                                        {formatPrice(calculateDiscountedPrice(product.price, product.discount))}\n                                                    </Typography>\n                                                    {product.discount > 0 && (\n                                                        <>\n                                                            <DiscountedPrice variant=\"body2\">\n                                                                {formatPrice(product.price)}\n                                                            </DiscountedPrice>\n                                                            <DiscountPercentage variant=\"body2\">\n                                                                (-{product.discount}%)\n                                                            </DiscountPercentage>\n                                                        </>\n                                                    )}\n                                                </Box>\n                                            </>\n                                        )}\n\n                                        {/* Product Description */}\n                                        <Box mt={2}>\n                                            <Typography variant=\"subtitle1\">{t(\"Description\")}</Typography>\n                                            <MarkdownEditor\n                                                value={product.description || \"\"}\n                                                onChange={(value) => handleInputChange(productIndex, 'description', value)}\n                                                readOnly={!user?.id}\n                                            />\n                                        </Box>\n\n                                        {/* Product Price Summary */}\n                                        <ProductPriceSummary\n                                            product={product}\n                                            components={product.components || []}\n                                        />\n                                    </Box>\n                                </Grid>\n\n                                {/* Product Components */}\n                                <Grid item xs={12} md={8}>\n                                    <Box>\n                                        <SummaryComponentList\n                                            components={product.components || []}\n                                            onComponentChange={(updatedComponents) => handleComponentsChange(productIndex, updatedComponents)}\n                                        />\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </ProductBox>\n                    ))\n                )}\n            </Box>\n\n\n            {user?.id && (\n                <>\n                    {/* ADD PRODUCT BUTTON */}\n                    <Box sx={{ mb: 6 }}>\n                        <Button\n                            startIcon={<AddIcon />}\n                            variant=\"contained\"\n                            onClick={handleAddProduct}\n                        >\n                            {t(\"AddProduct\")}\n                        </Button>\n                    </Box>\n\n                    {/* ADD PRODUCT SEARCH DIALOG */}\n                    <Dialog open={isSearchModalOpen} onClose={handleCloseSearchModal} fullWidth maxWidth=\"md\">\n                        <DialogTitle>{t(\"AddProduct\")}</DialogTitle>\n                        <DialogContent>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                label={t(\"SearchProducts\")}\n                                type=\"text\"\n                                fullWidth\n                                variant=\"outlined\"\n                                value={searchTerm}\n                                onChange={(e) => setSearchTerm(e.target.value)}\n                            />\n                            <Box sx={{ mt: 2 }}>\n                                {filteredProducts.map((product) => (\n                                    <Box\n                                        key={product.id}\n                                        sx={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'space-between',\n                                            p: 2,\n                                            borderBottom: '1px solid #e0e0e0',\n                                            cursor: 'pointer'\n                                        }}\n                                        onClick={() => handleSelectProduct(product)}\n                                    >\n                                        <Box>\n                                            <Typography variant=\"subtitle1\">{product.name}</Typography>\n                                            <Typography variant=\"body2\" color=\"text.secondary\">\n                                                {product.description.substring(0, 100)}...\n                                            </Typography>\n                                        </Box>\n                                        <Typography variant=\"subtitle1\">{formatPrice(product.price)}</Typography>\n                                    </Box>\n                                ))}\n                            </Box>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseSearchModal}>{t(\"Cancel\")}</Button>\n                        </DialogActions>\n                    </Dialog>\n                </>\n            )}\n\n            {/* PAYMENT TERMS SECTION */}\n            <Box sx={{ \n                mb: 6, \n                mt: 4, \n                p: 4, \n                border: '1px solid #e0e0e0', \n                borderRadius: 2,\n                boxShadow: '0 2px 8px rgba(0,0,0,0.05)',\n                backgroundColor: '#f9f9f9',\n                position: 'relative',\n                overflow: 'hidden'\n            }}>\n                <Box \n                    sx={{ \n                        position: 'absolute', \n                        top: 0, \n                        left: 0, \n                        width: '8px', \n                        height: '100%', \n                        backgroundColor: 'primary.main' \n                    }} \n                />\n                <Typography \n                    variant=\"h6\" \n                    sx={{ \n                        mb: 3, \n                        fontWeight: 'bold',\n                        display: 'flex',\n                        alignItems: 'center',\n                        color: 'primary.main'\n                    }}\n                >\n                    <Box \n                        component=\"span\" \n                        sx={{ \n                            mr: 1,\n                            display: 'inline-flex',\n                            p: 0.5,\n                            borderRadius: '50%',\n                            backgroundColor: 'primary.light',\n                            color: 'white'\n                        }}\n                    >\n                        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                            <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1.41 16.09V20h-2.67v-1.93c-1.71-.36-3.16-1.46-3.27-3.4h1.96c.1 1.05.82 1.87 2.65 1.87 1.96 0 2.4-.98 2.4-1.59 0-.83-.44-1.61-2.67-2.14-2.48-.6-4.18-1.62-4.18-3.67 0-1.72 1.39-2.84 3.11-3.21V4h2.67v1.95c1.86.45 2.79 1.86 2.85 3.39H14.3c-.05-1.11-.64-1.87-2.22-1.87-1.5 0-2.4.68-2.4 1.64 0 .84.65 1.39 2.67 1.91s4.18 1.39 4.18 3.91c-.01 1.83-1.38 2.83-3.12 3.16z\"/>\n                        </svg>\n                    </Box>\n                    {t(\"PaymentTerms\")}\n                </Typography>\n                \n                <Box sx={{ \n                    backgroundColor: 'white', \n                    p: 2, \n                    borderRadius: 1,\n                    border: '1px solid #eaeaea'\n                }}>\n                    {user?.id ? (\n                        <MarkdownEditor\n                            value={paymentTerms}\n                            onChange={handlePaymentTermsChange}\n                            readOnly={!user?.id}\n                        />\n                    ) : (\n                        <Typography \n                            variant=\"body1\" \n                            sx={{ \n                                lineHeight: 1.6,\n                                fontWeight: paymentTerms.includes('MODALITA') ? 'medium' : 'normal'\n                            }}\n                        >\n                            {paymentTerms}\n                        </Typography>\n                    )}\n                </Box>\n                \n                {user?.id && (\n                    <Typography \n                        variant=\"caption\" \n                        sx={{ \n                            display: 'block', \n                            mt: 1, \n                            color: 'text.secondary',\n                            fontStyle: 'italic'\n                        }}\n                    >\n                        {t(\"EditPaymentTermsInfo\", \"Edit the payment terms above to customize the conditions\")}\n                    </Typography>\n                )}\n            </Box>\n\n            {/* PRICE SUMMARY */}\n            <Box sx={{ mb: 6 }}>\n                <PriceSummary />\n            </Box>\n\n            {/* SIGNATURE FOOTER */}\n            <Box sx={{ mb: 6 }}>\n                <DocumentFooter />\n            </Box>\n        </Box>\n    );\n};\n\nexport default PreventiveForm;\n\nconst DiscountedPrice = styled(Typography)({\n    textDecoration: 'line-through',\n    marginLeft: '4px',\n    color: '#999',\n});\n\nconst DiscountPercentage = styled(Typography)({\n    marginLeft: '4px',\n    color: '#4caf50',\n});\n\nconst ProductBox = memo(styled(Box)({\n    marginBottom: '32px',\n    padding: '24px',\n    backgroundColor: '#ffffff',\n    borderRadius: '4px',\n    position: 'relative',\n    transition: 'all 0.3s ease',\n    '&:hover': {\n        boxShadow: '0 0 0 2px #e4e4e4',\n    },\n}));\n\nconst DeleteButton = styled(IconButton)({\n    position: 'absolute',\n    top: '8px',\n    right: '8px',\n    color: '#000000',\n    '&:hover': {\n        color: '#ff0000',\n    },\n});","import styled from '@emotion/styled';\nimport { Box } from \"@mui/material\";\nimport { FC, useEffect, useState } from \"react\";\nimport { useDocumentContext } from 'state/documentContext';\nimport { useAppState } from 'state/stateContext';\nimport { DocumentDataDataType, Revision } from 'types';\nimport Loading from '../../components/Loading';\nimport DocumentManagementPanel from \"./components/DocumentManagementPanel\";\nimport LockView from './components/LockView'; // Import LockView\nimport PreventiveForm from \"./components/PreventiveForm\";\n\nconst SharedDocument: FC = () => {\n    const { originalDocumentData, setUpdatedDocumentData } = useDocumentContext();\n    const [activeRevision, setActiveRevision] = useState<Revision>();\n    const [isLocked, setIsLocked] = useState(true);\n    const [loading, setLoading] = useState(true);\n    const { user, verifyToken } = useAppState();\n\n    useEffect(() => {\n        setLoading(true)\n        const checkUserAuthorization = async () => {\n            try {\n                await verifyToken();\n                if (user?.role === 'admin') {\n                    setIsLocked(false);\n                }\n            } catch (error) {\n                console.error(\"Authorization error:\", error);\n            } finally {\n                setLoading(false); // Set loading to false after checking\n            }\n        };\n\n        checkUserAuthorization();\n    }, []);\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    const handleChosenRevision = (revision: Revision) => {\n\n        if (revision && revision.snapshot) {\n            try {\n                setActiveRevision(revision);\n                setUpdatedDocumentData({ ...originalDocumentData, data: revision.snapshot });\n            } catch (error) {\n                console.error(\"Error parsing snapshot data:\", error);\n            }\n        } else {\n            console.error(\"Revision data is undefined or missing\", revision);\n        }\n    };\n\n    return (\n        <Container>\n\n            {isLocked ? (\n                <LockView setIsLocked={setIsLocked} /> // Show LockView if the document is locked\n            ) : (\n                <>\n                    <Content>\n                        <PreventiveForm\n                            activeRevisionLabel={activeRevision?.label}\n                            revisionData={activeRevision?.snapshot as DocumentDataDataType}\n                        />\n                    </Content>\n                    <Sidebar>\n                        <DocumentManagementPanel selectedRevisionId={activeRevision?.id} handleChosenRevision={handleChosenRevision} />\n                    </Sidebar>\n                </>\n            )}\n        </Container>\n    );\n};\n\nexport default SharedDocument;\n\nconst Container = styled(Box)`\n    display: grid;\n    grid-template-columns: 3fr 1fr;\n    height: 100vh;\n    overflow: hidden;\n`;\n\nconst Content = styled(Box)`\n    margin-top: 60px;\n    overflow-y: auto;\n    padding: 20px;\n`;\n\nconst Sidebar = styled(Box)`\n    position: fixed;\n    top: 60px;\n    right: 0;\n    width: 25%;\n    height: calc(100vh - 60px);\n    overflow-y: auto;\n    background: #fff;\n    padding: 10px;\n    min-width: 400px;\n`;\n\n","// src/utils/formatPrice.ts\n\nexport const formatPrice = (price: number | string): string => {\n  const priceNum = Number(price);\n  return priceNum\n    .toFixed(2)  // Ensure two decimal places\n    .replace('.', ',')  // Replace decimal point with comma\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");  // Add periods for thousands\n};\n"],"names":["StatusLabel","styled","span","props","compact","bgColor","textColor","_ref","statuses","t","useTranslation","statusStyles","CLIENT_VIEWED_DOC","YOUR_TURN","FINALIZED","REJECTED","Object","values","some","value","_jsx","className","children","entries","map","_ref2","status","style","label","Tooltip","title","_jsxs","marginRight","StyledTextField","TextField","onChange","fullWidth","sx","readOnly","NumericFormat","customInput","onValueChange","formattedValue","thousandSeparator","decimalSeparator","decimalScale","fixedDecimalScale","InputProps","startAdornment","InputAdornment","position","undefined","Box","MDEditor","val","preview","hideToolbar","height","visibleDragbar","product","components","calculateDiscountedPrice","price","discount","componentTotal","reduce","total","component","included","quantity","isNaN","productDiscountedPrice","totalPrice","mt","p","border","borderColor","borderRadius","Typography","variant","gutterBottom","display","justifyContent","mb","formatPrice","fontWeight","fontSize","color","MarkdownEditor","initialDescription","onSave","isEditing","setIsEditing","useState","description","setDescription","alignItems","IconButton","onClick","SaveIcon","EditIcon","React","onComponentChange","filter","setFilter","sortOrder","setSortOrder","localComponents","setLocalComponents","user","useAppState","anchorEl","setAnchorEl","selectedComponent","setSelectedComponent","discountAnchorEl","setDiscountAnchorEl","discountComponent","setDiscountComponent","globalDiscount","setGlobalDiscount","useGlobalDiscount","setUseGlobalDiscount","isEditingPrice","setIsEditingPrice","newPrice","setNewPrice","useEffect","index","originalIndex","handleCheckAll","checked","updatedComponents","handleMoveComponent","id","direction","findIndex","newIndex","length","newComponents","removed","splice","idx","handleGlobalDiscountChange","debounce","func","delay","timeoutId","_len","arguments","args","Array","_key","clearTimeout","setTimeout","discountOpen","Boolean","filteredAndSortedComponents","useMemo","name","toLowerCase","includes","sort","a","b","localeCompare","safeDiscount","handleQuantityChange","increment","prevComponents","newQuantity","Math","max","ComponentListContainer","ControlsBox","toggleSort","current","SortIcon","CheckBoxIcon","CheckBoxOutlineBlankIcon","size","placeholder","e","target","flexGrow","GlobalDiscountControl","FormControlLabel","control","Checkbox","event","useGlobal","type","min","parseInt","disabled","inputProps","width","_Fragment","_component$discount","ComponentItem","selected","MoveButtonsContainer","ArrowUpwardIcon","ArrowDownwardIcon","ComponentCheckbox","handleComponentToggle","ComponentNamePriceContainer","ComponentName","ComponentPrice","DiscountedPrice","DiscountPercentage","arrow","RemoveIcon","AddIcon","handlePopoverOpen","currentTarget","VisibilityIcon","handleDiscountPopoverOpen","DiscountIcon","Popover","open","onClose","handlePopoverClose","anchorOrigin","vertical","horizontal","transformOrigin","padding","EditableDescription","newDescription","marginTop","Number","handlePriceSave","handlePriceEdit","handleDiscountPopoverClose","DiscountSliderContainer","Slider","newValue","handleDiscountChange","prev","valueLabelDisplay","step","marks","maxWidth","marginBottom","gap","flexWrap","opacity","flexShrink","flex","minWidth","overflow","flexDirection","_ref3","whiteSpace","_ref4","textDecoration","marginLeft","determineActor","client","StyledTableRow","TableRow","NameCell","TableCell","PDFPreviewGrid","_updatedDocumentData$","updatedDocumentData","useDocumentContext","sortedPdfUrls","pdfUrls","Date","timestamp","getTime","confirmationPdfs","pdf","preventivoPdfs","renderPdfTable","pdfList","my","textAlign","TableContainer","Paper","boxShadow","Table","TableHead","TableBody","window","url","scope","DescriptionIcon","mr","noWrap","toLocaleString","colSpan","BadgeContainer","div","RevisionButton","Button","active","RevisionText","revisions","selectedRevisionId","handleChosenRevision","resetToOriginal","revision","dateText","createdAt","FlagIcon","changeLogs","formatChangeDetails","change","property","details","fromValue","toValue","fromMatch","match","toMatch","JSON","parse","parseDetailsString","formattedChange","_updatedDocumentData$2","productMatch","componentMatch","productIndex","componentIndex","data","addedProducts","_updatedDocumentData$3","productName","componentName","primary","secondary","List","dense","ListItem","ListItemText","ActionsTab","_data","_updatedDocumentData$4","_updatedDocumentData$5","confirmDocument","generatePDF","saveDocument","rejectDocument","actor","selectedClient","openDialog","setOpenDialog","dialogAction","setDialogAction","isRevision","setIsRevision","revisionLabel","setRevisionLabel","hasChanges","handleOpenDialog","action","handleCloseDialog","mailtoLink","email","encodeURIComponent","firstName","lastName","hash","otp","ActionsContainer","ChangesContainer","StatusCell","align","InfoIcon","cursor","ml","ButtonsGrid","ActionButton","handleSaveDocument","startIcon","handleDiscardChanges","location","reload","DeleteIcon","CheckIcon","ShareIcon","CloseIcon","ChangeLogList","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","other","role","hidden","verifyToken","updateDocumentDataFromRevision","setUpdatedDocumentData","theActor","setTheActor","setValue","result","Tabs","handleChange","backgroundColor","PALETTE","Blue","Black3","Tab","Badge","overlap","TabPanel","Revisions","selectedRevision","find","r","note","newNote","prevData","minRows","StyledBackdrop","Backdrop","FormContainer","setIsLocked","originalDocumentData","getDocument","clientViewedDocument","inputOTP","setInputOTP","loading","setLoading","useParams","error","setError","showMessage","useFlashMessage","navigate","useNavigate","isAdmin","employeeID","savedOTP","localStorage","getItem","handleUnlock","async","setItem","elevation","CircularProgress","margin","Divider","prefix","displayType","PriceSummary","expandedDetails","setExpandedDetails","updateNestedDocumentField","currentDiscount","setCurrentDiscount","subtotal","discountAmount","subtotalAfterDiscount","taxAmount","totalAfterDiscount","productDetails","documentData","_documentData$data$ad","_documentData$data","taxRate","netDiscountOnTotal","_product$price$toStri","_product$price","_product$discount","_product$components$f","_product$components","basePrice","parseFloat","toString","productDiscount","productDiscountAmount","discountedProductPrice","includedComponents","_component$price$toSt","_component$price","componentBasePrice","discountedComponentPrice","componentsTotal","calculatePriceSummary","Accordion","expanded","handleExpandDetails","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","FormattedPrice","sum","comp","cIndex","pl","EuroTextField","discountValue","ClientPreventiveHeadComponent","_originalDocumentData","_originalDocumentData2","_originalDocumentData3","_originalDocumentData4","_originalDocumentData5","_originalDocumentData6","_originalDocumentData7","_originalDocumentData8","_originalDocumentData9","_originalDocumentData10","getUsers","users","theEmployee","setTheEmployee","objectEditMode","setObjectEditMode","descriptionEditMode","setDescriptionEditMode","objectValue","setObjectValue","quoteHeadDetails","object","descriptionValue","setDescriptionValue","_updatedDocumentData$6","isReadOnly","Grid","container","spacing","item","xs","md","src","Logo","alt","company","PersonIcon","username","EmailIcon","BusinessIcon","companyName","trim","SubjectIcon","handleObjectChange","handleDescriptionChange","Input","SignaturePreview","objectFit","DocumentFooter","signatureUrl","uploadSignature","useBusinessSignature","setSignatureUrl","fetchSignature","response","request","method","body","formData","updateDocumentField","signaturePreview","setSignaturePreview","selectedDate","setSelectedDate","dateOfSignature","bgcolor","fallbackImage","htmlFor","accept","files","file","URL","createObjectURL","FormData","append","console","newDate","InputLabelProps","shrink","Alert","forwardRef","ref","MuiAlert","activeRevisionLabel","revisionData","getProducts","products","allProducts","setProducts","isSearchModalOpen","setIsSearchModalOpen","searchTerm","setSearchTerm","filteredProducts","setFilteredProducts","paymentTerms","setPaymentTerms","handleInputChange","field","updatedProducts","numericValue","handleCloseSearchModal","handleMoveUp","useCallback","handleMoveDown","Loading","background","paddingBottom","handleCloseSnackbar","reason","severity","zIndex","iconMapping","warning","py","ProductBox","DeleteButton","_","handleRemoveProduct","Link","to","imgUrl","maxHeight","ProductPriceSummary","SummaryComponentList","handleComponentsChange","i","handleAddProduct","borderBottom","selectedProduct","handleSelectProduct","substring","top","left","viewBox","fill","d","lineHeight","fontStyle","memo","transition","right","SharedDocument","activeRevision","setActiveRevision","isLocked","checkUserAuthorization","Container","LockView","Content","PreventiveForm","snapshot","Sidebar","DocumentManagementPanel","toFixed","replace"],"sourceRoot":""}