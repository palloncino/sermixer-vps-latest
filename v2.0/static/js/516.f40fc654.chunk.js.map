{"version":3,"file":"static/js/516.f40fc654.chunk.js","mappings":"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","sources":["components/FilterBar/index.tsx","components/FlashMessage/index.tsx","components/HighlightText/index.tsx","components/PageHeader/index.tsx","components/ProductCard/index.js","components/ProductGrid/index.js","components/ProductList/index.tsx","pages/product/product-list-page.js","utils/format-price.ts"],"sourcesContent":["import React from 'react';\nimport { Box, TextField, FormControl, InputLabel, Select, MenuItem, Slider, Typography } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\ninterface FilterConfig {\n  id: string;\n  type: string;\n  label: string;\n  options?: { value: string; label: string }[];\n  min?: number;\n  max?: number;\n  step?: number;\n  defaultValue?: number[];\n}\n\ninterface FilterBarProps {\n  filters: {\n    search: string;\n    category: string;\n    priceRange: number[];\n    company: string;\n  };\n  filtersConfig: FilterConfig[];\n  onFilterChange: (filterId: string, value: any) => void;\n}\n\nconst FilterBar: React.FC<FilterBarProps> = ({ filters, filtersConfig, onFilterChange }) => {\n  const { t } = useTranslation();\n\n  const handleFilterChange = (filterId: string, value: any) => {\n    onFilterChange(filterId, value);\n  };\n\n  const renderFilter = (filter: FilterConfig) => {\n    switch (filter.type) {\n      case 'text':\n        return (\n          <TextField\n            fullWidth\n            label={t(filter.label)}\n            value={filters[filter.id as keyof typeof filters] || ''}\n            onChange={(e) => handleFilterChange(filter.id, e.target.value)}\n          />\n        );\n      case 'select':\n        return (\n          <FormControl fullWidth>\n            <InputLabel>{t(filter.label)}</InputLabel>\n            <Select\n              value={filters[filter.id as keyof typeof filters] || ''}\n              onChange={(e) => handleFilterChange(filter.id, e.target.value)}\n            >\n              {filter.options?.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {t(option.label)}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        );\n      case 'range':\n        return (\n          <Box>\n            <Typography gutterBottom>{t(filter.label)}</Typography>\n            <Slider\n              key={filter.id}\n              value={filters[filter.id as keyof typeof filters] || filter.defaultValue}\n              onChange={(_, newValue) => handleFilterChange(filter.id, newValue)}\n              valueLabelDisplay=\"auto\"\n              min={filter.min}\n              max={filter.max}\n              step={filter.step}\n            />\n          </Box>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Box sx={{ \n      display: 'grid', \n      gridTemplateColumns: `repeat(${filtersConfig.length}, 1fr)`, \n      gap: 2, \n      mb: 2 \n    }}>\n      {filtersConfig.map((filter) => (\n        <Box key={filter.id}>\n          {renderFilter(filter)}\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nexport default FilterBar;","import { Box } from '@mui/material';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\n\ninterface FlashMessageProps {\n  message: string;\n  type: 'success' | 'warning' | 'error' | 'info';\n}\n\nfunction FlashMessage({ message, type }: FlashMessageProps) {\n  return (\n    <>\n      <Box py={2}>\n        <Stack sx={{ width: '100%' }} spacing={2}>\n          <Alert severity={type}>{message}</Alert>\n        </Stack>\n      </Box>\n    </>\n  );\n}\n\nexport default FlashMessage;\n","import React from 'react';\n\ninterface HighlightProps {\n  text: string;\n  search: string;\n}\n\nconst Highlight: React.FC<HighlightProps> = ({ text, search }) => {\n  if (!text) return null;\n  if (!search) return <>{text}</>;\n\n  const parts = text.split(new RegExp(`(${search})`, 'gi'));\n\n  return (\n    <span>\n      {parts.map((part, index) => \n        part.toLowerCase() === search.toLowerCase() ? (\n          <mark key={index}>{part}</mark>\n        ) : (\n          part\n        )\n      )}\n    </span>\n  );\n};\n\nexport default Highlight;","import { Paper, Typography, styled as muiStyled } from \"@mui/material\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { PALETTE } from \"../../constants/index.ts\";\n\nconst PageHeader = ({ title, description = '', margin }: any) => {\n  return (\n    <FullWidthStyledContainer margin={margin}>\n      <LimitedContainer>\n        <Title variant=\"h4\" align=\"left\">\n          {title}\n        </Title>\n        {description ? (\n          <Description variant=\"body1\" paragraph align=\"left\">\n            {description}\n          </Description>\n        ) : null}\n      </LimitedContainer>\n    </FullWidthStyledContainer>\n  );\n};\n\nconst Title = muiStyled(Typography)`\n  width: 100%;\n`;\n\nconst FullWidthStyledContainer = styled.div<{margin?: string}>`\n  margin: ${({ margin }) => margin ? margin : '4rem 0 0rem 0'};\n  padding: 24px 0 24px 0;\n`;\n\nconst LimitedContainer = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  padding: 0 1rem;\n`;\n\nconst Description = muiStyled(Typography)`\n  line-height: 2rem;\n  transition: opacity 0.5s ease-in-out; /* Smooth transition effect */\n  opacity: 1;\n\n  &:not(:hover) {\n    opacity: 0.7;\n  }\n`;\n\nexport default PageHeader;\n\n\nexport const PageHeaderStyle2 = ({ title, description = '', margin }: any) => {\n  return (\n    <FullWidthStyledContainerStyle2 margin={margin}>\n      <LimitedContainerStyle2>\n        <TitleStyle2 variant=\"h4\" gutterBottom align=\"left\">\n          {title}\n        </TitleStyle2>\n        {description ? (\n          <DescriptionStyle2 variant=\"body1\" paragraph align=\"left\">\n            {description}\n          </DescriptionStyle2>\n        ) : null}\n      </LimitedContainerStyle2>\n    </FullWidthStyledContainerStyle2>\n  );\n};\n\nconst TitleStyle2 = muiStyled(Typography)`\n  width: 100%;\n`;\n\nconst FullWidthStyledContainerStyle2 = styled(\"div\")<{margin?: string}>`\n  background: #F5F5F5;\n  border-radius: .4rem;\n  color: ${PALETTE.Black3};\n  align-text: center;\n  margin: ${({ margin }) => margin ? margin : '4rem 0 0rem 0'};\n  padding: 24px 0 24px 0;\n`;\n\nconst LimitedContainerStyle2 = styled.div`\nwidth: 100%;\nmargin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  padding: 0 1rem;\n`;\n\nconst DescriptionStyle2 = muiStyled(Typography)`\n  line-height: 2rem;\n  margin: 0;\n  transition: opacity 0.5s ease-in-out; /* Smooth transition effect */\n  opacity: 1;\n\n  &:not(:hover) {\n    opacity: 0.7;\n  }\n`;\n","import {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport fallbackProductImg from \"../../media/fallbackProduct.png\";\nimport { formatPrice } from \"../../utils/format-price.ts\";\n\n\nconst CustomCard = styled(Card)`\n  max-width: 400px;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  transition: box-shadow 0.3s;\n  height: 500px;\n  overflow: hidden;\n  position: relative;\n  &:hover {\n    box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\n  }\n`;\n\nconst CustomButton = styled(Button)`\n  margin-right: 8px;\n`;\n\nconst Description = styled(Typography)`\n  display: -webkit-box;\n  -webkit-line-clamp: 3; /* Limit to 3 lines */\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst OptionalDetails = styled(Box)`\n  margin-top: 16px;\n  padding: 16px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n`;\n\nconst CardActionsWrapper = styled(CardActions)`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  background: white;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ComponentDetails = styled(Box)`\n  margin-top: 16px;\n`;\n\nconst ProductCard = ({ product, handleDeleteProducts }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const renderComponentDetails = (components) => {\n    if (!components || components.length === 0) {\n      return (\n        <Typography variant=\"body2\">{t(\"NoComponentsAvailable\")}</Typography>\n      );\n    }\n\n    return (\n      <ComponentDetails>\n        <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", mb: 1 }}>\n          {t(\"Components\")}\n        </Typography>\n        {components.map((component, componentIndex) => (\n          <OptionalDetails key={componentIndex}>\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: \"bold\" }}>\n              {component.name}\n            </Typography>\n            <Table size=\"small\">\n              <TableBody>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    Description\n                  </TableCell>\n                  <TableCell>{component.description}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    Price\n                  </TableCell>\n                  <TableCell>€{component.price}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </OptionalDetails>\n        ))}\n      </ComponentDetails>\n    );\n  };\n\n  // Ensure components are arrays\n  const components = Array.isArray(product.components)\n    ? product.components\n    : [];\n\n  return (\n    <CustomCard>\n      <CardMedia\n        component=\"img\"\n        height=\"200\"\n        image={\n          typeof product.imgUrl === \"string\"\n            ? product.imgUrl\n            : fallbackProductImg\n        }\n        alt={product.name}\n      />\n      <CardContent sx={{ flexGrow: 1, overflow: \"hidden\" }}>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          {product.name}\n        </Typography>\n        <Description variant=\"body2\" color=\"text.secondary\">\n          {product.description}\n        </Description>\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n          Category: {product.category}\n        </Typography>\n        <Typography variant=\"h6\" color=\"primary\" sx={{ mt: 1 }}>\n          <strong>{t('EUR')} {formatPrice(product.price)}</strong>\n        </Typography>\n        <Divider sx={{ my: 2 }} />\n        {renderComponentDetails(components)}\n        <Divider sx={{ my: 2 }} />\n      </CardContent>\n      <CardActionsWrapper>\n        <CustomButton\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => navigate(`/product/${product.id}`)}\n        >\n          {t(\"ViewMore\")}\n        </CustomButton>\n        <CustomButton\n          size=\"small\"\n          color=\"secondary\"\n          onClick={() => handleDeleteProducts(product.id)}\n        >\n          {t(\"Delete\")}\n        </CustomButton>\n      </CardActionsWrapper>\n    </CustomCard>\n  );\n};\n\nexport default ProductCard;\n","import React, { useState } from \"react\";\nimport { Grid, Pagination, Box } from \"@mui/material\";\nimport ProductCard from \"../ProductCard\";\n\nconst ProductGrid = ({ products, handleDeleteProducts }) => {\n  const [page, setPage] = useState(1);\n  const itemsPerPage = 6;\n\n  const handleChangePage = (event, value) => {\n    setPage(value);\n  };\n\n  // Calculate the products to be displayed on the current page\n  const displayedProducts = products.slice(\n    (page - 1) * itemsPerPage,\n    page * itemsPerPage\n  );\n\n  return (\n    <Box>\n      <Grid container spacing={2}>\n        {displayedProducts.map((product) => (\n          <Grid item xs={12} sm={6} md={3} key={product.id}>\n            <ProductCard\n              product={product}\n              handleDeleteProducts={handleDeleteProducts}\n            />\n          </Grid>\n        ))}\n      </Grid>\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n        <Pagination\n          count={Math.ceil(products.length / itemsPerPage)}\n          page={page}\n          onChange={handleChangePage}\n          color=\"primary\"\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProductGrid;\n","import DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport {\n  Box,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ROUTES } from '../../constants/index';\nimport { useAppState } from \"../../state/stateContext\";\nimport { ProductType } from \"../../types/index\";\nimport { dateText } from \"../../utils/date-text\";\nimport { formatPrice } from \"../../utils/format-price\";\nimport { isAdmin } from \"../../utils/isWho.js\";\nimport Highlight from \"../HighlightText/index\";\n\ninterface ProductListProps {\n  products: ProductType[];\n  handleDeleteProducts: (id: number) => void;\n  search?: string;\n  priceRange?: [number, number];\n}\n\nconst ProductList: React.FC<ProductListProps> = ({ products, handleDeleteProducts, search, priceRange }) => {\n  const { t } = useTranslation();\n  const { user } = useAppState();\n  const [order, setOrder] = useState<\"asc\" | \"desc\">(\"asc\");\n  const [orderBy, setOrderBy] = useState<keyof ProductType>(\"name\");\n  const navigate = useNavigate();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleRequestSort = (property: keyof ProductType) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const filteredProducts = products.filter(product => {\n    const price = parseFloat(product.price);\n    if (!priceRange) return true;\n    return (priceRange[1] === 100000 || (price >= priceRange[0] && price <= priceRange[1]));\n  });\n\n  const sortedProducts = [...filteredProducts].sort((a, b) => {\n    if (orderBy === \"price\") {\n      return order === \"asc\" ? parseFloat(a.price) - parseFloat(b.price) : parseFloat(b.price) - parseFloat(a.price);\n    }\n    if (orderBy === \"updatedAt\") {\n      return order === \"asc\" \n        ? new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime()\n        : new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\n    }\n    return order === \"asc\" ? a[orderBy].localeCompare(b[orderBy]) : b[orderBy].localeCompare(a[orderBy]);\n  });\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleViewProduct = (productId: number) => {\n    navigate(ROUTES(productId).productPage);\n  };\n\n  const handleEditProduct = (productId: number, event: React.MouseEvent) => {\n    event.stopPropagation();\n    navigate(ROUTES(productId).editProduct);\n  };\n\n  const handleDeleteProduct = (productId: number, event: React.MouseEvent) => {\n    event.stopPropagation();\n    handleDeleteProducts(productId);\n  };\n\n  const truncateText = (text: string, maxLength: number) => {\n    return text.length > maxLength ? `${text.substring(0, maxLength)}...` : text;\n  };\n\n  return (\n    <Paper elevation={0} sx={{ backgroundColor: 'white', borderRadius: 1, boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.12)' }}>\n      <TableContainer>\n        <Table size=\"small\" aria-label=\"product table\">\n          <TableHead>\n            <TableRow>\n              <TableCell width=\"5%\">{t('ID')}</TableCell>\n              <TableCell width=\"10%\" align=\"center\">{t('Image')}</TableCell>\n              <TableCell width=\"35%\">\n                <TableSortLabel\n                  active={orderBy === \"name\"}\n                  direction={orderBy === \"name\" ? order : \"asc\"}\n                  onClick={() => handleRequestSort(\"name\")}\n                >\n                  {t('Name')}\n                </TableSortLabel>\n              </TableCell>\n              <TableCell width=\"10%\" align=\"right\">{t('Category')}</TableCell>\n              <TableCell width=\"10%\" align=\"right\">\n                <TableSortLabel\n                  active={orderBy === \"price\"}\n                  direction={orderBy === \"price\" ? order : \"asc\"}\n                  onClick={() => handleRequestSort(\"price\")}\n                >\n                  {t('Price')}\n                </TableSortLabel>\n              </TableCell>\n              <TableCell width=\"15%\" align=\"right\">\n                <TableSortLabel\n                  active={orderBy === \"updatedAt\"}\n                  direction={orderBy === \"updatedAt\" ? order : \"asc\"}\n                  onClick={() => handleRequestSort(\"updatedAt\")}\n                >\n                  {t('LastUpdate')}\n                </TableSortLabel>\n              </TableCell>\n              <TableCell width=\"15%\" align=\"center\">{t('Actions')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sortedProducts\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((product) => (\n                <TableRow\n                  key={product.id}\n                  sx={{ '&:hover': { backgroundColor: 'rgba(0, 0, 0, 0.04)' } }}\n                >\n                  <TableCell>{product.id}</TableCell>\n                  <TableCell align=\"center\">\n                    {product.imgUrl ? (\n                      <Tooltip\n                        title={\n                          <img\n                            src={product.imgUrl}\n                            alt={product.name}\n                            style={{\n                              width: '200px', // Full-width image inside tooltip\n                              height: 'auto',\n                              objectFit: 'contain',\n                              borderRadius: '4px',\n                            }}\n                          />\n                        }\n                        placement=\"top\"\n                        componentsProps={{\n                          tooltip: {\n                            sx: {\n                              maxWidth: 'none',\n                            },\n                          },\n                        }}\n                      >\n                        <img\n                          src={product.imgUrl}\n                          alt={product.name}\n                          style={{ width: \"40px\", height: \"40px\", objectFit: \"cover\", cursor: \"pointer\", borderRadius: '4px' }}\n                        />\n                      </Tooltip>\n                    ) : (\n                      \"N/A\"\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    <Tooltip title={product.name}>\n                      <Typography\n                        component=\"span\"\n                        sx={{\n                          cursor: 'pointer',\n                          '&:hover': { textDecoration: 'underline' },\n                          whiteSpace: 'nowrap',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis',\n                          display: 'block'\n                        }}\n                        onClick={() => handleViewProduct(product.id)}\n                      >\n                        <Highlight text={truncateText(product.name, 50)} search={search} />\n                      </Typography>\n                    </Tooltip>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Tooltip title={product.category}>\n                      <Typography\n                        sx={{\n                          whiteSpace: 'nowrap',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis'\n                        }}\n                      >\n                        <Highlight text={truncateText(product.category, 15)} search={search} />\n                      </Typography>\n                    </Tooltip>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {t('EUR')} {formatPrice(product.price)}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Tooltip title={product.updatedAt ? new Date(product.updatedAt).toLocaleString() : \"\"}>\n                      <Typography\n                        sx={{\n                          whiteSpace: 'nowrap',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis'\n                        }}\n                      >\n                        {product.updatedAt ? dateText(product.updatedAt) : \"\"}\n                      </Typography>\n                    </Tooltip>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Box display=\"flex\" justifyContent=\"center\">\n                      <Tooltip title={t('View')}>\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => handleViewProduct(product.id)}\n                        >\n                          <VisibilityIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                      <Tooltip title={t('Edit')}>\n                        <span>\n                          <IconButton\n                            size=\"small\"\n                            disabled={!isAdmin(user)}\n                            onClick={(e) => handleEditProduct(product.id, e)}\n                          >\n                            <EditIcon fontSize=\"small\" />\n                          </IconButton>\n                        </span>\n                      </Tooltip>\n                      <Tooltip title={t('Delete')}>\n                        <span>\n                          <IconButton\n                            size=\"small\"\n                            disabled={!isAdmin(user)}\n                            onClick={(e) => handleDeleteProduct(product.id, e)}\n                          >\n                            <DeleteIcon fontSize=\"small\" />\n                          </IconButton>\n                        </span>\n                      </Tooltip>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={filteredProducts.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n};\n\nexport default ProductList;\n","import { ViewList, ViewModule } from \"@mui/icons-material\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  ToggleButton,\n  ToggleButtonGroup\n} from \"@mui/material\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useFlashMessage } from \"state/FlashMessageContext\";\nimport FilterBar from \"../../components/FilterBar\";\nimport FlashMessage from \"../../components/FlashMessage\";\nimport Loading from \"../../components/Loading\";\nimport PageHeader from \"../../components/PageHeader\";\nimport ProductGrid from \"../../components/ProductGrid\";\nimport ProductList from \"../../components/ProductList\";\nimport { ROUTES, getProductsFiltersConfig } from \"../../constants/index\";\nimport { useAppState } from \"../../state/stateContext\";\nimport { isAdmin } from \"../../utils/isWho.js\";\nimport { WhitePaperContainer } from \"../documents/styled-components/index\";\n\nfunction ProductListPage() {\n  const { t } = useTranslation();\n  const { showMessage } = useFlashMessage();\n  const { user, products, deleteProducts, getProducts, loadingProducts } =\n    useAppState();\n  const [filters, setFilters] = useState({\n    search: '',\n    category: 'all',\n    priceRange: [0, 1000000],\n    company: 'all'\n  });\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [viewMode, setViewMode] = useState(\"list\"); // list | grid\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  const handleFilterChange = (filterId: string, value: any) => {\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [filterId]: value\n    }));\n  };\n\n  const handleDeleteProducts = async (id) => {\n    try {\n      const userConfirmed = window.confirm(\n        t(\"ConfirmDeletionProductAlertMessage\")\n      );\n\n      if (userConfirmed) {\n        const response = await deleteProducts([id]);\n        const { message } = response;\n        setSuccessMessage(message);\n        showMessage(message, 'success')\n        getProducts();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleViewChange = (event, nextView) => {\n    if (nextView !== null) {\n      setViewMode(nextView);\n    }\n  };\n\n  const filteredProducts = useMemo(() => {\n    return products.filter(product => {\n      const price = Number(product.price); // Ensure price is a number\n      const matchesSearch = !filters.search || \n        product.name.toLowerCase().includes(filters.search.toLowerCase()) ||\n        product.description.toLowerCase().includes(filters.search.toLowerCase());\n      const matchesCategory = filters.category === 'all' || product.category === filters.category;\n      const matchesPriceRange = price >= filters.priceRange[0] && price <= filters.priceRange[1];\n      const matchesCompany = filters.company === 'all' || product.company === filters.company;\n\n      return matchesSearch && matchesCategory && matchesPriceRange && matchesCompany;\n    });\n  }, [products, filters]);\n\n  return (\n    <WhitePaperContainer>\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n        {successMessage && (\n          <Box sx={{ pt: 2, mb: 2 }}>\n            <FlashMessage message={successMessage} type=\"success\" />\n          </Box>\n        )}\n        <Grid\n          container\n          spacing={2}\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          sx={{ mb: 0 }}\n        >\n          <Grid item>\n            <ToggleButtonGroup\n              value={viewMode}\n              exclusive\n              onChange={handleViewChange}\n              aria-label=\"View mode\"\n            >\n              <ToggleButton value=\"list\" aria-label=\"list\">\n                <ViewList />\n              </ToggleButton>\n              <ToggleButton value=\"grid\" aria-label=\"grid\">\n                <ViewModule />\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </Grid>\n          <PageHeader title={t(\"ProductListPageHeadTitle\")} margin={'0'} />\n          <Grid item>\n            <Button\n              disabled={!isAdmin(user)}\n              variant=\"contained\"\n              color=\"primary\"\n              component={RouterLink}\n              to={ROUTES().createProduct}\n              sx={{ mr: 2 }}\n            >\n              {t(\"CreateNewProduct\")}\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} sx={{ mt: 2 }}>\n          <Grid item xs={12}>\n            <FilterBar\n              filters={filters}\n              filtersConfig={getProductsFiltersConfig()}\n              caseSensitive={false}\n              onFilterChange={handleFilterChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            {loadingProducts ? (\n              <Loading />\n            ) : viewMode === \"list\" ? (\n              <ProductList\n                search={filters.search} // for highlighting the text\n                products={filteredProducts}\n                handleDeleteProducts={handleDeleteProducts}\n              />\n            ) : (\n              <ProductGrid // You need to create this component similar to ProductList but for grid view\n                products={filteredProducts}\n                handleDeleteProducts={handleDeleteProducts}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Container>\n    </WhitePaperContainer>\n  );\n}\n\nexport default ProductListPage;\n","// src/utils/formatPrice.ts\n\nexport const formatPrice = (price: number | string): string => {\n  const priceNum = Number(price);\n  return priceNum\n    .toFixed(2)  // Ensure two decimal places\n    .replace('.', ',')  // Replace decimal point with comma\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");  // Add periods for thousands\n};\n"],"names":["_ref","filters","filtersConfig","onFilterChange","t","useTranslation","handleFilterChange","filterId","value","renderFilter","filter","_filter$options","type","_jsx","TextField","fullWidth","label","id","onChange","e","target","_jsxs","FormControl","children","InputLabel","Select","options","map","option","MenuItem","Box","Typography","gutterBottom","Slider","defaultValue","_","newValue","valueLabelDisplay","min","max","step","sx","display","gridTemplateColumns","length","gap","mb","message","_Fragment","py","Stack","width","spacing","Alert","severity","text","search","parts","split","RegExp","part","index","toLowerCase","Title","muiStyled","FullWidthStyledContainer","styled","div","_ref2","margin","LimitedContainer","Description","title","description","variant","align","paragraph","PALETTE","Black3","_ref4","CustomCard","Card","CustomButton","Button","OptionalDetails","CardActionsWrapper","CardActions","ComponentDetails","product","handleDeleteProducts","navigate","useNavigate","components","Array","isArray","CardMedia","component","height","image","imgUrl","fallbackProductImg","alt","name","CardContent","flexGrow","overflow","color","mt","category","formatPrice","price","Divider","my","fontWeight","componentIndex","Table","size","TableBody","TableRow","TableCell","scope","renderComponentDetails","onClick","products","page","setPage","useState","displayedProducts","slice","Grid","container","item","xs","sm","md","ProductCard","justifyContent","Pagination","count","Math","ceil","handleChangePage","event","priceRange","user","useAppState","order","setOrder","orderBy","setOrderBy","rowsPerPage","setRowsPerPage","handleRequestSort","property","filteredProducts","parseFloat","sortedProducts","sort","a","b","Date","updatedAt","getTime","localeCompare","handleViewProduct","productId","ROUTES","productPage","truncateText","maxLength","substring","Paper","elevation","backgroundColor","borderRadius","boxShadow","TableContainer","TableHead","TableSortLabel","active","direction","Tooltip","src","style","objectFit","placement","componentsProps","tooltip","maxWidth","cursor","textDecoration","whiteSpace","textOverflow","Highlight","toLocaleString","dateText","IconButton","VisibilityIcon","fontSize","disabled","isAdmin","handleEditProduct","stopPropagation","editProduct","EditIcon","handleDeleteProduct","DeleteIcon","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","parseInt","showMessage","useFlashMessage","deleteProducts","getProducts","loadingProducts","setFilters","company","successMessage","setSuccessMessage","viewMode","setViewMode","useEffect","async","window","confirm","response","error","console","useMemo","Number","matchesSearch","includes","matchesCategory","matchesPriceRange","matchesCompany","WhitePaperContainer","Container","pt","FlashMessage","alignItems","ToggleButtonGroup","exclusive","handleViewChange","nextView","ToggleButton","ViewList","ViewModule","PageHeader","RouterLink","to","createProduct","mr","FilterBar","getProductsFiltersConfig","caseSensitive","prevFilters","Loading","ProductList","ProductGrid","toFixed","replace"],"sourceRoot":""}