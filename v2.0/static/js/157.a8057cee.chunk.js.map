{"version":3,"file":"static/js/157.a8057cee.chunk.js","mappings":"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","sources":["components/EuroTextField/index.tsx","components/FilterBar/index.tsx","components/FlashMessage/index.tsx","components/HighlightText/index.tsx","components/MarkdownEditor/index.tsx","components/PageHeader/index.tsx","components/EditableDescription/index.tsx","components/SummaryQuote/SummaryComponentList.tsx","components/ClientSelector/index.tsx","components/QuoteDetails/index.js","components/QuoteProductList/index.js","components/SummaryQuote/index.tsx","utils/apply-filters.js","pages/documents/create-document-page.tsx","utils/format-price.ts"],"sourcesContent":["import React from \"react\";\nimport { TextField, InputAdornment } from \"@mui/material\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\nimport styled from \"styled-components\";\n\nconst StyledTextField = styled(TextField)`\n  & .MuiInputBase-input {\n    background: #fff;\n    text-align: right;\n  }\n`;\n\ninterface EuroTextFieldProps {\n  label: string;\n  value: string;\n  onChange: (value: string) => void;\n  fullWidth?: boolean;\n  sx?: object;\n  readOnly?: boolean;\n}\n\nconst EuroTextField: React.FC<EuroTextFieldProps> = ({\n  label,\n  value,\n  onChange,\n  fullWidth = false,\n  sx,\n  readOnly,\n}) => {\n  const handleValueChange: NumericFormatProps['onValueChange'] = (values) => {\n    const { formattedValue, value } = values;\n    onChange(value); // Pass the numeric value to the parent\n  };\n\n  return (\n    <NumericFormat\n      customInput={StyledTextField}\n      label={label}\n      value={value}\n      onValueChange={handleValueChange}\n      thousandSeparator=\".\"\n      decimalSeparator=\",\"\n      decimalScale={2}\n      fixedDecimalScale\n      fullWidth={fullWidth}\n      sx={sx}\n      InputProps={{\n        startAdornment: <InputAdornment position=\"start\">€</InputAdornment>,\n        readOnly: readOnly ? true : undefined,\n      }}\n    />\n  );\n};\n\nexport default EuroTextField;\n","import React from 'react';\nimport { Box, TextField, FormControl, InputLabel, Select, MenuItem, Slider, Typography } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\ninterface FilterConfig {\n  id: string;\n  type: string;\n  label: string;\n  options?: { value: string; label: string }[];\n  min?: number;\n  max?: number;\n  step?: number;\n  defaultValue?: number[];\n}\n\ninterface FilterBarProps {\n  filters: {\n    search: string;\n    category: string;\n    priceRange: number[];\n    company: string;\n  };\n  filtersConfig: FilterConfig[];\n  onFilterChange: (filterId: string, value: any) => void;\n}\n\nconst FilterBar: React.FC<FilterBarProps> = ({ filters, filtersConfig, onFilterChange }) => {\n  const { t } = useTranslation();\n\n  const handleFilterChange = (filterId: string, value: any) => {\n    onFilterChange(filterId, value);\n  };\n\n  const renderFilter = (filter: FilterConfig) => {\n    switch (filter.type) {\n      case 'text':\n        return (\n          <TextField\n            fullWidth\n            label={t(filter.label)}\n            value={filters[filter.id as keyof typeof filters] || ''}\n            onChange={(e) => handleFilterChange(filter.id, e.target.value)}\n          />\n        );\n      case 'select':\n        return (\n          <FormControl fullWidth>\n            <InputLabel>{t(filter.label)}</InputLabel>\n            <Select\n              value={filters[filter.id as keyof typeof filters] || ''}\n              onChange={(e) => handleFilterChange(filter.id, e.target.value)}\n            >\n              {filter.options?.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {t(option.label)}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        );\n      case 'range':\n        return (\n          <Box>\n            <Typography gutterBottom>{t(filter.label)}</Typography>\n            <Slider\n              key={filter.id}\n              value={filters[filter.id as keyof typeof filters] || filter.defaultValue}\n              onChange={(_, newValue) => handleFilterChange(filter.id, newValue)}\n              valueLabelDisplay=\"auto\"\n              min={filter.min}\n              max={filter.max}\n              step={filter.step}\n            />\n          </Box>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Box sx={{ \n      display: 'grid', \n      gridTemplateColumns: `repeat(${filtersConfig.length}, 1fr)`, \n      gap: 2, \n      mb: 2 \n    }}>\n      {filtersConfig.map((filter) => (\n        <Box key={filter.id}>\n          {renderFilter(filter)}\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nexport default FilterBar;","import { Box } from '@mui/material';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\n\ninterface FlashMessageProps {\n  message: string;\n  type: 'success' | 'warning' | 'error' | 'info';\n}\n\nfunction FlashMessage({ message, type }: FlashMessageProps) {\n  return (\n    <>\n      <Box py={2}>\n        <Stack sx={{ width: '100%' }} spacing={2}>\n          <Alert severity={type}>{message}</Alert>\n        </Stack>\n      </Box>\n    </>\n  );\n}\n\nexport default FlashMessage;\n","import React from 'react';\n\ninterface HighlightProps {\n  text: string;\n  search: string;\n}\n\nconst Highlight: React.FC<HighlightProps> = ({ text, search }) => {\n  if (!text) return null;\n  if (!search) return <>{text}</>;\n\n  const parts = text.split(new RegExp(`(${search})`, 'gi'));\n\n  return (\n    <span>\n      {parts.map((part, index) => \n        part.toLowerCase() === search.toLowerCase() ? (\n          <mark key={index}>{part}</mark>\n        ) : (\n          part\n        )\n      )}\n    </span>\n  );\n};\n\nexport default Highlight;","import React from 'react';\nimport MDEditor from '@uiw/react-md-editor';\nimport { Box } from '@mui/material';\n\ninterface MarkdownEditorProps {\n    value: string;\n    onChange: (value: string) => void;\n    readOnly?: boolean;\n}\n\nconst MarkdownEditor: React.FC<MarkdownEditorProps> = ({ value, onChange, readOnly }) => {\n    return (\n        <Box data-color-mode=\"light\">\n            <MDEditor\n                value={value}\n                onChange={(val) => onChange(val || '')}\n                preview={readOnly ? 'preview' : 'edit'}\n                hideToolbar={readOnly}\n                height={400}\n                visibleDragbar={false}\n            />\n        </Box>\n    );\n};\n\nexport default MarkdownEditor;\n","import { Paper, Typography, styled as muiStyled } from \"@mui/material\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { PALETTE } from \"../../constants/index.ts\";\n\nconst PageHeader = ({ title, description = '', margin }: any) => {\n  return (\n    <FullWidthStyledContainer margin={margin}>\n      <LimitedContainer>\n        <Title variant=\"h4\" align=\"left\">\n          {title}\n        </Title>\n        {description ? (\n          <Description variant=\"body1\" paragraph align=\"left\">\n            {description}\n          </Description>\n        ) : null}\n      </LimitedContainer>\n    </FullWidthStyledContainer>\n  );\n};\n\nconst Title = muiStyled(Typography)`\n  width: 100%;\n`;\n\nconst FullWidthStyledContainer = styled.div<{margin?: string}>`\n  margin: ${({ margin }) => margin ? margin : '4rem 0 0rem 0'};\n  padding: 24px 0 24px 0;\n`;\n\nconst LimitedContainer = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  padding: 0 1rem;\n`;\n\nconst Description = muiStyled(Typography)`\n  line-height: 2rem;\n  transition: opacity 0.5s ease-in-out; /* Smooth transition effect */\n  opacity: 1;\n\n  &:not(:hover) {\n    opacity: 0.7;\n  }\n`;\n\nexport default PageHeader;\n\n\nexport const PageHeaderStyle2 = ({ title, description = '', margin }: any) => {\n  return (\n    <FullWidthStyledContainerStyle2 margin={margin}>\n      <LimitedContainerStyle2>\n        <TitleStyle2 variant=\"h4\" gutterBottom align=\"left\">\n          {title}\n        </TitleStyle2>\n        {description ? (\n          <DescriptionStyle2 variant=\"body1\" paragraph align=\"left\">\n            {description}\n          </DescriptionStyle2>\n        ) : null}\n      </LimitedContainerStyle2>\n    </FullWidthStyledContainerStyle2>\n  );\n};\n\nconst TitleStyle2 = muiStyled(Typography)`\n  width: 100%;\n`;\n\nconst FullWidthStyledContainerStyle2 = styled(\"div\")<{margin?: string}>`\n  background: #F5F5F5;\n  border-radius: .4rem;\n  color: ${PALETTE.Black3};\n  align-text: center;\n  margin: ${({ margin }) => margin ? margin : '4rem 0 0rem 0'};\n  padding: 24px 0 24px 0;\n`;\n\nconst LimitedContainerStyle2 = styled.div`\nwidth: 100%;\nmargin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  padding: 0 1rem;\n`;\n\nconst DescriptionStyle2 = muiStyled(Typography)`\n  line-height: 2rem;\n  margin: 0;\n  transition: opacity 0.5s ease-in-out; /* Smooth transition effect */\n  opacity: 1;\n\n  &:not(:hover) {\n    opacity: 0.7;\n  }\n`;\n","import React, { useState } from 'react';\nimport { Box, IconButton, Typography, Tooltip } from '@mui/material';\nimport MDEditor from '@uiw/react-md-editor';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save';\n\ninterface MarkdownEditorProps {\n  value: string;\n  onChange: (value: string) => void;\n  readOnly?: boolean;\n}\n\nconst MarkdownEditor: React.FC<MarkdownEditorProps> = ({ value, onChange, readOnly }) => {\n  return (\n    <Box data-color-mode=\"light\">\n      <MDEditor\n        value={value}\n        onChange={(val) => onChange(val || '')}\n        preview={readOnly ? 'preview' : 'edit'}\n        hideToolbar={readOnly}\n        height={400}\n        visibleDragbar={false}\n      />\n    </Box>\n  );\n};\n\ninterface EditableDescriptionProps {\n  initialDescription: string;\n  onSave: (newDescription: string) => void;\n}\n\nconst EditableDescription: React.FC<EditableDescriptionProps> = ({ initialDescription, onSave }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [description, setDescription] = useState(initialDescription);\n\n  const handleSave = () => {\n    onSave(description); // Call the parent onSave function\n    setIsEditing(false); // Switch back to view mode\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Typography variant=\"h6\">Component Description</Typography>\n        <Tooltip title={isEditing ? 'Save' : 'Edit'}>\n          <IconButton onClick={() => (isEditing ? handleSave() : setIsEditing(true))}>\n            {isEditing ? <SaveIcon /> : <EditIcon />}\n          </IconButton>\n        </Tooltip>\n      </Box>\n\n      <MarkdownEditor\n        value={description}\n        onChange={setDescription}\n        readOnly={!isEditing} // Enable editing based on the state\n      />\n    </Box>\n  );\n};\n\nexport default EditableDescription;\n","import AddIcon from \"@mui/icons-material/Add\";\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DiscountIcon from \"@mui/icons-material/LocalOffer\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport SortIcon from \"@mui/icons-material/Sort\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport { Box, Checkbox, FormControlLabel, IconButton, Popover, Slider, styled, TextField, Tooltip, Typography } from \"@mui/material\";\nimport EditableDescription from \"components/EditableDescription\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppState } from \"state/stateContext\";\nimport { ComponentType } from \"../../types\";\nimport { formatPrice } from \"../../utils/format-price\";\n\ninterface SummaryComponentListProps {\n  components: ComponentType[];\n  onComponentChange: (updatedComponents: ComponentType[]) => void;\n}\n\nconst SummaryComponentList: React.FC<SummaryComponentListProps> = React.memo(({\n  components,\n  onComponentChange\n}) => {\n  const { t } = useTranslation();\n  const [filter, setFilter] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState<'original' | 'asc' | 'desc'>('original');\n  const [localComponents, setLocalComponents] = useState<ComponentType[]>([]);\n  const { user } = useAppState();\n\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const [selectedComponent, setSelectedComponent] = useState<ComponentType | null>(null);\n  const [discountAnchorEl, setDiscountAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const [discountComponent, setDiscountComponent] = useState<ComponentType | null>(null);\n\n  const [globalDiscount, setGlobalDiscount] = useState<number>(0);\n  const [useGlobalDiscount, setUseGlobalDiscount] = useState<boolean>(false);\n\n  const [isEditingPrice, setIsEditingPrice] = useState(false);\n  const [newPrice, setNewPrice] = useState<number | null>(null);\n\n\n  useEffect(() => {\n    setLocalComponents(components.map((component, index) => ({\n      ...component,\n      originalIndex: index,\n      discount: component.discount || 0,\n      quantity: component.quantity || 1 // Ensure quantity is set\n    })));\n  }, [components]); // Add components as a dependency\n\n  const handleComponentToggle = (id: string, checked: boolean) => {\n    const updatedComponents = localComponents.map(component =>\n      component.id === id\n        ? {\n          ...component,\n          included: checked,\n          discount: checked && useGlobalDiscount ? globalDiscount : component.discount,\n          quantity: component.quantity // Ensure quantity is preserved\n        }\n        : component\n    );\n    setLocalComponents(updatedComponents);\n    onComponentChange(updatedComponents);\n  };\n\n  const handleCheckAll = (checked: boolean) => {\n    const updatedComponents = localComponents.map(component => ({\n      ...component,\n      included: checked,\n      discount: checked && useGlobalDiscount ? globalDiscount : component.discount,\n      quantity: component.quantity // Ensure quantity is preserved\n    }));\n    setLocalComponents(updatedComponents);\n    onComponentChange(updatedComponents);\n  };\n\n  const handleMoveComponent = (id: string, direction: 'up' | 'down') => {\n    const index = localComponents.findIndex(component => component.id === id);\n    const newIndex = direction === 'up' ? index - 1 : index + 1;\n    if (newIndex < 0 || newIndex >= localComponents.length) return;\n\n    const newComponents = [...localComponents];\n    const [removed] = newComponents.splice(index, 1);\n    newComponents.splice(newIndex, 0, removed);\n\n    const updatedComponents = newComponents.map((component, idx) => ({\n      ...component,\n      originalIndex: idx\n    }));\n\n    setLocalComponents(updatedComponents);\n    onComponentChange(updatedComponents);\n  };\n\n  const toggleSort = () => {\n    setSortOrder(current => {\n      if (current === 'original') return 'asc';\n      if (current === 'asc') return 'desc';\n      return 'original';\n    });\n  };\n\n  const handlePopoverOpen = (event: React.MouseEvent<HTMLButtonElement>, component: ComponentType) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedComponent(component);\n    setNewPrice(component.price); // Initialize price editing state\n    setIsEditingPrice(false); // Reset edit mode\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n    setSelectedComponent(null);\n  };\n\n  const handleDiscountPopoverOpen = (event: React.MouseEvent<HTMLButtonElement>, component: ComponentType) => {\n    setDiscountAnchorEl(event.currentTarget);\n    setDiscountComponent(component);\n  };\n\n  const handleDiscountPopoverClose = () => {\n    setDiscountAnchorEl(null);\n    setDiscountComponent(null);\n  };\n\n  const handleDiscountChange = (event: Event, newValue: number | number[]) => {\n    if (discountComponent) {\n      const updatedComponents = localComponents.map(component =>\n        component.id === discountComponent.id ? { ...component, discount: newValue as number } : component\n      );\n      setLocalComponents(updatedComponents);\n      onComponentChange(updatedComponents);\n      setDiscountComponent({ ...discountComponent, discount: newValue as number });\n    }\n  };\n\n  // Debounce function\n  const debounce = (func: Function, delay: number) => {\n    let timeoutId: NodeJS.Timeout;\n    return (...args: any) => {\n      if (timeoutId) clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n\n  const handleGlobalDiscountChange = debounce((value: number) => {\n    setGlobalDiscount(value);\n    if (useGlobalDiscount) {\n      const updatedComponents = localComponents.map(component => ({\n        ...component,\n        discount: component.included ? value : component.discount\n      }));\n      setLocalComponents(updatedComponents);\n      onComponentChange(updatedComponents);\n    }\n  }, 300); // Adjust the delay as needed\n\n  const handleUseGlobalDiscountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const useGlobal = event.target.checked;\n    setUseGlobalDiscount(useGlobal);\n    if (useGlobal) {\n      const updatedComponents = localComponents.map(component => ({\n        ...component,\n        discount: component.included ? globalDiscount : component.discount\n      }));\n      setLocalComponents(updatedComponents);\n      onComponentChange(updatedComponents);\n    }\n  };\n\n  const open = Boolean(anchorEl);\n  const discountOpen = Boolean(discountAnchorEl);\n\n  const filteredAndSortedComponents = useMemo(() => {\n    return [...localComponents]\n      .filter(component => component.name.toLowerCase().includes(filter.toLowerCase()))\n      .sort((a, b) => {\n        if (sortOrder === 'original') {\n          return a.originalIndex - b.originalIndex;\n        } else if (sortOrder === 'asc') {\n          return a.name.localeCompare(b.name);\n        } else\n          return b.name.localeCompare(a.name);\n      });\n  }, [localComponents, filter, sortOrder]);\n\n  const calculateDiscountedPrice = (price: number, discount: number | null | undefined) => {\n    const safeDiscount = discount ?? 0;\n    return formatPrice(price * (1 - safeDiscount / 100));\n  };\n\n  const handleQuantityChange = (id: string, increment: boolean) => {\n    setLocalComponents(prevComponents => {\n      const updatedComponents = prevComponents.map(component => {\n        if (component.id === id) {\n          const newQuantity = increment ? component.quantity + 1 : Math.max(1, component.quantity - 1);\n          return { ...component, quantity: newQuantity };\n        }\n        return component;\n      });\n      onComponentChange(updatedComponents);\n      return updatedComponents;\n    });\n  };\n\n  const handleSaveDescription = (id: string, newDescription: string) => {\n    const updatedComponents = localComponents.map(component =>\n      component.id === id ? { ...component, description: newDescription } : component\n    );\n    setLocalComponents(updatedComponents);\n    onComponentChange(updatedComponents);\n  };\n\n  const handlePriceEdit = () => {\n    setIsEditingPrice(true);\n  };\n\n  const handlePriceSave = (id: string) => {\n    if (newPrice !== null && selectedComponent) {\n      const updatedComponents = localComponents.map(component =>\n        component.id === id ? { ...component, price: newPrice } : component\n      );\n      setLocalComponents(updatedComponents);\n      onComponentChange(updatedComponents);\n      setIsEditingPrice(false); // Exit edit mode\n    }\n  };\n\n\n  return (\n    <ComponentListContainer>\n      <ControlsBox>\n        <Tooltip title={t(\"SortAlphabetically\")}>\n          <IconButton onClick={toggleSort}>\n            <SortIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={t(\"CheckAll\")}>\n          <IconButton onClick={() => handleCheckAll(true)}>\n            <CheckBoxIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={t(\"UncheckAll\")}>\n          <IconButton onClick={() => handleCheckAll(false)}>\n            <CheckBoxOutlineBlankIcon />\n          </IconButton>\n        </Tooltip>\n        <TextField\n          size=\"small\"\n          placeholder={t(\"FilterByName\")}\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)}\n          sx={{ flexGrow: 1 }}\n        />\n\n        {user?.id ? (\n          <GlobalDiscountControl>\n            <Tooltip title={t(\"ActivateDiscountForAllComponents\")}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={useGlobalDiscount}\n                    onChange={handleUseGlobalDiscountChange}\n                    name=\"useGlobalDiscount\"\n                  />\n                }\n                label=\"\"\n                sx={{ marginRight: 0 }}\n              />\n            </Tooltip>\n            <TextField\n              type=\"number\"\n              value={globalDiscount}\n              onChange={(e) => handleGlobalDiscountChange(Math.min(100, Math.max(0, parseInt(e.target.value) || 0)))}\n              disabled={!useGlobalDiscount || !user?.id}\n              InputProps={{\n                inputProps: { min: 0, max: 100 }\n              }}\n              sx={{ width: '80px' }}\n            />\n            <Typography variant=\"body1\">%</Typography>\n          </GlobalDiscountControl>\n        ) : (\n          <>\n          </>\n        )}\n      </ControlsBox>\n      {filteredAndSortedComponents.map((component) => (\n        <ComponentItem key={component.id} selected={component.included === true}>\n          <MoveButtonsContainer>\n            <IconButton\n              size=\"small\"\n              onClick={() => handleMoveComponent(component.id, 'up')}\n              disabled={component.originalIndex === 0}\n            >\n              <ArrowUpwardIcon fontSize=\"small\" />\n            </IconButton>\n            <IconButton\n              size=\"small\"\n              onClick={() => handleMoveComponent(component.id, 'down')}\n              disabled={component.originalIndex === localComponents.length - 1}\n            >\n              <ArrowDownwardIcon fontSize=\"small\" />\n            </IconButton>\n          </MoveButtonsContainer>\n          <ComponentCheckbox\n            control={\n              <Checkbox\n                checked={component.included === true}\n                onChange={(e) => handleComponentToggle(component.id, e.target.checked)}\n              />\n            }\n            label={\n              <ComponentNamePriceContainer>\n                <Tooltip title={component.name}>\n                  <ComponentName variant=\"body1\" selected={component.included === true}>\n                    {component.name}\n                  </ComponentName>\n                </Tooltip>\n                <ComponentPrice variant=\"caption\" selected={component.included === true}>\n                  {calculateDiscountedPrice(component.price, component.discount ?? 0)} {t('EUR')}\n                  {component.discount > 0 && (\n                    <>\n                      <DiscountedPrice variant=\"caption\">\n                        ({formatPrice(component.price)} {t('EUR')})\n                      </DiscountedPrice>\n                      <DiscountPercentage variant=\"caption\">\n                        -{component.discount}%\n                      </DiscountPercentage>\n                    </>\n                  )}\n                </ComponentPrice>\n              </ComponentNamePriceContainer>\n            }\n          />\n          <Box display=\"flex\" alignItems=\"center\">\n            <Tooltip title=\"Decrease quantity\" arrow>\n              <IconButton onClick={() => handleQuantityChange(component.id, false)}>\n                <RemoveIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Quantity\" arrow>\n              <Typography variant=\"body1\">\n                {`${component.quantity}`}\n              </Typography>\n            </Tooltip>\n            <Tooltip title=\"Increase quantity\" arrow>\n              <IconButton onClick={() => handleQuantityChange(component.id, true)}>\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"View details\" arrow>\n              <IconButton onClick={(e) => handlePopoverOpen(e, component)}>\n                <VisibilityIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n            {user?.id ? (\n              <Tooltip title=\"Set discount\" arrow>\n                <IconButton onClick={(e) => handleDiscountPopoverOpen(e, component)}>\n                  <DiscountIcon fontSize=\"small\" color={component.discount > 0 ? \"secondary\" : \"action\"} />\n                </IconButton>\n              </Tooltip>\n            ) : (\n              <>\n              </>\n            )}\n          </Box>\n        </ComponentItem>\n      ))}\n      <Popover\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={handlePopoverClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {selectedComponent && (\n          <Box padding={2}>\n            <Typography variant=\"h6\">{selectedComponent.name}</Typography>\n\n            {/* Editable Description */}\n            <EditableDescription\n              initialDescription={selectedComponent.description || t(\"NoDescriptionAvailable\")}\n              onSave={(newDescription) => {\n                const updatedComponents = localComponents.map(component =>\n                  component.id === selectedComponent.id ? { ...component, description: newDescription } : component\n                );\n                setLocalComponents(updatedComponents);\n                onComponentChange(updatedComponents);\n              }}\n            />\n\n            {/* Editable Price */}\n            <Box display=\"flex\" alignItems=\"center\" marginTop={2}>\n              {isEditingPrice ? (\n                <>\n                  <TextField\n                    type=\"number\"\n                    value={newPrice}\n                    onChange={(e) => setNewPrice(Number(e.target.value))}\n                    label={t(\"Price\")}\n                    fullWidth\n                  />\n                  <IconButton onClick={() => handlePriceSave(selectedComponent.id)}>\n                    <SaveIcon />\n                  </IconButton>\n                </>\n              ) : (\n                <>\n                  <Typography variant=\"subtitle1\">\n                    {formatPrice(newPrice !== null ? newPrice : selectedComponent.price)} {t(\"EUR\")}\n                  </Typography>\n                  <IconButton onClick={handlePriceEdit}>\n                    <EditIcon />\n                  </IconButton>\n                </>\n              )}\n            </Box>\n          </Box>\n        )}\n      </Popover>\n\n      <Popover\n        open={discountOpen}\n        anchorEl={discountAnchorEl}\n        onClose={handleDiscountPopoverClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {discountComponent && (\n          <DiscountSliderContainer>\n            <Typography variant=\"subtitle1\">{t(\"Discount\")}</Typography>\n            <Slider\n              value={discountComponent.discount || 0}\n              onChange={(event, newValue) => {\n                handleDiscountChange(event, newValue);\n                setDiscountComponent(prev => prev ? { ...prev, discount: newValue as number } : null);\n              }}\n              aria-labelledby=\"discount-slider\"\n              valueLabelDisplay=\"auto\"\n              step={1}\n              marks\n              min={0}\n              max={100}\n            />\n            <Typography variant=\"body2\">\n              {t(\"DiscountedPrice\")}: {calculateDiscountedPrice(discountComponent.price, discountComponent.discount)} {t('EUR')}\n            </Typography>\n          </DiscountSliderContainer>\n        )}\n      </Popover>\n    </ComponentListContainer>\n  );\n});\n\nexport default SummaryComponentList;\n\nconst ComponentDetails = styled(Box)({\n  padding: '16px',\n  maxWidth: '300px',\n});\n\nconst ComponentListContainer = styled(Box)({\n  borderRadius: '4px',\n  padding: '16px',\n  width: '100%',\n});\n\nconst ControlsBox = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginBottom: '16px',\n  gap: '8px',\n  flexWrap: 'wrap',\n});\n\nconst ComponentItem = styled(Box)<{ selected: boolean }>(({ selected }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: '8px',\n  width: '100%',\n  '&:last-child': {\n    marginBottom: 0,\n  },\n  opacity: selected ? 1 : 0.7,\n}));\n\nconst MoveButtonsContainer = styled(Box)({\n  display: 'flex',\n  flexShrink: 0,\n  marginRight: '8px',\n});\n\nconst ComponentCheckbox = styled(FormControlLabel)({\n  flex: 1,\n  marginRight: '8px',\n  minWidth: 0,\n  overflow: 'hidden',\n});\n\nconst ComponentNamePriceContainer = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  minWidth: 0,\n});\n\nconst ComponentName = styled(Typography)<{ selected: boolean }>(({ selected }) => ({\n  whiteSpace: 'nowrap',\n  fontWeight: selected ? 'bold' : 'normal',\n  color: selected ? '#000' : '#666',\n}));\n\nconst ComponentPrice = styled(Typography)<{ selected: boolean }>(({ selected }) => ({\n  color: selected ? '#000' : '#666',\n  fontWeight: selected ? 'bold' : 'normal',\n}));\n\nconst DiscountedPrice = styled(Typography)({\n  textDecoration: 'line-through',\n  marginLeft: '4px',\n  color: '#999',\n});\n\nconst DiscountPercentage = styled(Typography)({\n  marginLeft: '4px',\n  color: '#4caf50',\n});\n\nconst DiscountSliderContainer = styled(Box)({\n  padding: '16px',\n  width: '250px',\n});\n\nconst GlobalDiscountControl = styled(Box)({\n  display: 'flex',\n  alignItems: 'center',\n  gap: '8px',\n  flexShrink: 0,\n});","import React, { useEffect, useState, useMemo } from \"react\";\nimport {\n    Box,\n    Button,\n    Pagination,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TextField,\n    Tooltip,\n    Typography,\n} from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppState } from \"../../state/stateContext\";\nimport Highlight from \"../../components/HighlightText\"; // Import your Highlight component\nimport { CheckCircle } from \"@mui/icons-material\";\n\nconst ClientSelector = ({ onClientChange }) => {\n    const { t } = useTranslation();\n    const { clients, getClients, getClientsIsLoading, getClientsError } = useAppState();\n    const [selectedClient, setSelectedClient] = useState(null);\n    const [page, setPage] = useState(1);\n    const [search, setSearch] = useState(\"\");\n    const itemsPerPage = 10;\n\n    useEffect(() => {\n        if (clients.length === 0) {\n            getClients();\n        }\n    }, [getClients]);\n\n    useEffect(() => {\n        onClientChange(selectedClient);\n    }, [selectedClient, onClientChange]);\n\n    const handleSelectClient = (client) => {\n        setSelectedClient(client);\n    };\n\n    const handleDeselectClient = () => {\n        setSelectedClient(null);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleSearchChange = (event) => {\n        setSearch(event.target.value);\n        setPage(1);\n    };\n\n    const filteredClients = useMemo(() => {\n        return clients.filter((client) =>\n            client.companyName.toLowerCase().includes(search.toLowerCase())\n        );\n    }, [clients, search]);\n\n    const currentPageClients = useMemo(() => {\n        return filteredClients.slice((page - 1) * itemsPerPage, page * itemsPerPage);\n    }, [filteredClients, page]);\n\n    if (getClientsIsLoading) {\n        return <Typography>{t(\"LoadingClients\")}</Typography>;\n    }\n\n    if (getClientsError) {\n        return <Typography color=\"error\">{t(\"ErrorLoadingClients\")}: {getClientsError}</Typography>;\n    }\n\n    return (\n        <Box sx={{ my: 4, pb: 2 }}>\n            {selectedClient ? (\n                <Box sx={{ position: \"relative\" }}>\n                    {/* CheckCircle icon for the selected client */}\n                    <CheckCircle\n                        color=\"success\"\n                        sx={{\n                            position: \"absolute\",\n                            top: -10,\n                            left: -10,\n                            fontSize: \"2rem\",\n                        }}\n                    />\n\n                    {/* Selected Client Details */}\n                    <TableContainer sx={{ border: \"1px solid\", borderColor: \"success.main\", borderRadius: 1 }}>\n                        <Table size=\"small\" aria-label=\"client details\">\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {t(\"ClientName\")}:\n                                    </TableCell>\n                                    <TableCell>{`${selectedClient.firstName} ${selectedClient.lastName}`}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {t(\"CompanyName\")}:\n                                    </TableCell>\n                                    <TableCell><strong>{selectedClient.companyName}</strong></TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {t(\"VAT\")}:\n                                    </TableCell>\n                                    <TableCell>{selectedClient.vatNumber}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {t(\"Email\")}:\n                                    </TableCell>\n                                    <TableCell>{selectedClient.email}</TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <Button variant=\"outlined\" onClick={handleDeselectClient} sx={{ mt: 1 }}>\n                        {t(\"DeselectClient\")}\n                    </Button>\n                </Box>\n            ) : (\n                <>\n                    {/* Search Filter */}\n                    <TextField\n                        label={t(\"SearchCompany\")}\n                        variant=\"outlined\"\n                        fullWidth\n                        value={search}\n                        onChange={handleSearchChange}\n                        sx={{ mb: 1 }}\n                        size=\"small\"\n                    />\n\n                    {/* Client List */}\n                    <TableContainer>\n                        <Table size=\"small\" aria-label=\"client table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>{t('ID')}</TableCell>\n                                    <TableCell>{t('CompanyName')}</TableCell>\n                                    <TableCell>{t('VAT')}</TableCell>\n                                    <TableCell>{t('Email')}</TableCell>\n                                    <TableCell>{t('Actions')}</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {currentPageClients.map((client) => (\n                                    <TableRow key={client.id}>\n                                        <TableCell>{client.id}</TableCell>\n\n                                        {/* Company Name with Tooltip and Highlight */}\n                                        <TableCell>\n                                            <Tooltip title={client.companyName} arrow>\n                                                <Box\n                                                    sx={{\n                                                        overflow: 'hidden',\n                                                        textOverflow: 'ellipsis',\n                                                        whiteSpace: 'nowrap',\n                                                        maxWidth: '120px',\n                                                    }}\n                                                >\n                                                    <strong><Highlight text={client.companyName} search={search} /></strong>\n                                                </Box>\n                                            </Tooltip>\n                                        </TableCell>\n\n                                        {/* VAT with Tooltip */}\n                                        <TableCell>\n                                            <Tooltip title={client.vatNumber} arrow>\n                                                <Box\n                                                    sx={{\n                                                        overflow: 'hidden',\n                                                        textOverflow: 'ellipsis',\n                                                        whiteSpace: 'nowrap',\n                                                        maxWidth: '120px',\n                                                    }}\n                                                >\n                                                    {client.vatNumber}\n                                                </Box>\n                                            </Tooltip>\n                                        </TableCell>\n\n                                        {/* Email with Tooltip and Highlight */}\n                                        <TableCell>\n                                            <Tooltip title={client.email} arrow>\n                                                <Box\n                                                    sx={{\n                                                        overflow: 'hidden',\n                                                        textOverflow: 'ellipsis',\n                                                        whiteSpace: 'nowrap',\n                                                        maxWidth: '120px',\n                                                    }}\n                                                >\n                                                    <Highlight text={client.email} search={search} />\n                                                </Box>\n                                            </Tooltip>\n                                        </TableCell>\n\n                                        <TableCell>\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                onClick={() => handleSelectClient(client)}\n                                            >\n                                                {t('Select')}\n                                            </Button>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n\n                    {/* Pagination */}\n                    <Box sx={{ display: \"flex\", justifyContent: \"center\", p: 1 }}>\n                        <Pagination\n                            size=\"small\"\n                            count={Math.ceil(filteredClients.length / itemsPerPage)}\n                            page={page}\n                            onChange={handleChangePage}\n                        />\n                    </Box>\n                </>\n            )}\n        </Box>\n    );\n};\n\nexport default ClientSelector;","import React, { useState, useEffect } from \"react\";\nimport { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, TextField, Typography } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport ReactMarkdown from 'react-markdown';\nimport MarkdownEditor from '../../components/MarkdownEditor';\n\nconst EMPTY_QUOTE_DETAILS = {\n  company: \"\",\n  object: \"\",\n  description: \"\",\n};\n\nconst QuoteDetails = ({ onDetailsChange }) => {\n  const { t } = useTranslation();\n  const [quoteHeadDetails, setQuoteHeadDetails] = useState(EMPTY_QUOTE_DETAILS);\n  const { company, object, description } = quoteHeadDetails;\n\n  useEffect(() => {\n    onDetailsChange(quoteHeadDetails);\n  }, [quoteHeadDetails, onDetailsChange]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        {t(\"QuoteDetails\")}\n      </Typography>\n      <FormControl component=\"fieldset\" margin=\"normal\">\n        <FormLabel component=\"legend\">{t(\"Company\")}</FormLabel>\n        <RadioGroup\n          row\n          name=\"company\"\n          value={company}\n          onChange={(e) =>\n            setQuoteHeadDetails({\n              ...quoteHeadDetails,\n              [e.target.name]: e.target.value,\n            })\n          }\n        >\n          <FormControlLabel\n            value=\"Sermixer\"\n            control={<Radio />}\n            label=\"Sermixer\"\n          />\n          <FormControlLabel\n            value=\"S2 Truck Service\"\n            control={<Radio />}\n            label=\"S2 Truck Service\"\n          />\n        </RadioGroup>\n      </FormControl>\n      <TextField\n        label={t(\"Object\")}\n        variant=\"outlined\"\n        fullWidth\n        name=\"object\"\n        margin=\"normal\"\n        value={object}\n        onChange={(e) =>\n          setQuoteHeadDetails({\n            ...quoteHeadDetails,\n            [e.target.name]: e.target.value,\n          })\n        }\n      />\n      <Typography variant=\"h6\" gutterBottom>\n        {t(\"DescriptionOffer\")}\n      </Typography>\n      <MarkdownEditor\n        value={description}\n        onChange={(value) =>\n          setQuoteHeadDetails({\n            ...quoteHeadDetails,\n            description: value,\n          })\n        }\n      />\n    </>\n  );\n};\n\nexport default QuoteDetails;\n","import { Box, Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Tooltip } from '@mui/material';\nimport { memo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Highlight from '../../components/HighlightText';\nimport {formatPrice} from '../../utils/format-price';\n\nconst QuoteProductList = memo(({ products, onAddToQuote, highlightText }) => {\n  const { t } = useTranslation();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <Paper elevation={0} sx={{ backgroundColor: 'white', borderRadius: 1, boxShadow: '0px 1px 3px rgba(0,0,0,0.12)' }}>\n      <TableContainer>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>{t('Image')}</TableCell>\n              <TableCell>{t('Name')}</TableCell>\n              <TableCell>{t('Price')}</TableCell>\n              <TableCell>{t('Category')}</TableCell>\n              <TableCell>{t('Company')}</TableCell>\n              <TableCell>{t('Actions')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((product) => (\n                <TableRow key={product.id}>\n                  <TableCell align=\"center\">\n                    <Tooltip\n                      title={\n                        <img\n                          src={product.imgUrl}\n                          alt={product.name}\n                          style={{\n                            width: '100vw', // Full width of the viewport\n                            height: 'auto',\n                            objectFit: 'contain',\n                            borderRadius: '4px',\n                          }}\n                        />\n                      }\n                      placement=\"top\" // Adjust tooltip position to avoid overflow\n                      componentsProps={{\n                        tooltip: {\n                          sx: {\n                            maxWidth: 'none', // Remove default max width\n                          },\n                        },\n                      }}\n                    >\n                      <img\n                        src={product.imgUrl}\n                        alt={product.name}\n                        style={{ width: 'auto', height: '40px', borderRadius: '4px', cursor: 'pointer' }}\n                      />\n                    </Tooltip>\n                  </TableCell>\n\n                  <TableCell>\n                    <Tooltip title={product.name}>\n                      <Box\n                        sx={{\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis',\n                          whiteSpace: 'nowrap',\n                          maxWidth: '120px',\n                        }}\n                      >\n                        <strong><Highlight text={product.name} search={highlightText} /></strong>\n                      </Box>\n                    </Tooltip>\n                  </TableCell>\n\n                  <TableCell>\n                    <Tooltip title={`${formatPrice(product.price)} ${t('EUR')}`}>\n                      <Box\n                        sx={{\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis',\n                          whiteSpace: 'nowrap',\n                          maxWidth: '80px',\n                        }}\n                      >\n                       <strong>{`${formatPrice(product.price)} ${t('EUR')}`}</strong>\n                      </Box>\n                    </Tooltip>\n                  </TableCell>\n\n                  <TableCell>\n                    <Tooltip title={product.category}>\n                      <Box\n                        sx={{\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis',\n                          whiteSpace: 'nowrap',\n                          maxWidth: '120px',\n                        }}\n                      >\n                        <Highlight text={product.category} search={highlightText} />\n                      </Box>\n                    </Tooltip>\n                  </TableCell>\n\n                  <TableCell>\n                    <Tooltip title={product.company}>\n                      <Box\n                        sx={{\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis',\n                          whiteSpace: 'nowrap',\n                          maxWidth: '120px',\n                        }}\n                      >\n                        {t(product.company)}\n                      </Box>\n                    </Tooltip>\n                  </TableCell>\n\n                  <TableCell>\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      onClick={() => onAddToQuote(product.id)}\n                      sx={{ textTransform: 'none', fontWeight: 500 }}\n                    >\n                      {t('AddToQuote')}\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={products.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)', mt: 1 }}\n      />\n    </Paper>\n  );\n});\n\nexport default QuoteProductList;","import DeleteIcon from '@mui/icons-material/Delete';\nimport {\n    Box, Button, Grid, IconButton,\n    Typography, styled\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from 'react-router-dom';\nimport { useFlashMessage } from 'state/FlashMessageContext';\nimport { SectionBorderContainer } from \"../../constants/index\";\nimport { useAppState } from \"../../state/stateContext\";\nimport { ClientType, ComponentType, ProductType, QuoteHeadDetailsType } from '../../types/index';\nimport EuroTextField from '../EuroTextField/index';\nimport MarkdownEditor from '../MarkdownEditor/index';\nimport PageHeader from \"../PageHeader/index\";\nimport SummaryComponentList from \"./SummaryComponentList\";\nimport Tooltip from '@mui/material/Tooltip';\n\ntype SummaryQuoteP = {\n    quoteHeadDetails: QuoteHeadDetailsType;\n    selectedClient: ClientType | null;\n    addedProducts: ProductType[];\n    onAddedProductsChange: (updatedProducts: ProductType[]) => void;\n    handleSubmit: any;\n    discount: any;\n}\n\nconst SummaryQuote = ({\n    quoteHeadDetails,\n    selectedClient,\n    addedProducts,\n    onAddedProductsChange,\n    handleSubmit,\n    discount,\n}: SummaryQuoteP) => {\n    const { t } = useTranslation();\n    const { showMessage } = useFlashMessage();\n    const { user } = useAppState();\n    const [editableProducts, setEditableProducts] = useState<ProductType[]>([]);\n    const [note, setNote] = useState(\"\");\n\n    useEffect(() => {\n        setEditableProducts(addedProducts.map(product => ({\n            ...product,\n            components: product.components.map(component => ({\n                ...component,\n                included: component.included ?? false\n            }))\n        })));\n    }, [addedProducts]);\n\n    useEffect(() => {\n        const savedData = localStorage.getItem('summaryQuoteData');\n        if (savedData) {\n            const parsedData = JSON.parse(savedData);\n            setEditableProducts(parsedData.editableProducts || []);\n            setNote(parsedData.note || \"\");\n        }\n    }, []);\n\n    useEffect(() => {\n        const dataToSave = {\n            editableProducts,\n            note,\n            quoteHeadDetails,\n        };\n        localStorage.setItem('summaryQuoteData', JSON.stringify(dataToSave));\n    }, [editableProducts, note, quoteHeadDetails]);\n\n    const handleInputChange = (index: number, field: string, value: string) => {\n        const updatedProducts = editableProducts.map((product, i) =>\n            i === index ? { ...product, [field]: value } : product\n        );\n        setEditableProducts(updatedProducts);\n        onAddedProductsChange(updatedProducts);\n    };\n\n    const handleProductRemove = (productIndex: number) => {\n        const updatedProducts = editableProducts.filter((_, i) => i !== productIndex);\n        setEditableProducts(updatedProducts);\n        onAddedProductsChange(updatedProducts);\n        showMessage(t('productRemoved'), 'info');\n    };\n\n    const handleComponentsChange = (productIndex: number, updatedComponents: ComponentType[]) => {\n        setEditableProducts((prevProducts) => {\n            const newProducts = prevProducts.map((product, i) =>\n                i === productIndex\n                    ? { ...product, components: updatedComponents }\n                    : product\n            );\n            onAddedProductsChange(newProducts); // Ensure this is called with the updated products\n            return newProducts;\n        });\n    };\n\n    const preHandleSubmit = () => {\n\n        if (!selectedClient) {\n            const errorMsg = \"Client must be selected.\";\n            showMessage(errorMsg, 'error');\n            return;\n        }\n\n        if (!quoteHeadDetails.company || !quoteHeadDetails.object) {\n            const errorMsg = \"Company and Object fields must be filled out.\";\n            showMessage(errorMsg, 'error');\n            return;\n        }\n\n        if (editableProducts.length === 0) {\n            const errorMsg = \"At least one product must be added.\";\n            showMessage(errorMsg, 'error');\n            return;\n        }\n\n        const quoteSummary = {\n            quoteHeadDetails,\n            selectedClient,\n            addedProducts: editableProducts.map(product => ({\n                ...product,\n                price: parseFloat(product.price),\n                components: product.components?.map(component => ({\n                    ...component,\n                    price: parseFloat(component.price),\n                    quantity: component.quantity // Include quantity here\n                })),\n            })),\n            discount,\n            note,\n            employeeID: user?.id,\n        };\n        handleSubmit(quoteSummary);\n    };\n\n    const handleNoteChange = (value: string) => {\n        setNote(value);\n    };\n\n    return (\n        <>\n            <SectionBorderContainer>\n                <PageHeader title={t(\"Preview\")} description={t(\"preventivePreviewDescription\")} />\n                {!editableProducts.length ? (\n                    <EmptyState>{t('NoItemsYet')}</EmptyState>\n                ) : (\n                    editableProducts.map((product, productIndex) => (\n                        <ProductContainer key={product.id}>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12} md={6}>\n                                    <Box>\n                                        <HeaderBox>\n                                            <ProductNameLink to={`/product/${product.id}`}>\n                                                <Typography variant=\"h4\">{product.name}</Typography>\n                                            </ProductNameLink>\n                                            <Tooltip title={t(\"Remove Product\")} arrow>\n                                                <IconButton\n                                                    sx={{\n                                                        height: '100%',\n                                                        alignSelf: 'baseline',\n                                                        color: 'inherit',\n                                                        '&:hover': { color: 'red' } // Change color on hover\n                                                    }}\n                                                    onClick={() => handleProductRemove(productIndex)}\n                                                >\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </HeaderBox>\n                                        <ProductImage src={product.imgUrl} alt={product.name} />\n                                        <EuroTextField\n                                            label={t(\"ProductPrice\")}\n                                            value={product.price}\n                                            onChange={(value) => handleInputChange(productIndex, 'price', value)}\n                                            margin=\"dense\"\n                                            fullWidth\n                                        />\n                                        <Box mt={2}>\n                                            <Typography variant=\"subtitle1\">{t(\"Description\")}</Typography>\n                                            <MarkdownEditor\n                                                value={product.description || \"\"}\n                                                onChange={(value) => handleInputChange(productIndex, 'description', value)}\n                                            />\n                                        </Box>\n                                    </Box>\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <Box>\n                                        <Typography variant=\"h5\" mb={2}>{t(\"Components\")}</Typography>\n                                        <SummaryComponentList\n                                            components={product.components || []}\n                                            onComponentChange={(updatedComponents) => handleComponentsChange(productIndex, updatedComponents)}\n                                        />\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                        </ProductContainer>\n                    ))\n                )}\n                <Box mb={2}>\n                    <PageHeader title={t(\"Notes\")} description={t(\"InternalNotesDescription\")} />\n                    <MarkdownEditor\n                        label={t(\"Note\")}\n                        name=\"note\"\n                        value={note}\n                        onChange={handleNoteChange}\n                        readOnly={false}\n                        minRows={5}\n                    />\n                </Box>\n            </SectionBorderContainer>\n            <Box mt={4} display=\"flex\" justifyContent=\"center\">\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={preHandleSubmit}\n                    sx={{ width: '200px', height: '50px' }}\n                >\n                    {t(\"Submit\")}\n                </Button>\n            </Box>\n        </>\n    );\n};\n\nexport default SummaryQuote;\n\nconst EmptyState = styled(Box)({\n    height: '200px',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '1px dashed #ccc',\n    borderRadius: '4px',\n    color: '#666',\n});\n\nconst ProductContainer = styled(Box)(({ theme }) => ({\n    marginBottom: theme.spacing(4),\n    borderBottom: '1px solid #eee',\n    paddingBottom: theme.spacing(4),\n    '&:last-child': {\n        borderBottom: 'none',\n    },\n}));\n\nconst HeaderBox = styled(Box)({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '16px',\n});\n\nconst ProductImage = styled('img')({\n    maxWidth: '100%',\n    maxHeight: '300px',\n    objectFit: 'contain',\n    marginBottom: '16px',\n});\n\nconst ProductNameLink = styled(Link)({\n    color: 'inherit',\n    textDecoration: 'none',\n    '&:hover': {\n        textDecoration: 'underline',\n    },\n});","/**\n * Filters an array of items based on filter criteria, searching across specific item properties or all properties.\n * @param {Array} items - The array of items to filter.\n * @param {Object} filters - An object representing the current filter state.\n * @returns {Array} - The filtered array of items.\n */\nconst applyFilters = (products, filters) => {\n  return products.filter(product => {\n    // Search filter\n    if (filters.search && !product.name.toLowerCase().includes(filters.search.toLowerCase())) {\n      return false;\n    }\n\n    // Category filter\n    if (filters.category && filters.category !== 'all' && product.category !== filters.category) {\n      return false;\n    }\n\n    // Company filter\n    if (filters.company && filters.company !== 'all' && product.company !== filters.company) {\n      return false;\n    }\n\n    // Price range filter\n    if (filters.priceRange) {\n      let min, max;\n      if (Array.isArray(filters.priceRange)) {\n        [min, max] = filters.priceRange;\n      } else if (typeof filters.priceRange === 'number') {\n        min = 0;\n        max = filters.priceRange;\n      } else {\n        // If it's neither an array nor a number, skip this filter\n        return true;\n      }\n      if (product.price < min || product.price > max) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n};\n\nexport default applyFilters;\n\n","import { Box, Container, Grid, Typography } from \"@mui/material\";\nimport { FC, useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFlashMessage } from \"state/FlashMessageContext\";\nimport { ClientType, DocumentDataType, ProductType, QuoteHeadDetailsType } from \"types\";\nimport ClientSelector from \"../../components/ClientSelector/index\";\nimport FilterBar from \"../../components/FilterBar/index\";\nimport FlashMessage from \"../../components/FlashMessage/index\";\nimport Loading from \"../../components/Loading/index.js\";\nimport QuoteDetails from \"../../components/QuoteDetails/index.js\";\nimport QuoteProductList from \"../../components/QuoteProductList/index.js\";\nimport SummaryQuote from \"../../components/SummaryQuote/index\";\nimport { getProductsFiltersConfig } from \"../../constants/index\";\nimport { useDocumentContext } from \"../../state/documentContext\";\nimport { useAppState } from \"../../state/stateContext\";\nimport applyFilters from \"../../utils/apply-filters.js\";\nimport { WhitePaperContainer } from \"./styled-components/index\";\n\nconst CreateQuotePage: FC<any> = () => {\n  const { t } = useTranslation();\n  const { showMessage } = useFlashMessage();\n  const { products, getProducts } = useAppState();\n  const { createDocument, loading } = useDocumentContext();\n\n  const [quoteHeadDetails, setQuoteHeadDetails] = useState<QuoteHeadDetailsType | {}>({});\n  const [selectedClient, setSelectedClient] = useState<ClientType | null>(null);\n  const [addedProducts, setAddedProducts] = useState<ProductType[]>([]);\n  const [filters, setFilters] = useState<any>({ priceRange: [0, 100000] });\n  const [message, setMessage] = useState({ type: \"\", text: \"\" });\n  const [discount, setDiscount] = useState(0);\n  const [maxPrice, setMaxPrice] = useState(100000);\n\n  // Fetch products when the component loads\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  // Set maxPrice and priceRange filter after fetching products\n  useEffect(() => {\n    if (products.length > 0) {\n      const newMaxPrice = Math.max(...products.map(product => product.price));\n      setMaxPrice(newMaxPrice);\n\n      // Initialize priceRange to span from 0 to newMaxPrice\n      setFilters(prevFilters => ({\n        ...prevFilters,\n        priceRange: [0, newMaxPrice]\n      }));\n    }\n  }, [products]);\n\n  const handleFilterChange = (filterName: string, value: any) => {\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [filterName]: value,\n    }));\n  };\n\n  const filteredItems = useMemo(() => {\n    if (products.length === 0) {\n      return [];\n    }\n\n\n    const filteredProducts = applyFilters(products, filters);\n\n    return filteredProducts;\n  }, [products, filters]);\n\n  const handleAddToQuote = (_id: string) => {\n    const productFound = products.find(({ id }) => id === _id);\n    if (productFound) {\n      const updatedAddedProducts = [...addedProducts, {\n        ...productFound,\n        components: productFound.components.map(component => ({\n          ...component,\n          quantity: component.quantity || 1 // Ensure quantity is set\n        }))\n      }];\n      setAddedProducts(updatedAddedProducts);\n      showMessage(t('ProductAdded'), 'success');\n    } else {\n      showMessage(`Could not find product with id: ${_id}.`, 'error');\n      console.error(`Could not find product with id: ${_id}.`);\n    }\n  };\n\n  const handleSubmit = async (_editedSummaryPayload: DocumentDataType) => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n    try {\n      const document = await createDocument(_editedSummaryPayload);\n      setMessage({\n        type: \"success\",\n        text: t(\"DocumentCreatedMessage\", { hash: document.hash }),\n      });\n      showMessage(t(\"DocumentCreatedMessage\", { hash: document.hash }), 'success');\n      localStorage.removeItem('summaryQuoteData');\n    } catch (error: any) {\n      showMessage(typeof error.message === 'string' ? error.message : `${error}`, 'error');\n      setMessage({ type: \"error\", text: typeof error.message === 'string' ? error.message : `${error}` });\n    }\n  };\n\n  const productsFiltersConfig = useMemo(() => {\n    const config = getProductsFiltersConfig();\n    const priceRangeFilter = config.find(filter => filter.id === \"priceRange\");\n    if (priceRangeFilter) {\n      priceRangeFilter.max = maxPrice;\n      priceRangeFilter.defaultValue = filters.priceRange; // Use filters.priceRange as defaultValue\n    }\n    return config;\n  }, [maxPrice, filters.priceRange]);\n\n  if (loading) {\n    return <Loading />\n  }\n\n  return (\n    <WhitePaperContainer>\n      <Container sx={{ mt: '20px', pb: \"100px\" }}>\n        {message.text && (\n          <Box mb={2} pt={2}>\n            <FlashMessage message={message.text} type={message.type} />\n          </Box>\n        )}\n\n        <Grid container spacing={3}>\n          {/* HEAD DETAILS */}\n          <Grid item xs={12} md={4}>\n            <QuoteDetails onDetailsChange={setQuoteHeadDetails} />\n          </Grid>\n\n          {/* CLIENT SELECTION */}\n          <Grid item xs={12} md={8}>\n            <Typography variant=\"h6\">{t(\"ClientSelection\")}</Typography>\n            <ClientSelector onClientChange={setSelectedClient} />\n          </Grid>\n\n          {/* ADD PRODUCTS */}\n          <Grid item xs={12}>\n            <FilterBar\n              filters={filters}\n              filtersConfig={productsFiltersConfig}\n              onFilterChange={handleFilterChange}\n            />\n            {products.length === 0 ? (\n              <Loading />\n            ) : (\n              <QuoteProductList\n                products={filteredItems}\n                onAddToQuote={handleAddToQuote}\n                highlightText={filters.search}\n              />\n            )}\n          </Grid>\n\n          {/* SUMMARY QUOTE */}\n          <Grid item xs={12}>\n            <SummaryQuote\n              quoteHeadDetails={quoteHeadDetails}\n              selectedClient={selectedClient}\n              addedProducts={addedProducts}\n              onAddedProductsChange={setAddedProducts}\n              handleSubmit={handleSubmit}\n              discount={discount}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </WhitePaperContainer>\n  );\n};\n\nexport default CreateQuotePage;\n","// src/utils/formatPrice.ts\n\nexport const formatPrice = (price: number | string): string => {\n  const priceNum = Number(price);\n  return priceNum\n    .toFixed(2)  // Ensure two decimal places\n    .replace('.', ',')  // Replace decimal point with comma\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");  // Add periods for thousands\n};\n"],"names":["StyledTextField","styled","TextField","_ref","label","value","onChange","fullWidth","sx","readOnly","_jsx","NumericFormat","customInput","onValueChange","values","formattedValue","thousandSeparator","decimalSeparator","decimalScale","fixedDecimalScale","InputProps","startAdornment","InputAdornment","position","children","undefined","filters","filtersConfig","onFilterChange","t","useTranslation","handleFilterChange","filterId","renderFilter","filter","_filter$options","type","id","e","target","_jsxs","FormControl","InputLabel","Select","options","map","option","MenuItem","Box","Typography","gutterBottom","Slider","defaultValue","_","newValue","valueLabelDisplay","min","max","step","display","gridTemplateColumns","length","gap","mb","message","_Fragment","py","Stack","width","spacing","Alert","severity","text","search","parts","split","RegExp","part","index","toLowerCase","MDEditor","val","preview","hideToolbar","height","visibleDragbar","Title","muiStyled","FullWidthStyledContainer","div","_ref2","margin","LimitedContainer","Description","title","description","variant","align","paragraph","PALETTE","Black3","_ref4","MarkdownEditor","initialDescription","onSave","isEditing","setIsEditing","useState","setDescription","justifyContent","alignItems","Tooltip","IconButton","onClick","SaveIcon","EditIcon","React","components","onComponentChange","setFilter","sortOrder","setSortOrder","localComponents","setLocalComponents","user","useAppState","anchorEl","setAnchorEl","selectedComponent","setSelectedComponent","discountAnchorEl","setDiscountAnchorEl","discountComponent","setDiscountComponent","globalDiscount","setGlobalDiscount","useGlobalDiscount","setUseGlobalDiscount","isEditingPrice","setIsEditingPrice","newPrice","setNewPrice","useEffect","component","originalIndex","discount","quantity","handleCheckAll","checked","updatedComponents","included","handleMoveComponent","direction","findIndex","newIndex","newComponents","removed","splice","idx","handleGlobalDiscountChange","debounce","func","delay","timeoutId","_len","arguments","args","Array","_key","clearTimeout","setTimeout","discountOpen","Boolean","filteredAndSortedComponents","useMemo","name","includes","sort","a","b","localeCompare","calculateDiscountedPrice","price","safeDiscount","formatPrice","handleQuantityChange","increment","prevComponents","newQuantity","Math","ComponentListContainer","ControlsBox","toggleSort","current","SortIcon","CheckBoxIcon","CheckBoxOutlineBlankIcon","size","placeholder","flexGrow","GlobalDiscountControl","FormControlLabel","control","Checkbox","event","useGlobal","marginRight","parseInt","disabled","inputProps","_component$discount","ComponentItem","selected","MoveButtonsContainer","ArrowUpwardIcon","fontSize","ArrowDownwardIcon","ComponentCheckbox","handleComponentToggle","ComponentNamePriceContainer","ComponentName","ComponentPrice","DiscountedPrice","DiscountPercentage","arrow","RemoveIcon","AddIcon","handlePopoverOpen","currentTarget","VisibilityIcon","handleDiscountPopoverOpen","DiscountIcon","color","Popover","open","onClose","handlePopoverClose","anchorOrigin","vertical","horizontal","transformOrigin","padding","EditableDescription","newDescription","marginTop","Number","handlePriceSave","handlePriceEdit","handleDiscountPopoverClose","DiscountSliderContainer","handleDiscountChange","prev","marks","maxWidth","borderRadius","marginBottom","flexWrap","opacity","flexShrink","flex","minWidth","overflow","flexDirection","_ref3","whiteSpace","fontWeight","textDecoration","marginLeft","onClientChange","clients","getClients","getClientsIsLoading","getClientsError","selectedClient","setSelectedClient","page","setPage","setSearch","filteredClients","client","companyName","currentPageClients","slice","my","pb","CheckCircle","top","left","TableContainer","border","borderColor","Table","TableBody","TableRow","TableCell","scope","firstName","lastName","vatNumber","email","Button","handleDeselectClient","mt","TableHead","textOverflow","Highlight","handleSelectClient","p","Pagination","count","ceil","handleChangePage","newPage","EMPTY_QUOTE_DETAILS","company","object","onDetailsChange","quoteHeadDetails","setQuoteHeadDetails","FormLabel","RadioGroup","row","Radio","memo","products","onAddToQuote","highlightText","rowsPerPage","setRowsPerPage","Paper","elevation","backgroundColor","boxShadow","product","src","imgUrl","alt","style","objectFit","placement","componentsProps","tooltip","cursor","category","textTransform","TablePagination","rowsPerPageOptions","onPageChange","onRowsPerPageChange","borderTop","addedProducts","onAddedProductsChange","handleSubmit","showMessage","useFlashMessage","editableProducts","setEditableProducts","note","setNote","_component$included","savedData","localStorage","getItem","parsedData","JSON","parse","dataToSave","setItem","stringify","handleInputChange","field","updatedProducts","i","SectionBorderContainer","PageHeader","productIndex","ProductContainer","Grid","container","item","xs","md","HeaderBox","ProductNameLink","to","alignSelf","handleProductRemove","DeleteIcon","ProductImage","EuroTextField","SummaryComponentList","handleComponentsChange","prevProducts","newProducts","EmptyState","minRows","preHandleSubmit","quoteSummary","_product$components","parseFloat","employeeID","theme","borderBottom","paddingBottom","maxHeight","Link","applyFilters","priceRange","isArray","CreateQuotePage","getProducts","createDocument","loading","useDocumentContext","setAddedProducts","setFilters","setMessage","setDiscount","maxPrice","setMaxPrice","newMaxPrice","prevFilters","filteredItems","productsFiltersConfig","config","getProductsFiltersConfig","priceRangeFilter","find","Loading","WhitePaperContainer","Container","pt","FlashMessage","QuoteDetails","ClientSelector","FilterBar","filterName","QuoteProductList","_id","productFound","updatedAddedProducts","console","error","SummaryQuote","async","window","scrollTo","behavior","document","_editedSummaryPayload","hash","removeItem","toFixed","replace"],"sourceRoot":""}