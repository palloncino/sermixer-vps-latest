{"version":3,"file":"static/js/549.c374ba21.chunk.js","mappings":"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","sources":["components/PageHeader/index.tsx","pages/clients/client-page.tsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["import { Paper, Typography, styled as muiStyled } from \"@mui/material\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { PALETTE } from \"../../constants/index.ts\";\n\nconst PageHeader = ({ title, description = '', margin }: any) => {\n  return (\n    <FullWidthStyledContainer margin={margin}>\n      <LimitedContainer>\n        <Title variant=\"h4\" align=\"left\">\n          {title}\n        </Title>\n        {description ? (\n          <Description variant=\"body1\" paragraph align=\"left\">\n            {description}\n          </Description>\n        ) : null}\n      </LimitedContainer>\n    </FullWidthStyledContainer>\n  );\n};\n\nconst Title = muiStyled(Typography)`\n  width: 100%;\n`;\n\nconst FullWidthStyledContainer = styled.div<{margin?: string}>`\n  margin: ${({ margin }) => margin ? margin : '4rem 0 0rem 0'};\n  padding: 24px 0 24px 0;\n`;\n\nconst LimitedContainer = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  padding: 0 1rem;\n`;\n\nconst Description = muiStyled(Typography)`\n  line-height: 2rem;\n  transition: opacity 0.5s ease-in-out; /* Smooth transition effect */\n  opacity: 1;\n\n  &:not(:hover) {\n    opacity: 0.7;\n  }\n`;\n\nexport default PageHeader;\n\n\nexport const PageHeaderStyle2 = ({ title, description = '', margin }: any) => {\n  return (\n    <FullWidthStyledContainerStyle2 margin={margin}>\n      <LimitedContainerStyle2>\n        <TitleStyle2 variant=\"h4\" gutterBottom align=\"left\">\n          {title}\n        </TitleStyle2>\n        {description ? (\n          <DescriptionStyle2 variant=\"body1\" paragraph align=\"left\">\n            {description}\n          </DescriptionStyle2>\n        ) : null}\n      </LimitedContainerStyle2>\n    </FullWidthStyledContainerStyle2>\n  );\n};\n\nconst TitleStyle2 = muiStyled(Typography)`\n  width: 100%;\n`;\n\nconst FullWidthStyledContainerStyle2 = styled(\"div\")<{margin?: string}>`\n  background: #F5F5F5;\n  border-radius: .4rem;\n  color: ${PALETTE.Black3};\n  align-text: center;\n  margin: ${({ margin }) => margin ? margin : '4rem 0 0rem 0'};\n  padding: 24px 0 24px 0;\n`;\n\nconst LimitedContainerStyle2 = styled.div`\nwidth: 100%;\nmargin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  padding: 0 1rem;\n`;\n\nconst DescriptionStyle2 = muiStyled(Typography)`\n  line-height: 2rem;\n  margin: 0;\n  transition: opacity 0.5s ease-in-out; /* Smooth transition effect */\n  opacity: 1;\n\n  &:not(:hover) {\n    opacity: 0.7;\n  }\n`;\n","import {\n    Button,\n    Card,\n    CardContent,\n    Container,\n    Grid,\n    Table,\n    TableBody,\n    TableCell,\n    TableRow,\n    Typography,\n    Tooltip,\n    Box\n} from \"@mui/material\";\nimport { FC, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { useFlashMessage } from \"state/FlashMessageContext\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { ROUTES } from \"../../constants\";\nimport { useAppState } from \"../../state/stateContext\";\nimport { ClientType } from '../../types';\nimport { WhitePaperContainer } from \"../documents/styled-components\";\nimport Loading from \"components/Loading\";\n\nconst ClientPage: FC = () => {\n    const { t } = useTranslation();\n    const { clientId } = useParams<{ clientId: string }>();\n    const { clients, getClients } = useAppState(); // assuming getClients is from the state context\n    const [theClient, setTheClient] = useState<ClientType | null>(null);\n    const [loading, setLoading] = useState(true); // Loading state\n    const location = useLocation();\n    const { showMessage } = useFlashMessage();\n\n    const fetchClients = async () => {\n        setLoading(true);\n        await getClients();  // This should fetch the clients and update the state\n        setLoading(false);\n    };\n\n    // Fetch clients if the list is empty on page load\n    useEffect(() => {\n\n        fetchClients();\n    }, [getClients, clients.length]);\n\n    // Find the client based on clientId after clients are fetched\n    useEffect(() => {\n        const foundClient = clients.find(({ id }) => `${id}` === `${clientId}`);\n        setTheClient(foundClient || null);\n    }, [clientId, clients]);\n\n    // Show success message if the client was just created\n    useEffect(() => {\n        const searchParams = new URLSearchParams(location.search);\n        if (searchParams.get('created') === 'true') {\n            showMessage(t('ClientCreatedSuccesfully'), 'success');\n            fetchClients();\n        }\n    }, [location, showMessage, t]);\n\n    // Show loading state while clients are being fetched\n    if (loading) {\n        return (\n            <Loading />\n        );\n    }\n\n    // Show 404 if the client is not found after fetching\n    if (!theClient) {\n        console.log(\"404 Error: No client found\");\n        return (\n            <Container maxWidth=\"sm\" sx={{ mt: 4, display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n                <Typography variant=\"h4\" gutterBottom color=\"error\">\n                    {t(\"404ClientNotFound\")}\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                    {t(\"404ClientNotFoundErrorMessage\", { id: clientId })}\n                </Typography>\n                <Button variant=\"contained\" color=\"primary\" component={Link} to={ROUTES().clientList}>\n                    {t(\"BackToClientsList\")}\n                </Button>\n            </Container>\n        );\n    }\n\n    return (\n        <WhitePaperContainer>\n            <Container maxWidth=\"lg\">\n                <PageHeader\n                    title={theClient.companyName || t(\"Client\")}\n                    description={t(\"ClientPageTitle\")}\n                    margin=\"0\"\n                />\n                <Grid container spacing={3} alignItems=\"center\" sx={{ mb: 3 }}>\n                    <Grid item xs={12} md={12} container justifyContent=\"flex-end\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            component={Link}\n                            to={ROUTES(clientId).editClient}\n                        >\n                            {t(\"EditClient\")}\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Card sx={{ width: \"100%\", borderRadius: 1, boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.12)' }}>\n                    <CardContent sx={{ padding: '16px 24px' }}>\n                        <Table size=\"small\">\n                            <TableBody>\n                                {[\n                                    { label: t(\"ID\"), value: theClient.id },\n                                    { label: t(\"FiscalCode\"), value: theClient.fiscalCode },\n                                    { label: t(\"VAT Number\"), value: theClient.vatNumber },\n                                    { label: t(\"First Name\"), value: theClient.firstName },\n                                    { label: t(\"Last Name\"), value: theClient.lastName },\n                                    { label: t(\"Company Name\"), value: theClient.companyName },\n                                    { label: t(\"Email\"), value: theClient.email },\n                                    { label: t(\"Mobile Number\"), value: theClient.mobileNumber },\n                                    {\n                                        label: t(\"Address\"),\n                                        value: `${theClient.address?.street}, ${theClient.address?.city}, ${theClient.address?.zipCode}, ${theClient.address?.country}`,\n                                    },\n                                    {\n                                        label: t(\"Registered\"),\n                                        value: new Date(theClient.createdAt).toLocaleDateString(),\n                                    },\n                                    {\n                                        label: t(\"Last Updated\"),\n                                        value: new Date(theClient.updatedAt).toLocaleDateString(),\n                                    },\n                                ].map(({ label, value }) => (\n                                    <TableRow key={label}>\n                                        <TableCell sx={{ fontWeight: 'bold', whiteSpace: 'nowrap', padding: '8px' }}>\n                                            {label}\n                                        </TableCell>\n                                        <TableCell sx={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', padding: '8px' }}>\n                                            <Tooltip title={value} arrow>\n                                                <Box>{value}</Box>\n                                            </Tooltip>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </CardContent>\n                </Card>\n            </Container>\n        </WhitePaperContainer>\n    );\n};\n\nexport default ClientPage;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["Title","muiStyled","Typography","FullWidthStyledContainer","styled","div","_ref2","margin","LimitedContainer","Description","_ref","title","description","_jsx","children","_jsxs","variant","align","paragraph","PALETTE","Black3","_ref4","ClientPage","_theClient$address","_theClient$address2","_theClient$address3","_theClient$address4","t","useTranslation","clientId","useParams","clients","getClients","useAppState","theClient","setTheClient","useState","loading","setLoading","location","useLocation","showMessage","useFlashMessage","fetchClients","async","useEffect","length","foundClient","find","id","URLSearchParams","search","get","Loading","WhitePaperContainer","Container","maxWidth","PageHeader","companyName","Grid","container","spacing","alignItems","sx","mb","item","xs","md","justifyContent","Button","color","component","Link","to","ROUTES","editClient","Card","width","borderRadius","boxShadow","CardContent","padding","Table","size","TableBody","label","value","fiscalCode","vatNumber","firstName","lastName","email","mobileNumber","address","street","city","zipCode","country","Date","createdAt","toLocaleDateString","updatedAt","map","TableRow","TableCell","fontWeight","whiteSpace","overflow","textOverflow","Tooltip","arrow","Box","console","log","mt","display","flexDirection","gutterBottom","clientList","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","Paper","name","overridesResolver","props","styles","root","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","paddingBottom","as"],"sourceRoot":""}