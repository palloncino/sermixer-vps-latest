{"version":3,"file":"static/js/406.c64fa709.chunk.js","mappings":"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","sources":["components/Dashboard/StatusSummary.tsx","components/Dashboard/TotalDocuments.tsx","components/Dashboard/RecentActivity.tsx","components/Dashboard/index.tsx","../node_modules/@mui/material/Table/TableContext.js","../node_modules/@mui/material/Table/Tablelvl2Context.js","../node_modules/@mui/material/TableCell/tableCellClasses.js","../node_modules/@mui/material/TableCell/TableCell.js","../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/internal/svg-icons/LastPage.js"],"sourcesContent":["import { Typography, Link, Tooltip } from '@mui/material';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { PALETTE, ROUTES } from '../../constants';\nimport { DocumentDataType } from '../../types';\n\ninterface StatusSummaryProps {\n  documents: DocumentDataType[];\n}\n\nconst StatusSummary: React.FC<StatusSummaryProps> = ({ documents }) => {\n  const { t } = useTranslation();\n\n  const statusGroups = documents.reduce((acc, doc) => {\n    Object.entries(doc.status).forEach(([key, value]) => {\n      if (value === true) {\n        if (!acc[key]) {\n          acc[key] = [];\n        }\n        acc[key].push(doc.id);\n      }\n    });\n    return acc;\n  }, {} as Record<string, string[]>);\n\n  return (\n    <StyledContainer>\n      <Typography variant=\"h6\" gutterBottom>{t('Status Summary')}</Typography>\n      {Object.entries(statusGroups).map(([status, ids]) => (\n        <StatusItem key={status}>\n          <StatusLabel>\n            {t(status)}: <StatusCount>{ids.length}</StatusCount>\n          </StatusLabel>\n          <IdList>\n            {ids.map((id, index) => (\n              <React.Fragment key={id}>\n                <Tooltip title={`Open document ${id}`}>\n                  <StyledLink\n                    component={RouterLink}\n                    to={ROUTES(id).editDocument}\n                  >\n                    {id}\n                  </StyledLink>\n                </Tooltip>\n                {index < ids.length - 1 && ', '}\n              </React.Fragment>\n            ))}\n          </IdList>\n        </StatusItem>\n      ))}\n    </StyledContainer>\n  );\n};\n\nconst StyledContainer = styled.div`\n  padding: 1.5rem;\n  border: 1px solid ${PALETTE.LightGray};\n  border-radius: 8px;\n  background-color: white;\n  height: 100%;\n  overflow-y: auto;\n`;\n\nconst StatusItem = styled.div`\n  margin-bottom: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${PALETTE.LightGray};\n\n  &:last-child {\n    margin-bottom: 0;\n    padding-bottom: 0;\n    border-bottom: none;\n  }\n`;\n\nconst StatusLabel = styled(Typography)`\n  color: ${PALETTE.DarkGray};\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst StatusCount = styled.span`\n  font-size: 1.1rem;\n  color: ${PALETTE.Blue};\n`;\n\nconst IdList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${PALETTE.Blue};\n  text-decoration: none;\n  font-size: 0.8rem;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport default StatusSummary;","import { Typography } from '@mui/material';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { PALETTE } from '../../constants';\n\ninterface TotalDocumentsProps {\n  count: number;\n}\n\nconst TotalDocuments: React.FC<{ count: number }> = ({ count }) => {\n  const { t } = useTranslation();\n\n  return (\n    <StyledContainer>\n      <Typography variant=\"h6\">{t('Total Documents')}</Typography>\n      <Typography variant=\"h3\">{count}</Typography>\n    </StyledContainer>\n  );\n};\n\nconst StyledContainer = styled.div`\n  padding: 1.5rem;\n  border: 1px solid ${PALETTE.LightGray};\n  border-radius: 8px;\n  text-align: center;\n`;\n\nexport default TotalDocuments;","import { Typography } from '@mui/material';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { PALETTE } from '../../constants';\nimport { DocumentDataType } from '../../types';\nimport { Link as RouterLink } from 'react-router-dom';\n\ninterface RecentActivityProps {\n  documents: DocumentDataType[];\n}\n\nconst RecentActivity: React.FC<RecentActivityProps> = ({ documents }) => {\n  const { t } = useTranslation();\n\n  const formatDate = (date: string) => {\n    return new Date(date).toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  return (\n    <StyledContainer>\n      <Typography variant=\"h6\" gutterBottom>{t('Recent Activity')}</Typography>\n      <ActivityList>\n        {documents.map((doc) => (\n          <ActivityItem key={doc.id}>\n            <ActivityHeader>\n              <ActivityId\n                component={RouterLink}\n                to={`/client-preventive/${doc.hash}`}\n              >\n                {t('ID')}: {doc.id}\n              </ActivityId>\n              <ActivityCompany>{doc.data.quoteHeadDetails?.company}</ActivityCompany>\n              <ActivityDate>{formatDate(doc.updatedAt)}</ActivityDate>\n            </ActivityHeader>\n            <ActivityObject>{doc.data.quoteHeadDetails?.object || doc.data.quoteHeadDetails?.description}</ActivityObject>\n          </ActivityItem>\n        ))}\n      </ActivityList>\n    </StyledContainer>\n  );\n};\n\nconst StyledContainer = styled.div`\n  padding: 1.5rem;\n  border: 1px solid ${PALETTE.LightGray};\n  border-radius: 8px;\n  background-color: white;\n  height: 100%;\n`;\n\nconst ActivityList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst ActivityItem = styled.li`\n  margin-bottom: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${PALETTE.LightGray};\n\n  &:last-child {\n    margin-bottom: 0;\n    padding-bottom: 0;\n    border-bottom: none;\n  }\n`;\n\nconst ActivityHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n`;\n\nconst ActivityId = styled(RouterLink)`\n  color: ${PALETTE.Blue};\n  font-size: 0.9rem;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ActivityCompany = styled(Typography)`\n  font-weight: bold;\n  color: ${PALETTE.DarkGray};\n  font-size: 0.9rem;\n`;\n\nconst ActivityDate = styled(Typography)`\n  color: ${PALETTE.Gray};\n  font-size: 0.8rem;\n`;\n\nconst ActivityObject = styled(Typography)`\n  font-size: 0.9rem;\n  color: ${PALETTE.Gray};\n`;\n\nexport default RecentActivity;\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDocumentContext } from '../../state/documentContext';\nimport StatusSummary from './StatusSummary';\nimport TotalDocuments from './TotalDocuments';\nimport RecentActivity from './RecentActivity';\nimport Loading from '../Loading';\nimport { Typography, Grid, Box } from '@mui/material';\nimport styled from 'styled-components';\nimport TablePagination from '@mui/material/TablePagination';\n\nconst Dashboard: React.FC = () => {\n  const { t } = useTranslation();\n  const { allDocumentsData, getAllDocuments } = useDocumentContext();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  useEffect(() => {\n    if (!allDocumentsData && getAllDocuments) {\n      getAllDocuments();\n    }\n  }, [getAllDocuments, allDocumentsData]);\n\n  if (!allDocumentsData) {\n    return <Loading />;\n  }\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <StyledContainer>\n      <Typography variant=\"h4\" gutterBottom>\n        {t('Dashboard')}\n      </Typography>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <RecentActivity documents={allDocumentsData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)} />\n          <TablePagination\n            component=\"div\"\n            count={allDocumentsData.length}\n            page={page}\n            onPageChange={handleChangePage}\n            rowsPerPage={rowsPerPage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <SummaryContainer>\n            <TotalDocuments count={allDocumentsData?.length || 0} />\n            <StatusSummary documents={allDocumentsData || []} />\n          </SummaryContainer>\n        </Grid>\n      </Grid>\n    </StyledContainer>\n  );\n};\n\nconst StyledContainer = styled(Box)`\n  padding: 2rem;\n  background-color: #f9f9f9;\n`;\n\nconst SummaryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`;\n\nexport default Dashboard;\n","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst TableContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\nexport default TableContext;","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\nexport default Tablelvl2Context;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, alpha, lighten } from '@mui/system/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: (theme.vars || theme).palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: (theme.vars || theme).palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: (theme.vars || theme).palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: (theme.vars || theme).palette.background.default\n}));\n\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n  const {\n      align = 'inherit',\n      className,\n      component: componentProp,\n      padding: paddingProp,\n      scope: scopeProp,\n      size: sizeProp,\n      sortDirection,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n  let scope = scopeProp;\n  // scope is not a valid attribute for <td/> elements.\n  // source: https://html.spec.whatwg.org/multipage/tables.html#the-td-element\n  if (component === 'td') {\n    scope = undefined;\n  } else if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body', 'footer', 'head']), PropTypes.string])\n} : void 0;\nexport default TableCell;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');"],"names":["StyledContainer","styled","div","PALETTE","LightGray","StatusItem","StatusLabel","Typography","DarkGray","StatusCount","span","Blue","IdList","StyledLink","Link","_ref","documents","t","useTranslation","statusGroups","reduce","acc","doc","Object","entries","status","forEach","_ref2","key","value","push","id","_jsxs","children","_jsx","variant","gutterBottom","map","_ref3","ids","length","index","React","Tooltip","title","component","RouterLink","to","ROUTES","editDocument","count","ActivityList","ul","ActivityItem","li","ActivityHeader","ActivityId","ActivityCompany","ActivityDate","Gray","ActivityObject","_doc$data$quoteHeadDe","_doc$data$quoteHeadDe2","_doc$data$quoteHeadDe3","date","hash","data","quoteHeadDetails","company","updatedAt","Date","toLocaleString","year","month","day","hour","minute","object","description","Box","SummaryContainer","Dashboard","allDocumentsData","getAllDocuments","useDocumentContext","page","setPage","useState","rowsPerPage","setRowsPerPage","useEffect","Loading","Grid","container","spacing","item","xs","md","RecentActivity","slice","TablePagination","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","target","TotalDocuments","StatusSummary","getTableCellUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableCellRoot","name","overridesResolver","props","styles","ownerState","root","capitalize","size","padding","align","stickyHeader","theme","_extends","typography","body2","display","verticalAlign","borderBottom","vars","palette","TableCell","border","mode","lighten","alpha","divider","darken","textAlign","color","text","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","secondary","fontSize","tableCellClasses","paddingCheckbox","width","flexDirection","position","top","zIndex","backgroundColor","background","default","inProps","ref","useThemeProps","className","componentProp","paddingProp","scope","scopeProp","sizeProp","sortDirection","variantProp","other","_objectWithoutPropertiesLoose","table","TableContext","tablelvl2","Tablelvl2Context","isHeadCell","undefined","classes","slots","composeClasses","useUtilityClasses","ariaSort","as","clsx","createSvgIcon","d"],"sourceRoot":""}