{"version":3,"file":"static/js/897.87e8c330.chunk.js","mappings":"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","sources":["components/PageHeader/index.tsx","components/ClientCreate/index.tsx","pages/clients/create-client-page.tsx"],"sourcesContent":["import { Paper, Typography, styled as muiStyled } from \"@mui/material\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { PALETTE } from \"../../constants/index.ts\";\n\nconst PageHeader = ({ title, description = '', margin }: any) => {\n  return (\n    <FullWidthStyledContainer margin={margin}>\n      <LimitedContainer>\n        <Title variant=\"h4\" align=\"left\">\n          {title}\n        </Title>\n        {description ? (\n          <Description variant=\"body1\" paragraph align=\"left\">\n            {description}\n          </Description>\n        ) : null}\n      </LimitedContainer>\n    </FullWidthStyledContainer>\n  );\n};\n\nconst Title = muiStyled(Typography)`\n  width: 100%;\n`;\n\nconst FullWidthStyledContainer = styled.div<{margin?: string}>`\n  margin: ${({ margin }) => margin ? margin : '4rem 0 0rem 0'};\n  padding: 24px 0 24px 0;\n`;\n\nconst LimitedContainer = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  padding: 0 1rem;\n`;\n\nconst Description = muiStyled(Typography)`\n  line-height: 2rem;\n  transition: opacity 0.5s ease-in-out; /* Smooth transition effect */\n  opacity: 1;\n\n  &:not(:hover) {\n    opacity: 0.7;\n  }\n`;\n\nexport default PageHeader;\n\n\nexport const PageHeaderStyle2 = ({ title, description = '', margin }: any) => {\n  return (\n    <FullWidthStyledContainerStyle2 margin={margin}>\n      <LimitedContainerStyle2>\n        <TitleStyle2 variant=\"h4\" gutterBottom align=\"left\">\n          {title}\n        </TitleStyle2>\n        {description ? (\n          <DescriptionStyle2 variant=\"body1\" paragraph align=\"left\">\n            {description}\n          </DescriptionStyle2>\n        ) : null}\n      </LimitedContainerStyle2>\n    </FullWidthStyledContainerStyle2>\n  );\n};\n\nconst TitleStyle2 = muiStyled(Typography)`\n  width: 100%;\n`;\n\nconst FullWidthStyledContainerStyle2 = styled(\"div\")<{margin?: string}>`\n  background: #F5F5F5;\n  border-radius: .4rem;\n  color: ${PALETTE.Black3};\n  align-text: center;\n  margin: ${({ margin }) => margin ? margin : '4rem 0 0rem 0'};\n  padding: 24px 0 24px 0;\n`;\n\nconst LimitedContainerStyle2 = styled.div`\nwidth: 100%;\nmargin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-items: flex-start;\n  padding: 0 1rem;\n`;\n\nconst DescriptionStyle2 = muiStyled(Typography)`\n  line-height: 2rem;\n  margin: 0;\n  transition: opacity 0.5s ease-in-out; /* Smooth transition effect */\n  opacity: 1;\n\n  &:not(:hover) {\n    opacity: 0.7;\n  }\n`;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport {\n  Alert,\n  Box,\n  Button,\n  Grid,\n  Snackbar,\n  TextField\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { useFlashMessage } from 'state/FlashMessageContext';\nimport { ClientType } from 'types';\nimport * as yup from 'yup';\nimport { ROUTES } from '../../constants';\nimport { useAppState } from '../../state/stateContext';\n\n// Helper function to validate Italian Fiscal Code\nconst isValidItalianFiscalCode = (code: string) => {\n  const regex = /^[A-Z]{6}\\d{2}[A-Z]\\d{2}[A-Z]\\d{3}[A-Z]$/i;\n  return regex.test(code);\n};\n\nconst schema = yup.object().shape({\n  fiscalCode: yup\n    .string()\n    .test('is-valid-fiscal-code', 'Invalid Italian Fiscal Code', (value) =>\n      value ? isValidItalianFiscalCode(value) : true\n    )\n    .nullable(),\n  vatNumber: yup.string().required('VAT number is required').max(14, 'VAT number must be at most 14 characters'),\n  firstName: yup.string().nullable(),\n  lastName: yup.string().nullable(),\n  companyName: yup.string().required('Company name is required'),\n  address: yup.object().shape({\n    street: yup.string().required('Street is required'),\n    city: yup.string().required('City is required'),\n    zipCode: yup.string().required('Zip code is required'),\n    country: yup.string().required('Country is required').oneOf(['IT'], 'Country must be IT'),\n  }),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  mobileNumber: yup.string(),\n});\n\nconst CreateClient: React.FC = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { showMessage } = useFlashMessage()\n  const { addClient } = useAppState();\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' as 'success' | 'error' });\n\n  const { control, handleSubmit, formState: { errors } } = useForm<ClientType>({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      address: {\n        country: 'IT'\n      }\n    }\n  });\n\n  const onSubmit = async (data: ClientType) => {\n    try {\n      const response = await addClient(data);\n      if (response?.success) {\n        setSnackbar({ open: true, message: 'Client created successfully', severity: 'success' });\n        navigate(`${ROUTES(response?.client?.id).clientPage}?created=true`)\n      } else {\n        if (response?.message) {\n          setSnackbar({ open: true, message: response?.message, severity: 'error' });\n          showMessage(response?.message, 'error')\n        }\n      }\n    } catch (error) {\n      setSnackbar({ open: true, message: typeof error.message === 'string' ? error.message : 'Error', severity: 'error' });\n    }\n  };\n\n  return (\n    <>\n      <Box p={2}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={6}>\n              <Controller\n                name=\"fiscalCode\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t('FiscalCode')}\n                    fullWidth\n                    error={!!errors.fiscalCode}\n                    helperText={errors.fiscalCode?.message}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Controller\n                name=\"vatNumber\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t('VATNumber')}\n                    fullWidth\n                    error={!!errors.vatNumber}\n                    helperText={errors.vatNumber?.message}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Controller\n                name=\"firstName\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t('FirstName')}\n                    fullWidth\n                    error={!!errors.firstName}\n                    helperText={errors.firstName?.message}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Controller\n                name=\"lastName\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t('LastName')}\n                    fullWidth\n                    error={!!errors.lastName}\n                    helperText={errors.lastName?.message}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                name=\"companyName\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t('CompanyName')}\n                    fullWidth\n                    error={!!errors.companyName}\n                    helperText={errors.companyName?.message}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                name=\"address.street\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t('Street')}\n                    fullWidth\n                    error={!!errors.address?.street}\n                    helperText={errors.address?.street?.message}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Controller\n                name=\"address.city\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t('City')}\n                    fullWidth\n                    error={!!errors.address?.city}\n                    helperText={errors.address?.city?.message}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Controller\n                name=\"address.zipCode\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t('ZipCode')}\n                    fullWidth\n                    error={!!errors.address?.zipCode}\n                    helperText={errors.address?.zipCode?.message}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                name=\"address.country\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t('Country')}\n                    fullWidth\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                    value=\"IT\"\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Controller\n                name=\"email\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t('Email')}\n                    fullWidth\n                    error={!!errors.email}\n                    helperText={errors.email?.message}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Controller\n                name=\"mobileNumber\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t('MobileNumber')}\n                    fullWidth\n                    error={!!errors.mobileNumber}\n                    helperText={errors.mobileNumber?.message}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Box display=\"flex\" justifyContent=\"flex-end\">\n                <Button\n                  type=\"button\"\n                  onClick={() => navigate(ROUTES().clients)}\n                  sx={{ mr: 2 }}\n                >\n                  {t('Cancel')}\n                </Button>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                  {t('CreateClient')}\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity}>\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default CreateClient;\n","import { Container } from \"@mui/material\";\nimport React from \"react\";\nimport CreateClient from \"../../components/ClientCreate\";\nimport PageHeader from \"../../components/PageHeader\";\nimport { WhitePaperContainer } from \"../documents/styled-components\";\n\nconst CreateClientPage: React.FC = () => {\n  return (\n    <WhitePaperContainer>\n      <Container maxWidth=\"md\">\n        <PageHeader title=\"Create New Client\" margin={'0'} />\n        <CreateClient />\n      </Container>\n    </WhitePaperContainer>\n  );\n};\n\nexport default CreateClientPage;\n"],"names":["Title","muiStyled","Typography","FullWidthStyledContainer","styled","div","_ref2","margin","LimitedContainer","Description","_ref","title","description","_jsx","children","_jsxs","variant","align","paragraph","PALETTE","Black3","_ref4","schema","yup","shape","fiscalCode","test","value","nullable","vatNumber","required","max","firstName","lastName","companyName","address","street","city","zipCode","country","oneOf","email","mobileNumber","CreateClient","t","useTranslation","navigate","useNavigate","showMessage","useFlashMessage","addClient","useAppState","snackbar","setSnackbar","useState","open","message","severity","control","handleSubmit","formState","errors","useForm","resolver","yupResolver","defaultValues","_Fragment","Box","p","onSubmit","async","response","data","_response$client","success","ROUTES","client","id","clientPage","error","Grid","container","spacing","item","xs","sm","Controller","name","render","_errors$fiscalCode","field","TextField","label","fullWidth","helperText","_errors$vatNumber","_ref3","_errors$firstName","_errors$lastName","_ref5","_errors$companyName","_ref6","_errors$address","_errors$address2","_errors$address2$stre","_ref7","_errors$address3","_errors$address4","_errors$address4$city","_ref8","_errors$address5","_errors$address6","_errors$address6$zipC","_ref9","InputProps","readOnly","_ref10","_errors$email","_ref11","_errors$mobileNumber","display","justifyContent","Button","type","onClick","clients","sx","mr","color","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","CreateClientPage","WhitePaperContainer","Container","maxWidth","PageHeader"],"sourceRoot":""}